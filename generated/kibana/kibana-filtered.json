{
  "paths": {
    "/api/actions/connector/{id}": {
      "get": {
        "operationId": "getConnectorDefault",
        "parameters": [
          {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_connector_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Get connector information",
        "tags": [
          "connectors"
        ]
      },
      "post": {
        "operationId": "createConnectorDefault",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_connector_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/create_connector_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Create a connector",
        "tags": [
          "connectors"
        ]
      },
      "put": {
        "operationId": "updateConnectorDefault",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_connector_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/update_connector_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Update a connector",
        "tags": [
          "connectors"
        ]
      },
      "delete": {
        "description": "WARNING: When you delete a connector, it cannot be recovered.",
        "operationId": "deleteConnectorDefault",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Delete a connector",
        "tags": [
          "connectors"
        ]
      }
    },
    "/api/actions/connectors": {
      "get": {
        "operationId": "getAllConnectorsDefault",
        "parameters": [],
        "responses": {},
        "summary": "Get all connectors",
        "tags": [
          "connectors"
        ]
      }
    },
    "/api/alerting/rule/{id}": {
      "get": {
        "operationId": "getRuleDefault",
        "parameters": [
          {
            "description": "The identifier for the rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_rule_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Get rule details",
        "tags": [
          "alerting"
        ]
      },
      "post": {
        "operationId": "createRuleDefault",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier for the rule. If it is omitted, an ID is randomly generated.",
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_rule_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/create_rule_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Create a rule",
        "tags": [
          "alerting"
        ]
      },
      "put": {
        "operationId": "updateRuleDefault",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier for the rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_rule_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/update_rule_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Update a rule",
        "tags": [
          "alerting"
        ]
      },
      "delete": {
        "operationId": "deleteRuleDefault",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier for the rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Delete a rule",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/alerting/rules/_find": {
      "get": {
        "operationId": "findRuleDefault",
        "parameters": [
          {
            "description": "The number of rules to return per page.",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "default": 10,
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "description": "The page number to return.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "description": "An Elasticsearch simple_query_string query that filters the objects in the response.",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The default operator to use for the simple_query_string.",
            "in": "query",
            "name": "default_search_operator",
            "required": false,
            "schema": {
              "default": "OR",
              "type": "string"
            }
          },
          {
            "description": "The fields to perform the simple_query_string parsed query against.",
            "in": "query",
            "name": "search_fields",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-go-type-skip-optional-pointer": true
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "Determines which field is used to sort the results. The field must exist in the `attributes` key of the response.",
            "in": "query",
            "name": "sort_field",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Determines the sort order.",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters the rules that have a relation with the reference objects with a specific type and identifier.",
            "in": "query",
            "name": "has_reference",
            "required": false,
            "schema": {
              "additionalProperties": false,
              "nullable": true,
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "id"
              ],
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "fields",
            "required": true,
            "schema": {
              "items": {
                "description": "The fields to return in the `attributes` key of the response.",
                "type": "string"
              },
              "type": "array",
              "x-go-type-skip-optional-pointer": true
            }
          },
          {
            "description": "A KQL string that you filter with an attribute from your saved object. It should look like `savedObjectType.attributes.title: \"myTitle\"`. However, if you used a direct attribute of a saved object, such as `updatedAt`, you must define your filter, for example, `savedObjectType.updatedAt \u003e 2018-12-22`.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter_consumers",
            "required": true,
            "schema": {
              "items": {
                "description": "List of consumers to filter.",
                "type": "string"
              },
              "type": "array",
              "x-go-type-skip-optional-pointer": true
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/find_rule_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Get information about rules",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/data_views": {
      "get": {
        "operationId": "getAllDataViewsDefault",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_all_data_views_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Get all data views",
        "tags": [
          "data views"
        ]
      }
    },
    "/api/data_views/data_view": {
      "post": {
        "operationId": "createDataViewDefault",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_data_view_request_object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_view_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Create a data view",
        "tags": [
          "data views"
        ]
      }
    },
    "/api/data_views/data_view/{viewId}": {
      "get": {
        "operationId": "getDataViewDefault",
        "parameters": [
          {
            "$ref": "#/components/parameters/view_id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_view_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Get a data view",
        "tags": [
          "data views"
        ]
      },
      "post": {
        "operationId": "updateDataViewDefault",
        "parameters": [
          {
            "$ref": "#/components/parameters/view_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_data_view_request_object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_view_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Update a data view",
        "tags": [
          "data views"
        ]
      },
      "delete": {
        "description": "WARNING: When you delete a data view, it cannot be recovered.\n",
        "operationId": "deleteDataViewDefault",
        "parameters": [
          {
            "$ref": "#/components/parameters/view_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Delete a data view",
        "tags": [
          "data views"
        ]
      }
    },
    "/api/fleet/agent_policies": {
      "get": {
        "description": "",
        "operationId": "agent-policy-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/page_size"
          },
          {
            "$ref": "#/components/parameters/page_index"
          },
          {
            "$ref": "#/components/parameters/kuery"
          },
          {
            "$ref": "#/components/parameters/format"
          },
          {
            "description": "When set to true, retrieve the related package policies for each agent policy.",
            "in": "query",
            "name": "full",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "When set to true, do not count how many agents are in the agent policy, this can improve performance if you are searching over a large number of agent policies. The \"agents\" property will always be 0 if set to true.",
            "in": "query",
            "name": "noAgentCount",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent-policy-list_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "List agent policies",
        "tags": [
          "Elastic Agent policies"
        ]
      },
      "post": {
        "operationId": "create-agent-policy",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agent_policy_create_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/create-agent-policy_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [],
        "summary": "Create agent policy",
        "tags": [
          "Elastic Agent policies"
        ]
      }
    },
    "/api/fleet/agent_policies/delete": {
      "post": {
        "operationId": "delete-agent-policy",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/delete-agent-policy_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/delete-agent-policy_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Delete agent policy by ID",
        "tags": [
          "Elastic Agent policies"
        ]
      }
    },
    "/api/fleet/agent_policies/{agentPolicyId}": {
      "parameters": [
        {
          "in": "path",
          "name": "agentPolicyId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "$ref": "#/components/parameters/format"
        }
      ],
      "get": {
        "description": "Get one agent policy",
        "operationId": "agent-policy-info",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agent-policy-info_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get agent policy by ID",
        "tags": [
          "Elastic Agent policies"
        ]
      },
      "put": {
        "operationId": "update-agent-policy",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agent_policy_update_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/update-agent-policy_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update agent policy by ID",
        "tags": [
          "Elastic Agent policies"
        ]
      }
    },
    "/api/fleet/enrollment_api_keys": {
      "get": {
        "operationId": "get-enrollment-api-keys",
        "parameters": [
          {
            "$ref": "#/components/parameters/page_size"
          },
          {
            "$ref": "#/components/parameters/page_index"
          },
          {
            "$ref": "#/components/parameters/kuery"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get-enrollment-api-keys_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "List enrollment API keys",
        "tags": [
          "Fleet enrollment API keys"
        ]
      }
    },
    "/api/fleet/epm/packages": {
      "get": {
        "operationId": "list-all-packages",
        "parameters": [
          {
            "description": "Whether to exclude the install status of each package. Enabling this option will opt in to caching for the response via `cache-control` headers. If you don't need up-to-date installation info for a package, and are querying for a list of available packages, providing this flag can improve performance substantially.",
            "in": "query",
            "name": "excludeInstallStatus",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Whether to return prerelease versions of packages (e.g. beta, rc, preview)",
            "in": "query",
            "name": "prerelease",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "deprecated": true,
            "in": "query",
            "name": "experimental",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_packages_response"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "List packages",
        "tags": [
          "Elastic Package Manager (EPM)"
        ]
      },
      "post": {
        "description": "",
        "operationId": "install-package-by-upload",
        "parameters": [
          {
            "description": "avoid erroring out on unexpected mapping update errors",
            "in": "query",
            "name": "ignoreMappingUpdateErrors",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Skip data stream rollover during index template mapping or settings update",
            "in": "query",
            "name": "skipDataStreamRollover",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/gzip": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            },
            "application/zip": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/install-package-by-upload_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Install by package by direct upload",
        "tags": [
          "Elastic Package Manager (EPM)"
        ]
      }
    },
    "/api/fleet/epm/packages/{pkgName}/{pkgVersion}": {
      "parameters": [
        {
          "in": "path",
          "name": "pkgName",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "pkgVersion",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Ignore if the package is fails signature verification",
          "in": "query",
          "name": "ignoreUnverified",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "description": "Return all fields from the package manifest, not just those supported by the Elastic Package Registry",
          "in": "query",
          "name": "full",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "description": "Whether to return prerelease versions of packages (e.g. beta, rc, preview)",
          "in": "query",
          "name": "prerelease",
          "schema": {
            "default": false,
            "type": "boolean"
          }
        }
      ],
      "get": {
        "operationId": "get-package",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get-package_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get package",
        "tags": [
          "Elastic Package Manager (EPM)"
        ]
      },
      "post": {
        "description": "",
        "operationId": "install-package",
        "parameters": [
          {
            "description": "avoid erroring out on unexpected mapping update errors",
            "in": "query",
            "name": "ignoreMappingUpdateErrors",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Skip data stream rollover during index template mapping or settings update",
            "in": "query",
            "name": "skipDataStreamRollover",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/install-package_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/install-package_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Install package",
        "tags": [
          "Elastic Package Manager (EPM)"
        ]
      },
      "put": {
        "description": "",
        "operationId": "update-package",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update-package_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/update-package_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update package settings",
        "tags": [
          "Elastic Package Manager (EPM)"
        ]
      },
      "delete": {
        "operationId": "delete-package",
        "parameters": [
          {
            "description": "delete package even if policies used by agents",
            "in": "query",
            "name": "force",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/delete-package_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/delete-package_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Delete package",
        "tags": [
          "Elastic Package Manager (EPM)"
        ]
      }
    },
    "/api/fleet/fleet_server_hosts": {
      "get": {
        "operationId": "get-fleet-server-hosts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get-fleet-server-hosts_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "List Fleet Server hosts",
        "tags": [
          "Fleet Server hosts"
        ]
      },
      "post": {
        "operationId": "post-fleet-server-hosts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/post-fleet-server-hosts_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post-fleet-server-hosts_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create Fleet Server host",
        "tags": [
          "Fleet Server hosts"
        ]
      }
    },
    "/api/fleet/fleet_server_hosts/{itemId}": {
      "parameters": [
        {
          "in": "path",
          "name": "itemId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "get-one-fleet-server-hosts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get-one-fleet-server-hosts_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get Fleet Server host by ID",
        "tags": [
          "Fleet Server hosts"
        ]
      },
      "put": {
        "operationId": "update-fleet-server-hosts",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update-fleet-server-hosts_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/update-fleet-server-hosts_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update Fleet Server host by ID",
        "tags": [
          "Fleet Server hosts"
        ]
      },
      "delete": {
        "operationId": "delete-fleet-server-hosts",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/delete-fleet-server-hosts_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Delete Fleet Server host by ID",
        "tags": [
          "Fleet Server hosts"
        ]
      }
    },
    "/api/fleet/outputs": {
      "get": {
        "operationId": "get-outputs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get-outputs_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "List outputs",
        "tags": [
          "Fleet outputs"
        ]
      },
      "post": {
        "operationId": "post-outputs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/output_create_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/post-outputs_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create output",
        "tags": [
          "Fleet outputs"
        ]
      }
    },
    "/api/fleet/outputs/{outputId}": {
      "parameters": [
        {
          "in": "path",
          "name": "outputId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "get-output",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get-output_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get output by ID",
        "tags": [
          "Fleet outputs"
        ]
      },
      "put": {
        "operationId": "update-output",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/output_update_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/update-output_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update output by ID",
        "tags": [
          "Fleet outputs"
        ]
      },
      "delete": {
        "operationId": "delete-output",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/delete-output_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Delete output by ID",
        "tags": [
          "Fleet outputs"
        ]
      }
    },
    "/api/fleet/package_policies": {
      "get": {
        "operationId": "get-package-policies",
        "parameters": [
          {
            "$ref": "#/components/parameters/page_size"
          },
          {
            "$ref": "#/components/parameters/page_index"
          },
          {
            "$ref": "#/components/parameters/kuery"
          },
          {
            "$ref": "#/components/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get-package-policies_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "security": [],
        "summary": "List package policies",
        "tags": [
          "Fleet package policies"
        ]
      },
      "post": {
        "operationId": "create-package-policy",
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/package_policy_request"
              }
            }
          },
          "description": "You should use inputs as an object and not use the deprecated inputs array."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/create-package-policy_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create package policy",
        "tags": [
          "Fleet package policies"
        ]
      }
    },
    "/api/fleet/package_policies/{packagePolicyId}": {
      "parameters": [
        {
          "in": "path",
          "name": "packagePolicyId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "get-package-policy",
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get-package-policy_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get package policy by ID",
        "tags": [
          "Fleet package policies"
        ]
      },
      "put": {
        "operationId": "update-package-policy",
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/package_policy_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/update-package-policy_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update package policy by ID",
        "tags": [
          "Fleet package policies"
        ]
      },
      "delete": {
        "operationId": "delete-package-policy",
        "parameters": [
          {
            "in": "query",
            "name": "force",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/delete-package-policy_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Delete package policy by ID",
        "tags": [
          "Fleet package policies"
        ]
      }
    },
    "/api/fleet/service_tokens": {
      "post": {
        "operationId": "generate-service-token",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/generate-service-token_response_object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create service token",
        "tags": [
          "Fleet service tokens"
        ]
      }
    },
    "/api/saved_objects/_import": {
      "post": {
        "description": "Create sets of Kibana saved objects from a file created by the export API.\nSaved objects can be imported only into the same version, a newer minor on the same major, or the next major. Exported saved objects are not backwards compatible and cannot be imported into an older version of Kibana.\n\nThis functionality is in technical preview and may be changed or removed in a future release. Elastic will work to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.\n",
        "operationId": "importSavedObjectsDefault",
        "parameters": [
          {
            "description": "Creates copies of saved objects, regenerates each object ID, and resets the origin. When used, potential conflict errors are avoided. NOTE: This option cannot be used with the `overwrite` and `compatibilityMode` options.\n",
            "in": "query",
            "name": "createNewCopies",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Overwrites saved objects when they already exist. When used, potential conflict errors are automatically resolved by overwriting the destination object. NOTE: This option cannot be used with the `createNewCopies` option.\n",
            "in": "query",
            "name": "overwrite",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Applies various adjustments to the saved objects that are being imported to maintain compatibility between different Kibana versions. Use this option only if you encounter issues with imported saved objects. NOTE: This option cannot be used with the `createNewCopies` option.\n",
            "in": "query",
            "name": "compatibilityMode",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "A file exported using the export API. NOTE: The `savedObjects.maxImportExportSize` configuration setting limits the number of saved objects which may be included in this file. Similarly, the `savedObjects.maxImportPayloadBytes` setting limits the overall size of the file that can be imported.\n"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/import_saved_objects_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Import saved objects",
        "tags": [
          "saved objects"
        ],
        "x-codeSamples": [
          {
            "label": "Import with createNewCopies",
            "lang": "cURL",
            "source": "curl \\\n  -X POST api/saved_objects/_import?createNewCopies=true\n  -H \"kbn-xsrf: true\"\n  --form file=@file.ndjson\n"
          }
        ]
      }
    },
    "/s/{spaceId}/api/observability/slos": {
      "get": {
        "description": "You must have the `read` privileges for the **SLOs** feature in the **Observability** section of the Kibana feature privileges.\n",
        "operationId": "findSlosOp",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "description": "A valid kql query to filter the SLO with",
            "in": "query",
            "name": "kqlQuery",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The page to use for pagination, must be greater or equal than 1",
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of SLOs returned by page",
            "in": "query",
            "name": "perPage",
            "schema": {
              "default": 25,
              "maximum": 5000,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "in": "query",
            "name": "sortBy",
            "schema": {
              "default": "status",
              "type": "string"
            }
          },
          {
            "description": "Sort order",
            "in": "query",
            "name": "sortDirection",
            "schema": {
              "default": "asc",
              "type": "string"
            }
          },
          {
            "description": "Hide stale SLOs from the list as defined by stale SLO threshold in SLO settings",
            "in": "query",
            "name": "hideStale",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/find_slo_response"
                }
              }
            },
            "description": "Successful request"
          }
        },
        "summary": "Get a paginated list of SLOs",
        "tags": [
          "slo"
        ]
      },
      "post": {
        "description": "You must have `all` privileges for the **SLOs** feature in the **Observability** section of the Kibana feature privileges.\n",
        "operationId": "createSloOp",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_slo_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/create_slo_response"
                }
              }
            },
            "description": "Successful request"
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ],
        "summary": "Create an SLO",
        "tags": [
          "slo"
        ]
      }
    },
    "/s/{spaceId}/api/observability/slos/{sloId}": {
      "get": {
        "description": "You must have the `read` privileges for the **SLOs** feature in the **Observability** section of the Kibana feature privileges.\n",
        "operationId": "getSloOp",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/slo_id"
          },
          {
            "description": "the specific instanceId used by the summary calculation",
            "in": "query",
            "name": "instanceId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/slo_with_summary_response"
                }
              }
            },
            "description": "Successful request"
          }
        },
        "summary": "Get an SLO",
        "tags": [
          "slo"
        ]
      },
      "put": {
        "description": "You must have the `write` privileges for the **SLOs** feature in the **Observability** section of the Kibana feature privileges.\n",
        "operationId": "updateSloOp",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/slo_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_slo_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/slo_definition_response"
                }
              }
            },
            "description": "Successful request"
          }
        },
        "summary": "Update an SLO",
        "tags": [
          "slo"
        ]
      },
      "delete": {
        "description": "You must have the `write` privileges for the **SLOs** feature in the **Observability** section of the Kibana feature privileges.\n",
        "operationId": "deleteSloOp",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/slo_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful request"
          }
        },
        "summary": "Delete an SLO",
        "tags": [
          "slo"
        ]
      }
    }
  },
  "openapi": "3.0.0",
  "components": {
    "parameters": {
      "field_name": {
        "description": "The name of the runtime field.",
        "in": "path",
        "name": "fieldName",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "format": {
        "description": "Simplified or legacy format for package inputs",
        "in": "query",
        "name": "format",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "kbn_xsrf": {
        "description": "Cross-site request forgery protection",
        "in": "header",
        "name": "kbn-xsrf",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "kuery": {
        "in": "query",
        "name": "kuery",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "page_index": {
        "in": "query",
        "name": "page",
        "required": false,
        "schema": {
          "default": 1,
          "type": "integer"
        }
      },
      "page_size": {
        "description": "The number of items to return",
        "in": "query",
        "name": "perPage",
        "required": false,
        "schema": {
          "default": 20,
          "type": "integer"
        }
      },
      "saved_object_id": {
        "description": "An identifier for the saved object.",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "saved_object_type": {
        "description": "Valid options include `visualization`, `dashboard`, `search`, `index-pattern`, `config`.",
        "in": "path",
        "name": "type",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "show_inactive": {
        "in": "query",
        "name": "showInactive",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "show_upgradeable": {
        "in": "query",
        "name": "showUpgradeable",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "slo_id": {
        "description": "An identifier for the slo.",
        "in": "path",
        "name": "sloId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "sort_field": {
        "in": "query",
        "name": "sortField",
        "required": false,
        "schema": {
          "deprecated": true,
          "type": "string"
        }
      },
      "sort_order": {
        "in": "query",
        "name": "sortOrder",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "space_id": {
        "description": "An identifier for the space. If `/s/` and the identifier are omitted from the path, the default space is used.",
        "in": "path",
        "name": "spaceId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "view_id": {
        "description": "An identifier for the data view.",
        "in": "path",
        "name": "viewId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "with_metrics": {
        "description": "Return agent metrics, false by default",
        "in": "query",
        "name": "withMetrics",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      }
    },
    "responses": {
      "error": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "statusCode": {
                  "type": "number"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "Generic Error"
      }
    },
    "schemas": {
      "400_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "required": [
          "statusCode",
          "error",
          "message"
        ],
        "title": "Bad request",
        "type": "object"
      },
      "401_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "required": [
          "statusCode",
          "error",
          "message"
        ],
        "title": "Unauthorized",
        "type": "object"
      },
      "403_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "required": [
          "statusCode",
          "error",
          "message"
        ],
        "title": "Unauthorized",
        "type": "object"
      },
      "404_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "required": [
          "statusCode",
          "error",
          "message"
        ],
        "title": "Not found",
        "type": "object"
      },
      "409_response": {
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "required": [
          "statusCode",
          "error",
          "message"
        ],
        "title": "Conflict",
        "type": "object"
      },
      "agent": {
        "properties": {
          "access_api_key": {
            "type": "string"
          },
          "access_api_key_id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "components": {
            "items": {
              "$ref": "#/components/schemas/agent_component"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "default_api_key": {
            "type": "string"
          },
          "default_api_key_id": {
            "type": "string"
          },
          "enrolled_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "last_checkin": {
            "type": "string"
          },
          "local_metadata": {
            "$ref": "#/components/schemas/agent_metadata"
          },
          "metrics": {
            "$ref": "#/components/schemas/agent_metrics"
          },
          "policy_id": {
            "type": "string"
          },
          "policy_revision": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/agent_status"
          },
          "type": {
            "$ref": "#/components/schemas/agent_type"
          },
          "unenrolled_at": {
            "type": "string"
          },
          "unenrollment_started_at": {
            "type": "string"
          },
          "user_provided_metadata": {
            "$ref": "#/components/schemas/agent_metadata"
          }
        },
        "required": [
          "type",
          "active",
          "enrolled_at",
          "id",
          "status"
        ],
        "title": "Agent",
        "type": "object"
      },
      "agent-policy-info_response_object": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/agent_policy"
          }
        },
        "required": [
          "item"
        ],
        "type": "object"
      },
      "agent-policy-list_response_object": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/agent_policy"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "page": {
            "type": "number"
          },
          "perPage": {
            "type": "number"
          },
          "total": {
            "type": "number"
          }
        },
        "required": [
          "items",
          "total",
          "page",
          "perPage"
        ],
        "type": "object"
      },
      "agent_action": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/agent_action_oneOf_0"
          },
          {
            "$ref": "#/components/schemas/agent_action_oneOf_1"
          }
        ],
        "title": "Agent action"
      },
      "agent_action_oneOf_0": {
        "properties": {
          "ack_data": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "agent_action_oneOf_1": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/agent_action_oneOf_1_data"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "agent_action_oneOf_1_data": {
        "properties": {
          "log_level": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "agent_component": {
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/agent_component_status"
          },
          "type": {
            "type": "string"
          },
          "units": {
            "items": {
              "$ref": "#/components/schemas/agent_component_unit"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "title": "Agent component",
        "type": "object"
      },
      "agent_component_status": {
        "title": "Agent component status",
        "type": "string"
      },
      "agent_component_unit": {
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "status": {
            "$ref": "#/components/schemas/agent_component_status"
          },
          "type": {
            "$ref": "#/components/schemas/agent_component_unit_type"
          }
        },
        "title": "Agent component unit",
        "type": "object"
      },
      "agent_component_unit_type": {
        "title": "Agent component unit type",
        "type": "string"
      },
      "agent_diagnostics": {
        "properties": {
          "actionId": {
            "type": "string"
          },
          "createTime": {
            "type": "string"
          },
          "filePath": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "createTime",
          "filePath",
          "actionId",
          "status"
        ],
        "title": "Agent diagnostics",
        "type": "object"
      },
      "agent_get_by_actions": {
        "items": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-go-type-skip-optional-pointer": true
        },
        "title": "Agents get by action ids",
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "agent_metadata": {
        "title": "Agent metadata",
        "type": "object",
        "x-go-type-skip-optional-pointer": true
      },
      "agent_metrics": {
        "properties": {
          "cpu_avg": {
            "description": "Average agent CPU usage during the last 5 minutes, number between 0-1",
            "type": "number"
          },
          "memory_size_byte_avg": {
            "description": "Average agent memory consumption during the last 5 minutes",
            "type": "number"
          }
        },
        "type": "object"
      },
      "agent_policy": {
        "properties": {
          "advanced_settings": {
            "description": "Advanced settings stored in the agent policy, e.g. agent_limits_go_max_procs",
            "nullable": true,
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "agent_features": {
            "items": {
              "$ref": "#/components/schemas/agent_policy_agent_features_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "agents": {
            "type": "number"
          },
          "data_output_id": {
            "nullable": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "download_source_id": {
            "nullable": true,
            "type": "string"
          },
          "fleet_server_host_id": {
            "nullable": true,
            "type": "string"
          },
          "global_data_tags": {
            "items": {
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "description": "User defined data tags that are added to all of the inputs. The values can be strings or numbers.",
              "type": "object",
              "x-go-type-skip-optional-pointer": true
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "inactivity_timeout": {
            "type": "integer"
          },
          "is_protected": {
            "description": "Indicates whether the agent policy has tamper protection enabled. Default false.",
            "type": "boolean"
          },
          "keep_monitoring_alive": {
            "description": "When set to true, monitoring will be enabled but logs/metrics collection will be disabled",
            "nullable": true,
            "type": "boolean"
          },
          "monitoring_diagnostics": {
            "$ref": "#/components/schemas/agent_policy_monitoring_diagnostics"
          },
          "monitoring_enabled": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "monitoring_http": {
            "$ref": "#/components/schemas/agent_policy_monitoring_http"
          },
          "monitoring_output_id": {
            "nullable": true,
            "type": "string"
          },
          "monitoring_pprof_enabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overrides": {
            "description": "Override settings that are defined in the agent policy. Input settings cannot be overridden. The override option should be used only in unusual circumstances and not as a routine procedure.",
            "nullable": true,
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "package_policies": {
            "description": "This field is present only when retrieving a single agent policy, or when retrieving a list of agent policies with the ?full=true parameter",
            "items": {
              "$ref": "#/components/schemas/package_policy"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "revision": {
            "type": "number"
          },
          "supports_agentless": {
            "description": "Indicates whether the agent policy supports agentless integrations. Only allowed in a serverless environment.",
            "type": "boolean"
          },
          "unenroll_timeout": {
            "type": "integer"
          },
          "unprivileged_agents": {
            "type": "number"
          },
          "updated_by": {
            "type": "string"
          },
          "updated_on": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "status",
          "name",
          "namespace"
        ],
        "title": "Agent Policy",
        "type": "object"
      },
      "agent_policy_agent_features_item": {
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "enabled"
        ],
        "type": "object"
      },
      "agent_policy_create_request": {
        "properties": {
          "agent_features": {
            "items": {
              "$ref": "#/components/schemas/agent_policy_create_request_agent_features_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "data_output_id": {
            "nullable": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "download_source_id": {
            "nullable": true,
            "type": "string"
          },
          "fleet_server_host_id": {
            "nullable": true,
            "type": "string"
          },
          "force": {
            "description": "Force agent policy creation even if packages are not verified.",
            "type": "boolean"
          },
          "global_data_tags": {
            "items": {
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "description": "User defined data tags that are added to all of the inputs. The values can be strings or numbers.",
              "type": "object",
              "x-go-type-skip-optional-pointer": true
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "inactivity_timeout": {
            "type": "integer"
          },
          "is_protected": {
            "type": "boolean"
          },
          "monitoring_enabled": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "monitoring_output_id": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "unenroll_timeout": {
            "type": "integer"
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "title": "Create agent policy request",
        "type": "object"
      },
      "agent_policy_create_request_agent_features_item": {
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "enabled"
        ],
        "type": "object"
      },
      "agent_policy_full": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/agent_policy_full_oneOf_0"
          },
          {
            "$ref": "#/components/schemas/agent_policy_full_oneOf_1"
          }
        ],
        "title": "Agent policy full response",
        "type": "object",
        "x-go-type-skip-optional-pointer": true
      },
      "agent_policy_full_oneOf_0": {
        "properties": {
          "item": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "agent_policy_full_oneOf_1": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/full_agent_policy"
          }
        },
        "type": "object"
      },
      "agent_policy_monitoring_diagnostics": {
        "properties": {
          "limit": {
            "$ref": "#/components/schemas/agent_policy_monitoring_diagnostics_limit"
          },
          "uploader": {
            "$ref": "#/components/schemas/agent_policy_monitoring_diagnostics_uploader"
          }
        },
        "type": "object"
      },
      "agent_policy_monitoring_diagnostics_limit": {
        "properties": {
          "burst": {
            "type": "number"
          },
          "interval": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "agent_policy_monitoring_diagnostics_uploader": {
        "properties": {
          "init_dur": {
            "type": "string"
          },
          "max_dur": {
            "type": "string"
          },
          "max_retries": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "agent_policy_monitoring_http": {
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "number"
          }
        },
        "required": [
          "enabled"
        ],
        "type": "object"
      },
      "agent_policy_update_request": {
        "properties": {
          "agent_features": {
            "items": {
              "$ref": "#/components/schemas/agent_policy_update_request_agent_features_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "data_output_id": {
            "nullable": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "download_source_id": {
            "nullable": true,
            "type": "string"
          },
          "fleet_server_host_id": {
            "nullable": true,
            "type": "string"
          },
          "force": {
            "description": "Force agent policy creation even if packages are not verified.",
            "type": "boolean"
          },
          "inactivity_timeout": {
            "type": "integer"
          },
          "is_protected": {
            "type": "boolean"
          },
          "monitoring_enabled": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "monitoring_output_id": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "unenroll_timeout": {
            "type": "integer"
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "title": "Update agent policy request",
        "type": "object"
      },
      "agent_policy_update_request_agent_features_item": {
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "enabled"
        ],
        "type": "object"
      },
      "agent_status": {
        "title": "Elastic Agent status",
        "type": "string"
      },
      "agent_type": {
        "title": "Agent type",
        "type": "string"
      },
      "allownoindex": {
        "description": "Allows the data view saved object to exist before the data is available.",
        "type": "boolean"
      },
      "attributes": {
        "description": "The data that you want to create. WARNING: When you create saved objects, attributes are not validated, which allows you to pass arbitrary and ill-formed data into the API that can break Kibana. Make sure any data that you send to the API is properly formed.\n",
        "type": "object",
        "x-go-type-skip-optional-pointer": true
      },
      "budgeting_method": {
        "description": "The budgeting method to use when computing the rollup data.",
        "title": "Budgeting method",
        "type": "string"
      },
      "bulk_install_packages_response": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/bulk_install_packages_response_item_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "response": {
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/bulk_install_packages_response_response_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "items"
        ],
        "title": "Bulk install packages response",
        "type": "object"
      },
      "bulk_install_packages_response_item_item": {
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "bulk_install_packages_response_response_item": {
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "bulk_upgrade_agents": {
        "properties": {
          "agents": {
            "oneOf": [
              {
                "description": "KQL query string, leave empty to action all agents",
                "type": "string"
              },
              {
                "description": "list of agent IDs",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              }
            ]
          },
          "force": {
            "description": "Force upgrade, skipping validation (should be used with caution)",
            "type": "boolean"
          },
          "rollout_duration_seconds": {
            "description": "rolling upgrade window duration in seconds",
            "type": "number"
          },
          "skipRateLimitCheck": {
            "description": "Skip rate limit check for upgrade",
            "type": "boolean"
          },
          "source_uri": {
            "description": "alternative upgrade binary download url",
            "type": "string"
          },
          "start_time": {
            "description": "start time of upgrade in ISO 8601 format",
            "type": "string"
          },
          "version": {
            "description": "version to upgrade to",
            "type": "string"
          }
        },
        "required": [
          "agents",
          "version"
        ],
        "title": "Bulk upgrade agents",
        "type": "object"
      },
      "core_status_redactedResponse": {
        "description": "A minimal representation of Kibana's operational status.",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/core_status_redactedResponse_status"
          }
        },
        "required": [
          "status"
        ],
        "type": "object"
      },
      "core_status_redactedResponse_status": {
        "properties": {
          "overall": {
            "$ref": "#/components/schemas/core_status_redactedResponse_status_overall"
          }
        },
        "required": [
          "overall"
        ],
        "type": "object"
      },
      "core_status_redactedResponse_status_overall": {
        "properties": {
          "level": {
            "description": "Service status levels as human and machine readable values.",
            "type": "string"
          }
        },
        "required": [
          "level"
        ],
        "type": "object"
      },
      "core_status_response": {
        "description": "Kibana's operational status as well as a detailed breakdown of plugin statuses indication of various loads (like event loop utilization and network traffic) at time of request.",
        "properties": {
          "metrics": {
            "$ref": "#/components/schemas/core_status_response_metrics"
          },
          "name": {
            "description": "Kibana instance name.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/core_status_response_status"
          },
          "uuid": {
            "description": "Unique, generated Kibana instance UUID. This UUID should persist even if the Kibana process restarts.",
            "type": "string"
          },
          "version": {
            "$ref": "#/components/schemas/core_status_response_version"
          }
        },
        "required": [
          "name",
          "uuid",
          "version",
          "status",
          "metrics"
        ],
        "type": "object"
      },
      "core_status_response_metrics": {
        "description": "Metric groups collected by Kibana.",
        "properties": {
          "collection_interval_in_millis": {
            "description": "The interval at which metrics should be collected.",
            "type": "number"
          },
          "elasticsearch_client": {
            "$ref": "#/components/schemas/core_status_response_metrics_elasticsearch_client"
          },
          "last_updated": {
            "description": "The time metrics were collected.",
            "type": "string"
          }
        },
        "required": [
          "elasticsearch_client",
          "last_updated",
          "collection_interval_in_millis"
        ],
        "type": "object"
      },
      "core_status_response_metrics_elasticsearch_client": {
        "description": "Current network metrics of Kibana's Elasticsearch client.",
        "properties": {
          "totalActiveSockets": {
            "description": "Count of network sockets currently in use.",
            "type": "number"
          },
          "totalIdleSockets": {
            "description": "Count of network sockets currently idle.",
            "type": "number"
          },
          "totalQueuedRequests": {
            "description": "Count of requests not yet assigned to sockets.",
            "type": "number"
          }
        },
        "required": [
          "totalActiveSockets",
          "totalIdleSockets",
          "totalQueuedRequests"
        ],
        "type": "object"
      },
      "core_status_response_status": {
        "properties": {
          "core": {
            "$ref": "#/components/schemas/core_status_response_status_core"
          },
          "overall": {
            "$ref": "#/components/schemas/core_status_response_status_overall"
          },
          "plugins": {
            "additionalProperties": {
              "$ref": "#/components/schemas/core_status_response_status_plugins_item"
            },
            "description": "A dynamic mapping of plugin ID to plugin status.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "overall",
          "core",
          "plugins"
        ],
        "type": "object"
      },
      "core_status_response_status_core": {
        "description": "Statuses of core Kibana services.",
        "properties": {
          "elasticsearch": {
            "$ref": "#/components/schemas/core_status_response_status_core_elasticsearch"
          },
          "savedObjects": {
            "$ref": "#/components/schemas/core_status_response_status_core_savedObjects"
          }
        },
        "required": [
          "elasticsearch",
          "savedObjects"
        ],
        "type": "object"
      },
      "core_status_response_status_core_elasticsearch": {
        "properties": {
          "detail": {
            "description": "Human readable detail of the service status.",
            "type": "string"
          },
          "documentationUrl": {
            "description": "A URL to further documentation regarding this service.",
            "type": "string"
          },
          "level": {
            "description": "Service status levels as human and machine readable values.",
            "type": "string"
          },
          "meta": {
            "description": "An unstructured set of extra metadata about this service.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "summary": {
            "description": "A human readable summary of the service status.",
            "type": "string"
          }
        },
        "required": [
          "level",
          "summary",
          "meta"
        ],
        "type": "object"
      },
      "core_status_response_status_core_savedObjects": {
        "properties": {
          "detail": {
            "description": "Human readable detail of the service status.",
            "type": "string"
          },
          "documentationUrl": {
            "description": "A URL to further documentation regarding this service.",
            "type": "string"
          },
          "level": {
            "description": "Service status levels as human and machine readable values.",
            "type": "string"
          },
          "meta": {
            "description": "An unstructured set of extra metadata about this service.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "summary": {
            "description": "A human readable summary of the service status.",
            "type": "string"
          }
        },
        "required": [
          "level",
          "summary",
          "meta"
        ],
        "type": "object"
      },
      "core_status_response_status_overall": {
        "properties": {
          "detail": {
            "description": "Human readable detail of the service status.",
            "type": "string"
          },
          "documentationUrl": {
            "description": "A URL to further documentation regarding this service.",
            "type": "string"
          },
          "level": {
            "description": "Service status levels as human and machine readable values.",
            "type": "string"
          },
          "meta": {
            "description": "An unstructured set of extra metadata about this service.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "summary": {
            "description": "A human readable summary of the service status.",
            "type": "string"
          }
        },
        "required": [
          "level",
          "summary",
          "meta"
        ],
        "type": "object"
      },
      "core_status_response_status_plugins_item": {
        "properties": {
          "detail": {
            "description": "Human readable detail of the service status.",
            "type": "string"
          },
          "documentationUrl": {
            "description": "A URL to further documentation regarding this service.",
            "type": "string"
          },
          "level": {
            "description": "Service status levels as human and machine readable values.",
            "type": "string"
          },
          "meta": {
            "description": "An unstructured set of extra metadata about this service.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "summary": {
            "description": "A human readable summary of the service status.",
            "type": "string"
          }
        },
        "required": [
          "level",
          "summary",
          "meta"
        ],
        "type": "object"
      },
      "core_status_response_version": {
        "properties": {
          "build_date": {
            "description": "The date and time of this build.",
            "type": "string"
          },
          "build_flavor": {
            "description": "The build flavour determines configuration and behavior of Kibana. On premise users will almost always run the \"traditional\" flavour, while other flavours are reserved for Elastic-specific use cases.",
            "type": "string"
          },
          "build_hash": {
            "description": "A unique hash value representing the git commit of this Kibana build.",
            "type": "string"
          },
          "build_number": {
            "description": "A monotonically increasing number, each subsequent build will have a higher number.",
            "type": "number"
          },
          "build_snapshot": {
            "description": "Whether this build is a snapshot build.",
            "type": "boolean"
          },
          "number": {
            "description": "A semantic version number.",
            "type": "string"
          }
        },
        "required": [
          "number",
          "build_hash",
          "build_number",
          "build_snapshot",
          "build_flavor",
          "build_date"
        ],
        "type": "object"
      },
      "create-agent-policy_response_object": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/agent_policy"
          }
        },
        "type": "object"
      },
      "create-package-policy_response_object": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/package_policy"
          }
        },
        "required": [
          "item"
        ],
        "type": "object"
      },
      "create_connector_request": {
        "properties": {
          "config": {
            "default": {},
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "type": "string"
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string"
          },
          "secrets": {
            "default": {},
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "name",
          "connector_type_id"
        ],
        "type": "object"
      },
      "create_connector_response_object": {
        "properties": {
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "connector_type_id": {
            "description": "The connector type identifier.",
            "type": "string"
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string"
          },
          "is_deprecated": {
            "description": "Indicates whether the connector is deprecated.",
            "type": "boolean"
          },
          "is_missing_secrets": {
            "description": "Indicates whether the connector is missing secrets.",
            "type": "boolean"
          },
          "is_preconfigured": {
            "description": "Indicates whether the connector is preconfigured. If true, the `config` and `is_missing_secrets` properties are omitted from the response. ",
            "type": "boolean"
          },
          "is_system_action": {
            "description": "Indicates whether the connector is used for system actions.",
            "type": "boolean"
          },
          "name": {
            "description": " The name of the rule.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "connector_type_id",
          "is_preconfigured",
          "is_deprecated",
          "is_system_action"
        ],
        "type": "object"
      },
      "create_data_view_request_object": {
        "properties": {
          "data_view": {
            "$ref": "#/components/schemas/create_data_view_request_object_data_view"
          },
          "override": {
            "default": false,
            "description": "Override an existing data view if a data view with the provided title already exists.",
            "type": "boolean"
          }
        },
        "required": [
          "data_view"
        ],
        "title": "Create data view request",
        "type": "object"
      },
      "create_data_view_request_object_data_view": {
        "description": "The data view object.",
        "properties": {
          "allowNoIndex": {
            "$ref": "#/components/schemas/allownoindex"
          },
          "fieldAttrs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/fieldattrs"
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "fieldFormats": {
            "$ref": "#/components/schemas/fieldformats"
          },
          "fields": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "description": "The data view name.",
            "type": "string"
          },
          "namespaces": {
            "$ref": "#/components/schemas/namespaces"
          },
          "runtimeFieldMap": {
            "additionalProperties": {
              "$ref": "#/components/schemas/runtimefieldmap"
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "sourceFilters": {
            "$ref": "#/components/schemas/sourcefilters"
          },
          "timeFieldName": {
            "$ref": "#/components/schemas/timefieldname"
          },
          "title": {
            "$ref": "#/components/schemas/title"
          },
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "typeMeta": {
            "$ref": "#/components/schemas/typemeta"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "title"
        ],
        "type": "object"
      },
      "create_rule_request": {
        "properties": {
          "actions": {
            "default": [],
            "items": {
              "$ref": "#/components/schemas/create_rule_request_actions_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "alert_delay": {
            "$ref": "#/components/schemas/create_rule_request_alert_delay"
          },
          "consumer": {
            "description": "The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.",
            "type": "string"
          },
          "enabled": {
            "default": true,
            "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.",
            "type": "string"
          },
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          },
          "params": {
            "default": {},
            "description": "The parameters for the rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The rule type identifier.",
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/create_rule_request_schedule"
          },
          "tags": {
            "default": [],
            "description": "The tags for the rule.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "throttle": {
            "description": "Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "name",
          "rule_type_id",
          "consumer",
          "schedule"
        ],
        "type": "object"
      },
      "create_rule_request_actions_item": {
        "description": "An action that runs under defined conditions.",
        "properties": {
          "alerts_filter": {
            "$ref": "#/components/schemas/create_rule_request_actions_item_alerts_filter"
          },
          "frequency": {
            "$ref": "#/components/schemas/create_rule_request_actions_item_frequency"
          },
          "group": {
            "description": "The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.",
            "type": "string"
          },
          "id": {
            "description": "The identifier for the connector saved object.",
            "type": "string"
          },
          "params": {
            "default": {},
            "description": "The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "use_alert_data_for_template": {
            "description": "Indicates whether to use alert data as a template.",
            "type": "boolean"
          },
          "uuid": {
            "description": "A universally unique identifier (UUID) for the action.",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "create_rule_request_actions_item_alerts_filter": {
        "description": "Conditions that affect whether the action runs. If you specify multiple conditions, all conditions must be met for the action to run. For example, if an alert occurs within the specified time frame and matches the query, the action runs.",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/create_rule_request_actions_item_alerts_filter_query"
          },
          "timeframe": {
            "$ref": "#/components/schemas/create_rule_request_actions_item_alerts_filter_timeframe"
          }
        },
        "type": "object"
      },
      "create_rule_request_actions_item_alerts_filter_query": {
        "properties": {
          "dsl": {
            "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL).",
            "type": "string"
          },
          "filters": {
            "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL) as defined in the `kbn-es-query` package.",
            "items": {
              "$ref": "#/components/schemas/create_rule_request_actions_item_alerts_filter_query_filters_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "kql": {
            "description": "A filter written in Kibana Query Language (KQL).",
            "type": "string"
          }
        },
        "required": [
          "kql",
          "filters"
        ],
        "type": "object"
      },
      "create_rule_request_actions_item_alerts_filter_query_filters_item": {
        "properties": {
          "$state": {
            "$ref": "#/components/schemas/create_rule_request_actions_item_alerts_filter_query_filters_item_$state"
          },
          "meta": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "query": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "meta"
        ],
        "type": "object"
      },
      "create_rule_request_actions_item_alerts_filter_query_filters_item_$state": {
        "properties": {
          "store": {
            "description": "A filter can be either specific to an application context or applied globally.",
            "type": "string"
          }
        },
        "required": [
          "store"
        ],
        "type": "object"
      },
      "create_rule_request_actions_item_alerts_filter_timeframe": {
        "description": "Defines a period that limits whether the action runs.",
        "properties": {
          "days": {
            "description": "Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.",
            "items": {
              "type": "integer"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "hours": {
            "$ref": "#/components/schemas/create_rule_request_actions_item_alerts_filter_timeframe_hours"
          },
          "timezone": {
            "description": "The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.",
            "type": "string"
          }
        },
        "required": [
          "days",
          "hours",
          "timezone"
        ],
        "type": "object"
      },
      "create_rule_request_actions_item_alerts_filter_timeframe_hours": {
        "description": "Defines the range of time in a day that the action can run. If the `start` value is `00:00` and the `end` value is `24:00`, actions be generated all day.",
        "properties": {
          "end": {
            "description": "The end of the time frame in 24-hour notation (`hh:mm`).",
            "type": "string"
          },
          "start": {
            "description": "The start of the time frame in 24-hour notation (`hh:mm`).",
            "type": "string"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "type": "object"
      },
      "create_rule_request_actions_item_frequency": {
        "properties": {
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "type": "string"
          },
          "summary": {
            "description": "Indicates whether the action is a summary.",
            "type": "boolean"
          },
          "throttle": {
            "description": "The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if `notify_when` is set to `onThrottleInterval`. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "summary",
          "notify_when",
          "throttle"
        ],
        "type": "object"
      },
      "create_rule_request_alert_delay": {
        "description": "Indicates that an alert occurs only when the specified number of consecutive runs met the rule conditions.",
        "properties": {
          "active": {
            "description": "The number of consecutive runs that must meet the rule conditions.",
            "type": "number"
          }
        },
        "required": [
          "active"
        ],
        "type": "object"
      },
      "create_rule_request_schedule": {
        "description": "The check interval, which specifies how frequently the rule conditions are checked.",
        "properties": {
          "interval": {
            "description": "The interval is specified in seconds, minutes, hours, or days.",
            "type": "string"
          }
        },
        "required": [
          "interval"
        ],
        "type": "object"
      },
      "create_rule_response_object": {
        "properties": {
          "actions": {
            "items": {
              "$ref": "#/components/schemas/create_rule_response_object_actions_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "active_snoozes": {
            "items": {
              "description": "List of active snoozes for the rule.",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "alert_delay": {
            "$ref": "#/components/schemas/create_rule_response_object_alert_delay"
          },
          "api_key_created_by_user": {
            "description": "Indicates whether the API key that is associated with the rule was created by the user.",
            "nullable": true,
            "type": "boolean"
          },
          "api_key_owner": {
            "description": "The owner of the API key that is associated with the rule and used to run background tasks.",
            "nullable": true,
            "type": "string"
          },
          "consumer": {
            "description": "The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.",
            "type": "string"
          },
          "created_at": {
            "description": "The date and time that the rule was created.",
            "type": "string"
          },
          "created_by": {
            "description": "The identifier for the user that created the rule.",
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
            "type": "boolean"
          },
          "execution_status": {
            "$ref": "#/components/schemas/create_rule_response_object_execution_status"
          },
          "id": {
            "description": "The identifier for the rule.",
            "type": "string"
          },
          "is_snoozed_until": {
            "description": "The date when the rule will no longer be snoozed.",
            "nullable": true,
            "type": "string"
          },
          "last_run": {
            "$ref": "#/components/schemas/create_rule_response_object_last_run"
          },
          "mapped_params": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "monitoring": {
            "$ref": "#/components/schemas/create_rule_response_object_monitoring"
          },
          "mute_all": {
            "description": "Indicates whether all alerts are muted.",
            "type": "boolean"
          },
          "muted_alert_ids": {
            "items": {
              "description": "List of identifiers of muted alerts. ",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "description": " The name of the rule.",
            "type": "string"
          },
          "next_run": {
            "description": "Date and time of the next run of the rule.",
            "nullable": true,
            "type": "string"
          },
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          },
          "params": {
            "description": "The parameters for the rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "revision": {
            "description": "The rule revision number.",
            "type": "number"
          },
          "rule_type_id": {
            "description": "The rule type identifier.",
            "type": "string"
          },
          "running": {
            "description": "Indicates whether the rule is running.",
            "nullable": true,
            "type": "boolean"
          },
          "schedule": {
            "$ref": "#/components/schemas/create_rule_response_object_schedule"
          },
          "scheduled_task_id": {
            "description": "Identifier of the scheduled task.",
            "type": "string"
          },
          "snooze_schedule": {
            "items": {
              "$ref": "#/components/schemas/create_rule_response_object_snooze_schedule_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "tags": {
            "items": {
              "description": "The tags for the rule.",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "throttle": {
            "deprecated": true,
            "description": "Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          },
          "updated_at": {
            "description": "The date and time that the rule was updated most recently.",
            "type": "string"
          },
          "updated_by": {
            "description": "The identifier for the user that updated this rule most recently.",
            "nullable": true,
            "type": "string"
          },
          "view_in_app_relative_url": {
            "description": "Relative URL to view rule in the app.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "id",
          "enabled",
          "name",
          "tags",
          "rule_type_id",
          "consumer",
          "schedule",
          "actions",
          "params",
          "created_by",
          "updated_by",
          "created_at",
          "updated_at",
          "api_key_owner",
          "mute_all",
          "muted_alert_ids",
          "execution_status",
          "revision"
        ],
        "type": "object"
      },
      "create_rule_response_object_actions_item": {
        "properties": {
          "alerts_filter": {
            "$ref": "#/components/schemas/create_rule_response_object_actions_item_alerts_filter"
          },
          "connector_type_id": {
            "description": "The type of connector. This property appears in responses but cannot be set in requests.",
            "type": "string"
          },
          "frequency": {
            "$ref": "#/components/schemas/create_rule_response_object_actions_item_frequency"
          },
          "group": {
            "description": "The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.",
            "type": "string"
          },
          "id": {
            "description": "The identifier for the connector saved object.",
            "type": "string"
          },
          "params": {
            "description": "The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "use_alert_data_for_template": {
            "description": "Indicates whether to use alert data as a template.",
            "type": "boolean"
          },
          "uuid": {
            "description": "A universally unique identifier (UUID) for the action.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "connector_type_id",
          "params"
        ],
        "type": "object"
      },
      "create_rule_response_object_actions_item_alerts_filter": {
        "description": "Defines a period that limits whether the action runs.",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/create_rule_response_object_actions_item_alerts_filter_query"
          },
          "timeframe": {
            "$ref": "#/components/schemas/create_rule_response_object_actions_item_alerts_filter_timeframe"
          }
        },
        "type": "object"
      },
      "create_rule_response_object_actions_item_alerts_filter_query": {
        "properties": {
          "dsl": {
            "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL).",
            "type": "string"
          },
          "filters": {
            "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL) as defined in the `kbn-es-query` package.",
            "items": {
              "$ref": "#/components/schemas/create_rule_response_object_actions_item_alerts_filter_query_filters_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "kql": {
            "description": "A filter written in Kibana Query Language (KQL).",
            "type": "string"
          }
        },
        "required": [
          "kql",
          "filters"
        ],
        "type": "object"
      },
      "create_rule_response_object_actions_item_alerts_filter_query_filters_item": {
        "properties": {
          "$state": {
            "$ref": "#/components/schemas/create_rule_response_object_actions_item_alerts_filter_query_filters_item_$state"
          },
          "meta": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "query": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "meta"
        ],
        "type": "object"
      },
      "create_rule_response_object_actions_item_alerts_filter_query_filters_item_$state": {
        "properties": {
          "store": {
            "description": "A filter can be either specific to an application context or applied globally.",
            "type": "string"
          }
        },
        "required": [
          "store"
        ],
        "type": "object"
      },
      "create_rule_response_object_actions_item_alerts_filter_timeframe": {
        "properties": {
          "days": {
            "description": "Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.",
            "items": {
              "type": "integer"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "hours": {
            "$ref": "#/components/schemas/create_rule_response_object_actions_item_alerts_filter_timeframe_hours"
          },
          "timezone": {
            "description": "The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.",
            "type": "string"
          }
        },
        "required": [
          "days",
          "hours",
          "timezone"
        ],
        "type": "object"
      },
      "create_rule_response_object_actions_item_alerts_filter_timeframe_hours": {
        "properties": {
          "end": {
            "description": "The end of the time frame in 24-hour notation (`hh:mm`).",
            "type": "string"
          },
          "start": {
            "description": "The start of the time frame in 24-hour notation (`hh:mm`).",
            "type": "string"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "type": "object"
      },
      "create_rule_response_object_actions_item_frequency": {
        "properties": {
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "type": "string"
          },
          "summary": {
            "description": "Indicates whether the action is a summary.",
            "type": "boolean"
          },
          "throttle": {
            "description": "The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if 'notify_when' is set to 'onThrottleInterval'. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "summary",
          "notify_when",
          "throttle"
        ],
        "type": "object"
      },
      "create_rule_response_object_alert_delay": {
        "description": "Indicates that an alert occurs only when the specified number of consecutive runs met the rule conditions.",
        "properties": {
          "active": {
            "description": "The number of consecutive runs that must meet the rule conditions.",
            "type": "number"
          }
        },
        "required": [
          "active"
        ],
        "type": "object"
      },
      "create_rule_response_object_execution_status": {
        "properties": {
          "error": {
            "$ref": "#/components/schemas/create_rule_response_object_execution_status_error"
          },
          "last_duration": {
            "description": "Duration of last execution of the rule.",
            "type": "number"
          },
          "last_execution_date": {
            "description": "The date and time when rule was executed last.",
            "type": "string"
          },
          "status": {
            "description": "Status of rule execution.",
            "type": "string"
          },
          "warning": {
            "$ref": "#/components/schemas/create_rule_response_object_execution_status_warning"
          }
        },
        "required": [
          "status",
          "last_execution_date"
        ],
        "type": "object"
      },
      "create_rule_response_object_execution_status_error": {
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "reason": {
            "description": "Reason for error.",
            "type": "string"
          }
        },
        "required": [
          "reason",
          "message"
        ],
        "type": "object"
      },
      "create_rule_response_object_execution_status_warning": {
        "properties": {
          "message": {
            "description": "Warning message.",
            "type": "string"
          },
          "reason": {
            "description": "Reason for warning.",
            "type": "string"
          }
        },
        "required": [
          "reason",
          "message"
        ],
        "type": "object"
      },
      "create_rule_response_object_last_run": {
        "nullable": true,
        "properties": {
          "alerts_count": {
            "$ref": "#/components/schemas/create_rule_response_object_last_run_alerts_count"
          },
          "outcome": {
            "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
            "type": "string"
          },
          "outcome_msg": {
            "items": {
              "description": "Outcome message generated during last rule run.",
              "type": "string"
            },
            "nullable": true,
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "outcome_order": {
            "description": "Order of the outcome.",
            "type": "number"
          },
          "warning": {
            "description": "Warning of last rule execution.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "outcome",
          "alerts_count"
        ],
        "type": "object"
      },
      "create_rule_response_object_last_run_alerts_count": {
        "properties": {
          "active": {
            "description": "Number of active alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "ignored": {
            "description": "Number of ignored alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "new": {
            "description": "Number of new alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "recovered": {
            "description": "Number of recovered alerts during last run.",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "create_rule_response_object_monitoring": {
        "description": "Monitoring details of the rule.",
        "properties": {
          "run": {
            "$ref": "#/components/schemas/create_rule_response_object_monitoring_run"
          }
        },
        "required": [
          "run"
        ],
        "type": "object"
      },
      "create_rule_response_object_monitoring_run": {
        "description": "Rule run details.",
        "properties": {
          "calculated_metrics": {
            "$ref": "#/components/schemas/create_rule_response_object_monitoring_run_calculated_metrics"
          },
          "history": {
            "description": "History of the rule run.",
            "items": {
              "$ref": "#/components/schemas/create_rule_response_object_monitoring_run_history_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "last_run": {
            "$ref": "#/components/schemas/create_rule_response_object_monitoring_run_last_run"
          }
        },
        "required": [
          "history",
          "calculated_metrics",
          "last_run"
        ],
        "type": "object"
      },
      "create_rule_response_object_monitoring_run_calculated_metrics": {
        "description": "Calculation of different percentiles and success ratio.",
        "properties": {
          "p50": {
            "type": "number"
          },
          "p95": {
            "type": "number"
          },
          "p99": {
            "type": "number"
          },
          "success_ratio": {
            "type": "number"
          }
        },
        "required": [
          "success_ratio"
        ],
        "type": "object"
      },
      "create_rule_response_object_monitoring_run_history_item": {
        "properties": {
          "duration": {
            "description": "Duration of the rule run.",
            "type": "number"
          },
          "outcome": {
            "$ref": "#/components/schemas/create_rule_response_object_monitoring_run_history_item_outcome"
          },
          "success": {
            "description": "Indicates whether the rule run was successful.",
            "type": "boolean"
          },
          "timestamp": {
            "description": "Time of rule run.",
            "type": "number"
          }
        },
        "required": [
          "success",
          "timestamp"
        ],
        "type": "object"
      },
      "create_rule_response_object_monitoring_run_history_item_outcome": {
        "properties": {
          "alerts_count": {
            "$ref": "#/components/schemas/create_rule_response_object_monitoring_run_history_item_outcome_alerts_count"
          },
          "outcome": {
            "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
            "type": "string"
          },
          "outcome_msg": {
            "items": {
              "description": "Outcome message generated during last rule run.",
              "type": "string"
            },
            "nullable": true,
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "outcome_order": {
            "description": "Order of the outcome.",
            "type": "number"
          },
          "warning": {
            "description": "Warning of last rule execution.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "outcome",
          "alerts_count"
        ],
        "type": "object"
      },
      "create_rule_response_object_monitoring_run_history_item_outcome_alerts_count": {
        "properties": {
          "active": {
            "description": "Number of active alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "ignored": {
            "description": "Number of ignored alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "new": {
            "description": "Number of new alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "recovered": {
            "description": "Number of recovered alerts during last run.",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "create_rule_response_object_monitoring_run_last_run": {
        "properties": {
          "metrics": {
            "$ref": "#/components/schemas/create_rule_response_object_monitoring_run_last_run_metrics"
          },
          "timestamp": {
            "description": "Time of the most recent rule run.",
            "type": "string"
          }
        },
        "required": [
          "timestamp",
          "metrics"
        ],
        "type": "object"
      },
      "create_rule_response_object_monitoring_run_last_run_metrics": {
        "properties": {
          "duration": {
            "description": "Duration of most recent rule run.",
            "type": "number"
          },
          "gap_duration_s": {
            "description": "Duration in seconds of rule run gap.",
            "nullable": true,
            "type": "number"
          },
          "total_alerts_created": {
            "description": "Total number of alerts created during last rule run.",
            "nullable": true,
            "type": "number"
          },
          "total_alerts_detected": {
            "description": "Total number of alerts detected during last rule run.",
            "nullable": true,
            "type": "number"
          },
          "total_indexing_duration_ms": {
            "description": "Total time spent indexing documents during last rule run in milliseconds.",
            "nullable": true,
            "type": "number"
          },
          "total_search_duration_ms": {
            "description": "Total time spent performing Elasticsearch searches as measured by Kibana; includes network latency and time spent serializing or deserializing the request and response.",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "create_rule_response_object_schedule": {
        "properties": {
          "interval": {
            "description": "The interval is specified in seconds, minutes, hours, or days.",
            "type": "string"
          }
        },
        "required": [
          "interval"
        ],
        "type": "object"
      },
      "create_rule_response_object_snooze_schedule_item": {
        "properties": {
          "duration": {
            "description": "Duration of the rule snooze schedule.",
            "type": "number"
          },
          "id": {
            "description": "Identifier of the rule snooze schedule.",
            "type": "string"
          },
          "rRule": {
            "$ref": "#/components/schemas/create_rule_response_object_snooze_schedule_item_rRule"
          },
          "skipRecurrences": {
            "items": {
              "description": "Skips recurrence of rule on this date.",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "duration",
          "rRule"
        ],
        "type": "object"
      },
      "create_rule_response_object_snooze_schedule_item_rRule": {
        "properties": {
          "byhour": {
            "items": {
              "description": "Indicates hours of the day to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byminute": {
            "items": {
              "description": "Indicates minutes of the hour to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bymonth": {
            "items": {
              "description": "Indicates months of the year that this rule should recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bymonthday": {
            "items": {
              "description": "Indicates the days of the month to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bysecond": {
            "items": {
              "description": "Indicates seconds of the day to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bysetpos": {
            "items": {
              "description": "A positive or negative integer affecting the nth day of the month. For example, -2 combined with `byweekday` of FR is 2nd to last Friday of the month. It is recommended to not set this manually and just use `byweekday`.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byweekday": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "description": "Indicates the days of the week to recur or else nth-day-of-month strings. For example, \"+2TU\" second Tuesday of month, \"-1FR\" last Friday of the month, which are internally converted to a `byweekday/bysetpos` combination."
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byweekno": {
            "items": {
              "description": "Indicates number of the week hours to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byyearday": {
            "items": {
              "description": "Indicates the days of the year that this rule should recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "count": {
            "description": "Number of times the rule should recur until it stops.",
            "type": "number"
          },
          "dtstart": {
            "description": "Rule start date in Coordinated Universal Time (UTC).",
            "type": "string"
          },
          "freq": {
            "description": "Indicates frequency of the rule. Options are YEARLY, MONTHLY, WEEKLY, DAILY.",
            "type": "integer"
          },
          "interval": {
            "description": "Indicates the interval of frequency. For example, 1 and YEARLY is every 1 year, 2 and WEEKLY is every 2 weeks.",
            "type": "number"
          },
          "tzid": {
            "description": "Indicates timezone abbreviation.",
            "type": "string"
          },
          "until": {
            "description": "Recur the rule until this date.",
            "type": "string"
          },
          "wkst": {
            "description": "Indicates the start of week, defaults to Monday.",
            "type": "string"
          }
        },
        "required": [
          "dtstart",
          "tzid"
        ],
        "type": "object"
      },
      "create_slo_request": {
        "description": "The create SLO API request body varies depending on the type of indicator, time window and budgeting method.\n",
        "properties": {
          "budgetingMethod": {
            "$ref": "#/components/schemas/budgeting_method"
          },
          "description": {
            "description": "A description for the SLO.",
            "type": "string"
          },
          "groupBy": {
            "description": "optional group by field to use to generate an SLO per distinct value",
            "type": "string"
          },
          "id": {
            "description": "A optional and unique identifier for the SLO. Must be between 8 and 36 chars",
            "type": "string"
          },
          "indicator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/indicator_properties_custom_kql"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_availability"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_latency"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_custom_metric"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_histogram"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_timeslice_metric"
              }
            ]
          },
          "name": {
            "description": "A name for the SLO.",
            "type": "string"
          },
          "objective": {
            "$ref": "#/components/schemas/objective"
          },
          "settings": {
            "$ref": "#/components/schemas/settings"
          },
          "tags": {
            "description": "List of tags",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "timeWindow": {
            "$ref": "#/components/schemas/time_window"
          }
        },
        "required": [
          "name",
          "description",
          "indicator",
          "timeWindow",
          "budgetingMethod",
          "objective"
        ],
        "title": "Create SLO request",
        "type": "object"
      },
      "create_slo_response": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "Create SLO response",
        "type": "object"
      },
      "data_stream": {
        "properties": {
          "dashboard": {
            "items": {
              "$ref": "#/components/schemas/data_stream_dashboard_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "dataset": {
            "type": "string"
          },
          "index": {
            "type": "string"
          },
          "last_activity_ms": {
            "type": "number"
          },
          "namespace": {
            "type": "string"
          },
          "package": {
            "type": "string"
          },
          "package_version": {
            "type": "string"
          },
          "size_in_bytes": {
            "type": "number"
          },
          "size_in_bytes_formatted": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "title": "Data stream",
        "type": "object"
      },
      "data_stream_dashboard_item": {
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "data_view_response_object": {
        "properties": {
          "data_view": {
            "$ref": "#/components/schemas/data_view_response_object_data_view"
          }
        },
        "title": "Data view response properties",
        "type": "object"
      },
      "data_view_response_object_data_view": {
        "properties": {
          "allowNoIndex": {
            "$ref": "#/components/schemas/allownoindex"
          },
          "fieldAttrs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/fieldattrs"
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "fieldFormats": {
            "$ref": "#/components/schemas/fieldformats"
          },
          "fields": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "name": {
            "description": "The data view name.",
            "type": "string"
          },
          "namespaces": {
            "$ref": "#/components/schemas/namespaces"
          },
          "runtimeFieldMap": {
            "additionalProperties": {
              "$ref": "#/components/schemas/runtimefieldmap"
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "sourceFilters": {
            "$ref": "#/components/schemas/sourcefilters"
          },
          "timeFieldName": {
            "$ref": "#/components/schemas/timefieldname"
          },
          "title": {
            "$ref": "#/components/schemas/title"
          },
          "typeMeta": {
            "$ref": "#/components/schemas/typemeta_response"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "delete-agent-policy_request": {
        "properties": {
          "agentPolicyId": {
            "type": "string"
          },
          "force": {
            "description": "bypass validation checks that can prevent agent policy deletion",
            "type": "boolean"
          }
        },
        "required": [
          "agentPolicyId"
        ],
        "type": "object"
      },
      "delete-agent-policy_response_object": {
        "properties": {
          "id": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "success"
        ],
        "type": "object"
      },
      "delete-fleet-server-hosts_response_object": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "delete-output_response_object": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "delete-package-policy_response_object": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "delete-package_request": {
        "deprecated": true,
        "properties": {
          "force": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "delete-package_response_object": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/delete-package_response_object_item_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "delete-package_response_object_item_item": {
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/kibana_saved_object_type"
              },
              {
                "$ref": "#/components/schemas/elasticsearch_asset_type"
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object"
      },
      "delete_slo_instances_request": {
        "description": "The delete SLO instances request takes a list of SLO id and instance id, then delete the rollup and summary data. This API can be used to remove the staled data of an instance SLO that no longer get updated.\n",
        "properties": {
          "list": {
            "description": "An array of slo id and instance id",
            "items": {
              "$ref": "#/components/schemas/delete_slo_instances_request_list_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "list"
        ],
        "title": "Delete SLO instances request",
        "type": "object"
      },
      "delete_slo_instances_request_list_item": {
        "properties": {
          "instanceId": {
            "description": "The SLO instance identifier",
            "type": "string"
          },
          "sloId": {
            "description": "The SLO unique identifier",
            "type": "string"
          }
        },
        "required": [
          "sloId",
          "instanceId"
        ],
        "type": "object"
      },
      "download_sources": {
        "properties": {
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "proxy_id": {
            "description": "The ID of the proxy to use for this download source. See the proxies API for more information.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "is_default",
          "name",
          "host"
        ],
        "title": "Download Source",
        "type": "object"
      },
      "elasticsearch_asset_type": {
        "title": "Elasticsearch asset type",
        "type": "string"
      },
      "enrollment_api_key": {
        "properties": {
          "active": {
            "description": "When false, the enrollment API key is revoked and cannot be used for enrolling Elastic Agents.",
            "type": "boolean"
          },
          "api_key": {
            "description": "The enrollment API key (token) used for enrolling Elastic Agents.",
            "type": "string"
          },
          "api_key_id": {
            "description": "The ID of the API key in the Security API.",
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "description": "The name of the enrollment API key.",
            "type": "string"
          },
          "policy_id": {
            "description": "The ID of the agent policy the Elastic Agent will be enrolled in.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "api_key_id",
          "api_key",
          "active",
          "created_at"
        ],
        "title": "Enrollment API key",
        "type": "object"
      },
      "error_budget": {
        "properties": {
          "consumed": {
            "description": "The error budget consummed, as a percentage of the initial value.",
            "type": "number"
          },
          "initial": {
            "description": "The initial error budget, as 1 - objective",
            "type": "number"
          },
          "isEstimated": {
            "description": "Only for SLO defined with occurrences budgeting method and calendar aligned time window.",
            "type": "boolean"
          },
          "remaining": {
            "description": "The error budget remaining, as a percentage of the initial value.",
            "type": "number"
          }
        },
        "required": [
          "initial",
          "consumed",
          "remaining",
          "isEstimated"
        ],
        "title": "Error budget",
        "type": "object"
      },
      "fieldattrs": {
        "description": "A map of field attributes by field name.",
        "properties": {
          "count": {
            "description": "Popularity count for the field.",
            "type": "integer"
          },
          "customDescription": {
            "description": "Custom description for the field.",
            "maxLength": 300,
            "type": "string"
          },
          "customLabel": {
            "description": "Custom label for the field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "fieldformats": {
        "description": "A map of field formats by field name.",
        "type": "object",
        "x-go-type-skip-optional-pointer": true
      },
      "filter": {
        "description": "Defines properties for a filter",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/filter_meta"
          },
          "query": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "title": "Filter",
        "type": "object"
      },
      "filter_meta": {
        "description": "Defines properties for a filter",
        "properties": {
          "alias": {
            "nullable": true,
            "type": "string"
          },
          "controlledBy": {
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "field": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "index": {
            "type": "string"
          },
          "isMultiIndex": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "negate": {
            "type": "boolean"
          },
          "params": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "title": "FilterMeta",
        "type": "object"
      },
      "find_rule_response_object": {
        "properties": {
          "actions": {
            "items": {
              "$ref": "#/components/schemas/find_rule_response_object_actions_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "active_snoozes": {
            "items": {
              "description": "List of active snoozes for the rule.",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "alert_delay": {
            "$ref": "#/components/schemas/find_rule_response_object_alert_delay"
          },
          "api_key_created_by_user": {
            "description": "Indicates whether the API key that is associated with the rule was created by the user.",
            "nullable": true,
            "type": "boolean"
          },
          "api_key_owner": {
            "description": "The owner of the API key that is associated with the rule and used to run background tasks.",
            "nullable": true,
            "type": "string"
          },
          "consumer": {
            "description": "The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.",
            "type": "string"
          },
          "created_at": {
            "description": "The date and time that the rule was created.",
            "type": "string"
          },
          "created_by": {
            "description": "The identifier for the user that created the rule.",
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
            "type": "boolean"
          },
          "execution_status": {
            "$ref": "#/components/schemas/find_rule_response_object_execution_status"
          },
          "id": {
            "description": "The identifier for the rule.",
            "type": "string"
          },
          "is_snoozed_until": {
            "description": "The date when the rule will no longer be snoozed.",
            "nullable": true,
            "type": "string"
          },
          "last_run": {
            "$ref": "#/components/schemas/find_rule_response_object_last_run"
          },
          "mapped_params": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "monitoring": {
            "$ref": "#/components/schemas/find_rule_response_object_monitoring"
          },
          "mute_all": {
            "description": "Indicates whether all alerts are muted.",
            "type": "boolean"
          },
          "muted_alert_ids": {
            "items": {
              "description": "List of identifiers of muted alerts. ",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "description": " The name of the rule.",
            "type": "string"
          },
          "next_run": {
            "description": "Date and time of the next run of the rule.",
            "nullable": true,
            "type": "string"
          },
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          },
          "params": {
            "description": "The parameters for the rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "revision": {
            "description": "The rule revision number.",
            "type": "number"
          },
          "rule_type_id": {
            "description": "The rule type identifier.",
            "type": "string"
          },
          "running": {
            "description": "Indicates whether the rule is running.",
            "nullable": true,
            "type": "boolean"
          },
          "schedule": {
            "$ref": "#/components/schemas/find_rule_response_object_schedule"
          },
          "scheduled_task_id": {
            "description": "Identifier of the scheduled task.",
            "type": "string"
          },
          "snooze_schedule": {
            "items": {
              "$ref": "#/components/schemas/find_rule_response_object_snooze_schedule_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "tags": {
            "items": {
              "description": "The tags for the rule.",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "throttle": {
            "deprecated": true,
            "description": "Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          },
          "updated_at": {
            "description": "The date and time that the rule was updated most recently.",
            "type": "string"
          },
          "updated_by": {
            "description": "The identifier for the user that updated this rule most recently.",
            "nullable": true,
            "type": "string"
          },
          "view_in_app_relative_url": {
            "description": "Relative URL to view rule in the app.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "id",
          "enabled",
          "name",
          "tags",
          "rule_type_id",
          "consumer",
          "schedule",
          "actions",
          "params",
          "created_by",
          "updated_by",
          "created_at",
          "updated_at",
          "api_key_owner",
          "mute_all",
          "muted_alert_ids",
          "execution_status",
          "revision"
        ],
        "type": "object"
      },
      "find_rule_response_object_actions_item": {
        "properties": {
          "alerts_filter": {
            "$ref": "#/components/schemas/find_rule_response_object_actions_item_alerts_filter"
          },
          "connector_type_id": {
            "description": "The type of connector. This property appears in responses but cannot be set in requests.",
            "type": "string"
          },
          "frequency": {
            "$ref": "#/components/schemas/find_rule_response_object_actions_item_frequency"
          },
          "group": {
            "description": "The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.",
            "type": "string"
          },
          "id": {
            "description": "The identifier for the connector saved object.",
            "type": "string"
          },
          "params": {
            "description": "The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "use_alert_data_for_template": {
            "description": "Indicates whether to use alert data as a template.",
            "type": "boolean"
          },
          "uuid": {
            "description": "A universally unique identifier (UUID) for the action.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "connector_type_id",
          "params"
        ],
        "type": "object"
      },
      "find_rule_response_object_actions_item_alerts_filter": {
        "description": "Defines a period that limits whether the action runs.",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/find_rule_response_object_actions_item_alerts_filter_query"
          },
          "timeframe": {
            "$ref": "#/components/schemas/find_rule_response_object_actions_item_alerts_filter_timeframe"
          }
        },
        "type": "object"
      },
      "find_rule_response_object_actions_item_alerts_filter_query": {
        "properties": {
          "dsl": {
            "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL).",
            "type": "string"
          },
          "filters": {
            "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL) as defined in the `kbn-es-query` package.",
            "items": {
              "$ref": "#/components/schemas/find_rule_response_object_actions_item_alerts_filter_query_filters_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "kql": {
            "description": "A filter written in Kibana Query Language (KQL).",
            "type": "string"
          }
        },
        "required": [
          "kql",
          "filters"
        ],
        "type": "object"
      },
      "find_rule_response_object_actions_item_alerts_filter_query_filters_item": {
        "properties": {
          "$state": {
            "$ref": "#/components/schemas/find_rule_response_object_actions_item_alerts_filter_query_filters_item_$state"
          },
          "meta": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "query": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "meta"
        ],
        "type": "object"
      },
      "find_rule_response_object_actions_item_alerts_filter_query_filters_item_$state": {
        "properties": {
          "store": {
            "description": "A filter can be either specific to an application context or applied globally.",
            "type": "string"
          }
        },
        "required": [
          "store"
        ],
        "type": "object"
      },
      "find_rule_response_object_actions_item_alerts_filter_timeframe": {
        "properties": {
          "days": {
            "description": "Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.",
            "items": {
              "type": "integer"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "hours": {
            "$ref": "#/components/schemas/find_rule_response_object_actions_item_alerts_filter_timeframe_hours"
          },
          "timezone": {
            "description": "The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.",
            "type": "string"
          }
        },
        "required": [
          "days",
          "hours",
          "timezone"
        ],
        "type": "object"
      },
      "find_rule_response_object_actions_item_alerts_filter_timeframe_hours": {
        "properties": {
          "end": {
            "description": "The end of the time frame in 24-hour notation (`hh:mm`).",
            "type": "string"
          },
          "start": {
            "description": "The start of the time frame in 24-hour notation (`hh:mm`).",
            "type": "string"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "type": "object"
      },
      "find_rule_response_object_actions_item_frequency": {
        "properties": {
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "type": "string"
          },
          "summary": {
            "description": "Indicates whether the action is a summary.",
            "type": "boolean"
          },
          "throttle": {
            "description": "The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if 'notify_when' is set to 'onThrottleInterval'. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "summary",
          "notify_when",
          "throttle"
        ],
        "type": "object"
      },
      "find_rule_response_object_alert_delay": {
        "description": "Indicates that an alert occurs only when the specified number of consecutive runs met the rule conditions.",
        "properties": {
          "active": {
            "description": "The number of consecutive runs that must meet the rule conditions.",
            "type": "number"
          }
        },
        "required": [
          "active"
        ],
        "type": "object"
      },
      "find_rule_response_object_execution_status": {
        "properties": {
          "error": {
            "$ref": "#/components/schemas/find_rule_response_object_execution_status_error"
          },
          "last_duration": {
            "description": "Duration of last execution of the rule.",
            "type": "number"
          },
          "last_execution_date": {
            "description": "The date and time when rule was executed last.",
            "type": "string"
          },
          "status": {
            "description": "Status of rule execution.",
            "type": "string"
          },
          "warning": {
            "$ref": "#/components/schemas/find_rule_response_object_execution_status_warning"
          }
        },
        "required": [
          "status",
          "last_execution_date"
        ],
        "type": "object"
      },
      "find_rule_response_object_execution_status_error": {
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "reason": {
            "description": "Reason for error.",
            "type": "string"
          }
        },
        "required": [
          "reason",
          "message"
        ],
        "type": "object"
      },
      "find_rule_response_object_execution_status_warning": {
        "properties": {
          "message": {
            "description": "Warning message.",
            "type": "string"
          },
          "reason": {
            "description": "Reason for warning.",
            "type": "string"
          }
        },
        "required": [
          "reason",
          "message"
        ],
        "type": "object"
      },
      "find_rule_response_object_last_run": {
        "nullable": true,
        "properties": {
          "alerts_count": {
            "$ref": "#/components/schemas/find_rule_response_object_last_run_alerts_count"
          },
          "outcome": {
            "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
            "type": "string"
          },
          "outcome_msg": {
            "items": {
              "description": "Outcome message generated during last rule run.",
              "type": "string"
            },
            "nullable": true,
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "outcome_order": {
            "description": "Order of the outcome.",
            "type": "number"
          },
          "warning": {
            "description": "Warning of last rule execution.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "outcome",
          "alerts_count"
        ],
        "type": "object"
      },
      "find_rule_response_object_last_run_alerts_count": {
        "properties": {
          "active": {
            "description": "Number of active alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "ignored": {
            "description": "Number of ignored alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "new": {
            "description": "Number of new alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "recovered": {
            "description": "Number of recovered alerts during last run.",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "find_rule_response_object_monitoring": {
        "description": "Monitoring details of the rule.",
        "properties": {
          "run": {
            "$ref": "#/components/schemas/find_rule_response_object_monitoring_run"
          }
        },
        "required": [
          "run"
        ],
        "type": "object"
      },
      "find_rule_response_object_monitoring_run": {
        "description": "Rule run details.",
        "properties": {
          "calculated_metrics": {
            "$ref": "#/components/schemas/find_rule_response_object_monitoring_run_calculated_metrics"
          },
          "history": {
            "description": "History of the rule run.",
            "items": {
              "$ref": "#/components/schemas/find_rule_response_object_monitoring_run_history_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "last_run": {
            "$ref": "#/components/schemas/find_rule_response_object_monitoring_run_last_run"
          }
        },
        "required": [
          "history",
          "calculated_metrics",
          "last_run"
        ],
        "type": "object"
      },
      "find_rule_response_object_monitoring_run_calculated_metrics": {
        "description": "Calculation of different percentiles and success ratio.",
        "properties": {
          "p50": {
            "type": "number"
          },
          "p95": {
            "type": "number"
          },
          "p99": {
            "type": "number"
          },
          "success_ratio": {
            "type": "number"
          }
        },
        "required": [
          "success_ratio"
        ],
        "type": "object"
      },
      "find_rule_response_object_monitoring_run_history_item": {
        "properties": {
          "duration": {
            "description": "Duration of the rule run.",
            "type": "number"
          },
          "outcome": {
            "$ref": "#/components/schemas/find_rule_response_object_monitoring_run_history_item_outcome"
          },
          "success": {
            "description": "Indicates whether the rule run was successful.",
            "type": "boolean"
          },
          "timestamp": {
            "description": "Time of rule run.",
            "type": "number"
          }
        },
        "required": [
          "success",
          "timestamp"
        ],
        "type": "object"
      },
      "find_rule_response_object_monitoring_run_history_item_outcome": {
        "properties": {
          "alerts_count": {
            "$ref": "#/components/schemas/find_rule_response_object_monitoring_run_history_item_outcome_alerts_count"
          },
          "outcome": {
            "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
            "type": "string"
          },
          "outcome_msg": {
            "items": {
              "description": "Outcome message generated during last rule run.",
              "type": "string"
            },
            "nullable": true,
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "outcome_order": {
            "description": "Order of the outcome.",
            "type": "number"
          },
          "warning": {
            "description": "Warning of last rule execution.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "outcome",
          "alerts_count"
        ],
        "type": "object"
      },
      "find_rule_response_object_monitoring_run_history_item_outcome_alerts_count": {
        "properties": {
          "active": {
            "description": "Number of active alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "ignored": {
            "description": "Number of ignored alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "new": {
            "description": "Number of new alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "recovered": {
            "description": "Number of recovered alerts during last run.",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "find_rule_response_object_monitoring_run_last_run": {
        "properties": {
          "metrics": {
            "$ref": "#/components/schemas/find_rule_response_object_monitoring_run_last_run_metrics"
          },
          "timestamp": {
            "description": "Time of the most recent rule run.",
            "type": "string"
          }
        },
        "required": [
          "timestamp",
          "metrics"
        ],
        "type": "object"
      },
      "find_rule_response_object_monitoring_run_last_run_metrics": {
        "properties": {
          "duration": {
            "description": "Duration of most recent rule run.",
            "type": "number"
          },
          "gap_duration_s": {
            "description": "Duration in seconds of rule run gap.",
            "nullable": true,
            "type": "number"
          },
          "total_alerts_created": {
            "description": "Total number of alerts created during last rule run.",
            "nullable": true,
            "type": "number"
          },
          "total_alerts_detected": {
            "description": "Total number of alerts detected during last rule run.",
            "nullable": true,
            "type": "number"
          },
          "total_indexing_duration_ms": {
            "description": "Total time spent indexing documents during last rule run in milliseconds.",
            "nullable": true,
            "type": "number"
          },
          "total_search_duration_ms": {
            "description": "Total time spent performing Elasticsearch searches as measured by Kibana; includes network latency and time spent serializing or deserializing the request and response.",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "find_rule_response_object_schedule": {
        "properties": {
          "interval": {
            "description": "The interval is specified in seconds, minutes, hours, or days.",
            "type": "string"
          }
        },
        "required": [
          "interval"
        ],
        "type": "object"
      },
      "find_rule_response_object_snooze_schedule_item": {
        "properties": {
          "duration": {
            "description": "Duration of the rule snooze schedule.",
            "type": "number"
          },
          "id": {
            "description": "Identifier of the rule snooze schedule.",
            "type": "string"
          },
          "rRule": {
            "$ref": "#/components/schemas/find_rule_response_object_snooze_schedule_item_rRule"
          },
          "skipRecurrences": {
            "items": {
              "description": "Skips recurrence of rule on this date.",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "duration",
          "rRule"
        ],
        "type": "object"
      },
      "find_rule_response_object_snooze_schedule_item_rRule": {
        "properties": {
          "byhour": {
            "items": {
              "description": "Indicates hours of the day to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byminute": {
            "items": {
              "description": "Indicates minutes of the hour to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bymonth": {
            "items": {
              "description": "Indicates months of the year that this rule should recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bymonthday": {
            "items": {
              "description": "Indicates the days of the month to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bysecond": {
            "items": {
              "description": "Indicates seconds of the day to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bysetpos": {
            "items": {
              "description": "A positive or negative integer affecting the nth day of the month. For example, -2 combined with `byweekday` of FR is 2nd to last Friday of the month. It is recommended to not set this manually and just use `byweekday`.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byweekday": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "description": "Indicates the days of the week to recur or else nth-day-of-month strings. For example, \"+2TU\" second Tuesday of month, \"-1FR\" last Friday of the month, which are internally converted to a `byweekday/bysetpos` combination."
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byweekno": {
            "items": {
              "description": "Indicates number of the week hours to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byyearday": {
            "items": {
              "description": "Indicates the days of the year that this rule should recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "count": {
            "description": "Number of times the rule should recur until it stops.",
            "type": "number"
          },
          "dtstart": {
            "description": "Rule start date in Coordinated Universal Time (UTC).",
            "type": "string"
          },
          "freq": {
            "description": "Indicates frequency of the rule. Options are YEARLY, MONTHLY, WEEKLY, DAILY.",
            "type": "integer"
          },
          "interval": {
            "description": "Indicates the interval of frequency. For example, 1 and YEARLY is every 1 year, 2 and WEEKLY is every 2 weeks.",
            "type": "number"
          },
          "tzid": {
            "description": "Indicates timezone abbreviation.",
            "type": "string"
          },
          "until": {
            "description": "Recur the rule until this date.",
            "type": "string"
          },
          "wkst": {
            "description": "Indicates the start of week, defaults to Monday.",
            "type": "string"
          }
        },
        "required": [
          "dtstart",
          "tzid"
        ],
        "type": "object"
      },
      "find_slo_response": {
        "description": "A paginated response of SLOs matching the query.\n",
        "properties": {
          "page": {
            "type": "number"
          },
          "perPage": {
            "type": "number"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/slo_with_summary_response"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "total": {
            "type": "number"
          }
        },
        "title": "Find SLO response",
        "type": "object"
      },
      "fleet_server_host": {
        "properties": {
          "host_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "is_preconfigured": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          }
        },
        "required": [
          "fleet_server_hosts",
          "id",
          "is_default",
          "is_preconfigured",
          "host_urls"
        ],
        "title": "Fleet Server Host",
        "type": "object"
      },
      "fleet_settings_response": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/settings"
          }
        },
        "required": [
          "item"
        ],
        "title": "Fleet settings response",
        "type": "object"
      },
      "fleet_setup_response": {
        "properties": {
          "isInitialized": {
            "type": "boolean"
          },
          "nonFatalErrors": {
            "items": {
              "$ref": "#/components/schemas/fleet_setup_response_nonFatalErrors_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "isInitialized",
          "nonFatalErrors"
        ],
        "title": "Fleet Setup response",
        "type": "object"
      },
      "fleet_setup_response_nonFatalErrors_item": {
        "properties": {
          "message": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "message"
        ],
        "type": "object"
      },
      "fleet_status_response": {
        "properties": {
          "isReady": {
            "type": "boolean"
          },
          "missing_optional_features": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "missing_requirements": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "package_verification_key_id": {
            "type": "string"
          }
        },
        "required": [
          "isReady",
          "missing_requirements",
          "missing_optional_features"
        ],
        "title": "Fleet status response",
        "type": "object"
      },
      "full_agent_policy": {
        "properties": {
          "agent": {
            "nullable": true,
            "type": "string"
          },
          "fleet": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/full_agent_policy_fleet_oneOf_0"
              },
              {
                "$ref": "#/components/schemas/full_agent_policy_fleet_oneOf_1"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "inputs": {
            "type": "string"
          },
          "monitoring": {
            "$ref": "#/components/schemas/full_agent_policy_monitoring"
          },
          "output_permissions": {
            "additionalProperties": {
              "$ref": "#/components/schemas/full_agent_policy_output_permission_item"
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "outputs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/full_agent_policy_output"
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "revision": {
            "type": "number"
          },
          "secret_references": {
            "items": {
              "$ref": "#/components/schemas/full_agent_policy_secret_references_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "id",
          "outputs",
          "inputs"
        ],
        "title": "Full agent policy",
        "type": "object"
      },
      "full_agent_policy_fleet_oneOf_0": {
        "properties": {
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "proxy_headers": {},
          "proxy_url": {
            "type": "string"
          },
          "ssl": {
            "$ref": "#/components/schemas/full_agent_policy_fleet_oneOf_0_ssl"
          }
        },
        "type": "object"
      },
      "full_agent_policy_fleet_oneOf_0_ssl": {
        "properties": {
          "certificate": {
            "type": "string"
          },
          "certificate_authorities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "key": {
            "type": "string"
          },
          "renegotiation": {
            "type": "string"
          },
          "verification_mode": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "full_agent_policy_fleet_oneOf_1": {
        "properties": {
          "kibana": {
            "$ref": "#/components/schemas/full_agent_policy_fleet_oneOf_1_kibana"
          }
        },
        "type": "object"
      },
      "full_agent_policy_fleet_oneOf_1_kibana": {
        "properties": {
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "path": {
            "type": "string"
          },
          "protocol": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "full_agent_policy_input": {
        "allOf": [
          {
            "$ref": "#/components/schemas/full_agent_policy_input_allOf_0"
          }
        ],
        "title": "Full agent policy input"
      },
      "full_agent_policy_input_allOf_0": {
        "properties": {
          "data_stream": {
            "$ref": "#/components/schemas/full_agent_policy_input_allOf_0_data_stream"
          },
          "id": {
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/full_agent_policy_input_allOf_0_meta"
          },
          "name": {
            "type": "string"
          },
          "revision": {
            "type": "number"
          },
          "streams": {
            "$ref": "#/components/schemas/full_agent_policy_input_stream"
          },
          "type": {
            "type": "string"
          },
          "use_output": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "revision",
          "type",
          "data_stream",
          "use_output"
        ],
        "type": "object"
      },
      "full_agent_policy_input_allOf_0_data_stream": {
        "properties": {
          "namespace": {
            "type": "string"
          }
        },
        "required": [
          "namespace"
        ],
        "type": "object"
      },
      "full_agent_policy_input_allOf_0_meta": {
        "properties": {
          "package": {
            "$ref": "#/components/schemas/full_agent_policy_input_allOf_0_meta_package"
          }
        },
        "type": "object"
      },
      "full_agent_policy_input_allOf_0_meta_package": {
        "properties": {
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "version"
        ],
        "type": "object"
      },
      "full_agent_policy_input_stream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/full_agent_policy_input_stream_allOf_0"
          }
        ],
        "title": "Full agent policy input stream"
      },
      "full_agent_policy_input_stream_allOf_0": {
        "properties": {
          "data_stream": {
            "$ref": "#/components/schemas/full_agent_policy_input_stream_allOf_0_data_stream"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "data_stream"
        ],
        "type": "object"
      },
      "full_agent_policy_input_stream_allOf_0_data_stream": {
        "properties": {
          "dataset": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "dataset",
          "type"
        ],
        "type": "object"
      },
      "full_agent_policy_monitoring": {
        "properties": {
          "diagnostics": {
            "$ref": "#/components/schemas/full_agent_policy_monitoring_diagnostics"
          },
          "enabled": {
            "type": "boolean"
          },
          "http": {
            "$ref": "#/components/schemas/full_agent_policy_monitoring_http"
          },
          "logs": {
            "type": "boolean"
          },
          "metrics": {
            "type": "boolean"
          },
          "namespace": {
            "type": "string"
          },
          "pprof": {
            "$ref": "#/components/schemas/full_agent_policy_monitoring_pprof"
          },
          "traces": {
            "type": "boolean"
          },
          "use_output": {
            "type": "string"
          }
        },
        "required": [
          "enabled",
          "metrics",
          "logs",
          "traces"
        ],
        "type": "object"
      },
      "full_agent_policy_monitoring_diagnostics": {
        "properties": {
          "limit": {
            "$ref": "#/components/schemas/full_agent_policy_monitoring_diagnostics_limit"
          },
          "uploader": {
            "$ref": "#/components/schemas/full_agent_policy_monitoring_diagnostics_uploader"
          }
        },
        "type": "object"
      },
      "full_agent_policy_monitoring_diagnostics_limit": {
        "properties": {
          "burst": {
            "type": "number"
          },
          "interval": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "full_agent_policy_monitoring_diagnostics_uploader": {
        "properties": {
          "init_dur": {
            "type": "string"
          },
          "max_dur": {
            "type": "string"
          },
          "max_retries": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "full_agent_policy_monitoring_http": {
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "host": {
            "type": "string"
          },
          "port": {
            "type": "number"
          }
        },
        "required": [
          "enabled"
        ],
        "type": "object"
      },
      "full_agent_policy_monitoring_pprof": {
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "type": "object"
      },
      "full_agent_policy_output": {
        "properties": {
          "additionalProperties": {
            "$ref": "#/components/schemas/full_agent_policy_output_item"
          },
          "ca_sha256": {
            "nullable": true,
            "type": "string"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "proxy_headers": {},
          "proxy_url": {
            "type": "string"
          },
          "type": {}
        },
        "required": [
          "type",
          "hosts",
          "ca_sha256"
        ],
        "title": "Full agent policy",
        "type": "object"
      },
      "full_agent_policy_output_item": {
        "properties": {
          "text": {}
        },
        "type": "object"
      },
      "full_agent_policy_output_permission_item": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/full_agent_policy_output_permissions"
          },
          "output": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "full_agent_policy_output_permissions": {
        "additionalProperties": {
          "$ref": "#/components/schemas/full_agent_policy_output_permissions_item"
        },
        "title": "Full agent policy output permissions"
      },
      "full_agent_policy_output_permissions_item": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/full_agent_policy_output_permissions_item_data"
          },
          "packagePolicyName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "full_agent_policy_output_permissions_item_data": {
        "properties": {
          "cluster": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "indices": {
            "items": {
              "$ref": "#/components/schemas/full_agent_policy_output_permissions_item_data_indices_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "full_agent_policy_output_permissions_item_data_indices_item": {
        "properties": {
          "names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "privileges": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "full_agent_policy_secret_references_item": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "generate-service-token_response_object": {
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "get-enrollment-api-keys_response_object": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/enrollment_api_key"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "list": {
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/enrollment_api_key"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "page": {
            "type": "number"
          },
          "perPage": {
            "type": "number"
          },
          "total": {
            "type": "number"
          }
        },
        "required": [
          "items",
          "page",
          "perPage",
          "total"
        ],
        "type": "object"
      },
      "get-fleet-server-hosts_response_object": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/fleet_server_host"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "page": {
            "type": "integer"
          },
          "perPage": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "get-one-fleet-server-hosts_response_object": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/fleet_server_host"
          }
        },
        "required": [
          "item"
        ],
        "type": "object"
      },
      "get-output_response_object": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/output_create_request"
          }
        },
        "type": "object"
      },
      "get-outputs_response_object": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/output_create_request"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "page": {
            "type": "integer"
          },
          "perPage": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "get-package-policies_response_object": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/package_policy"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "page": {
            "type": "number"
          },
          "perPage": {
            "type": "number"
          },
          "total": {
            "type": "number"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "get-package-policy_response_object": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/package_policy"
          }
        },
        "required": [
          "item"
        ],
        "type": "object"
      },
      "get-package_response_object": {
        "allOf": [
          {
            "$ref": "#/components/schemas/get-package_response_object_allOf_0"
          },
          {
            "$ref": "#/components/schemas/get-package_response_object_allOf_1"
          }
        ],
        "type": "object",
        "x-go-type-skip-optional-pointer": true
      },
      "get-package_response_object_allOf_0": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/package_info"
          }
        }
      },
      "get-package_response_object_allOf_1": {
        "properties": {
          "keepPoliciesUpToDate": {
            "type": "boolean"
          },
          "latestVersion": {
            "type": "string"
          },
          "licensePath": {
            "type": "string"
          },
          "notice": {
            "type": "string"
          },
          "savedObject": {
            "deprecated": true,
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "status",
          "savedObject"
        ]
      },
      "get_agent_tags_response": {
        "properties": {
          "items": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "title": "Get Agent Tags response",
        "type": "object"
      },
      "get_agents_response": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/agent"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "list": {
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/agent"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "page": {
            "type": "number"
          },
          "perPage": {
            "type": "number"
          },
          "statusSummary": {
            "$ref": "#/components/schemas/get_agents_response_statusSummary"
          },
          "total": {
            "type": "number"
          }
        },
        "required": [
          "items",
          "total",
          "page",
          "perPage"
        ],
        "title": "Get Agent response",
        "type": "object"
      },
      "get_agents_response_statusSummary": {
        "properties": {
          "degraded'": {
            "type": "number"
          },
          "enrolling": {
            "type": "number"
          },
          "error": {
            "type": "number"
          },
          "inactive": {
            "type": "number"
          },
          "offline": {
            "type": "number"
          },
          "online": {
            "type": "number"
          },
          "unenrolled": {
            "type": "number"
          },
          "unenrolling": {
            "type": "number"
          },
          "updating": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "get_all_data_views_response_object": {
        "properties": {
          "data_view": {
            "items": {
              "$ref": "#/components/schemas/get_all_data_views_response_object_data_view_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "get_all_data_views_response_object_data_view_item": {
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespaces": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "title": {
            "type": "string"
          },
          "typeMeta": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "get_bulk_assets_response": {
        "deprecated": true,
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/get_bulk_assets_response_item_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "items"
        ],
        "title": "Bulk get assets response",
        "type": "object"
      },
      "get_bulk_assets_response_item_item": {
        "properties": {
          "appLink": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/get_bulk_assets_response_item_item_attributes"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/saved_object_type"
          },
          "updatedAt": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "get_bulk_assets_response_item_item_attributes": {
        "properties": {
          "description": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "get_categories_response": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/get_categories_response_item_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "response": {
            "items": {
              "$ref": "#/components/schemas/get_categories_response_response_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "items"
        ],
        "title": "Get categories response",
        "type": "object"
      },
      "get_categories_response_item_item": {
        "properties": {
          "count": {
            "type": "number"
          },
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "count"
        ],
        "type": "object"
      },
      "get_categories_response_response_item": {
        "deprecated": true,
        "properties": {
          "count": {
            "type": "number"
          },
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "count"
        ],
        "type": "object"
      },
      "get_connector_response_object": {
        "properties": {
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "connector_type_id": {
            "description": "The connector type identifier.",
            "type": "string"
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string"
          },
          "is_deprecated": {
            "description": "Indicates whether the connector is deprecated.",
            "type": "boolean"
          },
          "is_missing_secrets": {
            "description": "Indicates whether the connector is missing secrets.",
            "type": "boolean"
          },
          "is_preconfigured": {
            "description": "Indicates whether the connector is preconfigured. If true, the `config` and `is_missing_secrets` properties are omitted from the response. ",
            "type": "boolean"
          },
          "is_system_action": {
            "description": "Indicates whether the connector is used for system actions.",
            "type": "boolean"
          },
          "name": {
            "description": " The name of the rule.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "connector_type_id",
          "is_preconfigured",
          "is_deprecated",
          "is_system_action"
        ],
        "type": "object"
      },
      "get_packages_response": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/search_result"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "response": {
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/search_result"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "items"
        ],
        "title": "Get Packages response",
        "type": "object"
      },
      "get_rule_response_object": {
        "properties": {
          "actions": {
            "items": {
              "$ref": "#/components/schemas/get_rule_response_object_actions_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "active_snoozes": {
            "items": {
              "description": "List of active snoozes for the rule.",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "alert_delay": {
            "$ref": "#/components/schemas/get_rule_response_object_alert_delay"
          },
          "api_key_created_by_user": {
            "description": "Indicates whether the API key that is associated with the rule was created by the user.",
            "nullable": true,
            "type": "boolean"
          },
          "api_key_owner": {
            "description": "The owner of the API key that is associated with the rule and used to run background tasks.",
            "nullable": true,
            "type": "string"
          },
          "consumer": {
            "description": "The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.",
            "type": "string"
          },
          "created_at": {
            "description": "The date and time that the rule was created.",
            "type": "string"
          },
          "created_by": {
            "description": "The identifier for the user that created the rule.",
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
            "type": "boolean"
          },
          "execution_status": {
            "$ref": "#/components/schemas/get_rule_response_object_execution_status"
          },
          "id": {
            "description": "The identifier for the rule.",
            "type": "string"
          },
          "is_snoozed_until": {
            "description": "The date when the rule will no longer be snoozed.",
            "nullable": true,
            "type": "string"
          },
          "last_run": {
            "$ref": "#/components/schemas/get_rule_response_object_last_run"
          },
          "mapped_params": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "monitoring": {
            "$ref": "#/components/schemas/get_rule_response_object_monitoring"
          },
          "mute_all": {
            "description": "Indicates whether all alerts are muted.",
            "type": "boolean"
          },
          "muted_alert_ids": {
            "items": {
              "description": "List of identifiers of muted alerts. ",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "description": " The name of the rule.",
            "type": "string"
          },
          "next_run": {
            "description": "Date and time of the next run of the rule.",
            "nullable": true,
            "type": "string"
          },
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          },
          "params": {
            "description": "The parameters for the rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "revision": {
            "description": "The rule revision number.",
            "type": "number"
          },
          "rule_type_id": {
            "description": "The rule type identifier.",
            "type": "string"
          },
          "running": {
            "description": "Indicates whether the rule is running.",
            "nullable": true,
            "type": "boolean"
          },
          "schedule": {
            "$ref": "#/components/schemas/get_rule_response_object_schedule"
          },
          "scheduled_task_id": {
            "description": "Identifier of the scheduled task.",
            "type": "string"
          },
          "snooze_schedule": {
            "items": {
              "$ref": "#/components/schemas/get_rule_response_object_snooze_schedule_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "tags": {
            "items": {
              "description": "The tags for the rule.",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "throttle": {
            "deprecated": true,
            "description": "Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          },
          "updated_at": {
            "description": "The date and time that the rule was updated most recently.",
            "type": "string"
          },
          "updated_by": {
            "description": "The identifier for the user that updated this rule most recently.",
            "nullable": true,
            "type": "string"
          },
          "view_in_app_relative_url": {
            "description": "Relative URL to view rule in the app.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "id",
          "enabled",
          "name",
          "tags",
          "rule_type_id",
          "consumer",
          "schedule",
          "actions",
          "params",
          "created_by",
          "updated_by",
          "created_at",
          "updated_at",
          "api_key_owner",
          "mute_all",
          "muted_alert_ids",
          "execution_status",
          "revision"
        ],
        "type": "object"
      },
      "get_rule_response_object_actions_item": {
        "properties": {
          "alerts_filter": {
            "$ref": "#/components/schemas/get_rule_response_object_actions_item_alerts_filter"
          },
          "connector_type_id": {
            "description": "The type of connector. This property appears in responses but cannot be set in requests.",
            "type": "string"
          },
          "frequency": {
            "$ref": "#/components/schemas/get_rule_response_object_actions_item_frequency"
          },
          "group": {
            "description": "The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.",
            "type": "string"
          },
          "id": {
            "description": "The identifier for the connector saved object.",
            "type": "string"
          },
          "params": {
            "description": "The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "use_alert_data_for_template": {
            "description": "Indicates whether to use alert data as a template.",
            "type": "boolean"
          },
          "uuid": {
            "description": "A universally unique identifier (UUID) for the action.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "connector_type_id",
          "params"
        ],
        "type": "object"
      },
      "get_rule_response_object_actions_item_alerts_filter": {
        "description": "Defines a period that limits whether the action runs.",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/get_rule_response_object_actions_item_alerts_filter_query"
          },
          "timeframe": {
            "$ref": "#/components/schemas/get_rule_response_object_actions_item_alerts_filter_timeframe"
          }
        },
        "type": "object"
      },
      "get_rule_response_object_actions_item_alerts_filter_query": {
        "properties": {
          "dsl": {
            "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL).",
            "type": "string"
          },
          "filters": {
            "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL) as defined in the `kbn-es-query` package.",
            "items": {
              "$ref": "#/components/schemas/get_rule_response_object_actions_item_alerts_filter_query_filters_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "kql": {
            "description": "A filter written in Kibana Query Language (KQL).",
            "type": "string"
          }
        },
        "required": [
          "kql",
          "filters"
        ],
        "type": "object"
      },
      "get_rule_response_object_actions_item_alerts_filter_query_filters_item": {
        "properties": {
          "$state": {
            "$ref": "#/components/schemas/get_rule_response_object_actions_item_alerts_filter_query_filters_item_$state"
          },
          "meta": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "query": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "meta"
        ],
        "type": "object"
      },
      "get_rule_response_object_actions_item_alerts_filter_query_filters_item_$state": {
        "properties": {
          "store": {
            "description": "A filter can be either specific to an application context or applied globally.",
            "type": "string"
          }
        },
        "required": [
          "store"
        ],
        "type": "object"
      },
      "get_rule_response_object_actions_item_alerts_filter_timeframe": {
        "properties": {
          "days": {
            "description": "Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.",
            "items": {
              "type": "integer"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "hours": {
            "$ref": "#/components/schemas/get_rule_response_object_actions_item_alerts_filter_timeframe_hours"
          },
          "timezone": {
            "description": "The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.",
            "type": "string"
          }
        },
        "required": [
          "days",
          "hours",
          "timezone"
        ],
        "type": "object"
      },
      "get_rule_response_object_actions_item_alerts_filter_timeframe_hours": {
        "properties": {
          "end": {
            "description": "The end of the time frame in 24-hour notation (`hh:mm`).",
            "type": "string"
          },
          "start": {
            "description": "The start of the time frame in 24-hour notation (`hh:mm`).",
            "type": "string"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "type": "object"
      },
      "get_rule_response_object_actions_item_frequency": {
        "properties": {
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "type": "string"
          },
          "summary": {
            "description": "Indicates whether the action is a summary.",
            "type": "boolean"
          },
          "throttle": {
            "description": "The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if 'notify_when' is set to 'onThrottleInterval'. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "summary",
          "notify_when",
          "throttle"
        ],
        "type": "object"
      },
      "get_rule_response_object_alert_delay": {
        "description": "Indicates that an alert occurs only when the specified number of consecutive runs met the rule conditions.",
        "properties": {
          "active": {
            "description": "The number of consecutive runs that must meet the rule conditions.",
            "type": "number"
          }
        },
        "required": [
          "active"
        ],
        "type": "object"
      },
      "get_rule_response_object_execution_status": {
        "properties": {
          "error": {
            "$ref": "#/components/schemas/get_rule_response_object_execution_status_error"
          },
          "last_duration": {
            "description": "Duration of last execution of the rule.",
            "type": "number"
          },
          "last_execution_date": {
            "description": "The date and time when rule was executed last.",
            "type": "string"
          },
          "status": {
            "description": "Status of rule execution.",
            "type": "string"
          },
          "warning": {
            "$ref": "#/components/schemas/get_rule_response_object_execution_status_warning"
          }
        },
        "required": [
          "status",
          "last_execution_date"
        ],
        "type": "object"
      },
      "get_rule_response_object_execution_status_error": {
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "reason": {
            "description": "Reason for error.",
            "type": "string"
          }
        },
        "required": [
          "reason",
          "message"
        ],
        "type": "object"
      },
      "get_rule_response_object_execution_status_warning": {
        "properties": {
          "message": {
            "description": "Warning message.",
            "type": "string"
          },
          "reason": {
            "description": "Reason for warning.",
            "type": "string"
          }
        },
        "required": [
          "reason",
          "message"
        ],
        "type": "object"
      },
      "get_rule_response_object_last_run": {
        "nullable": true,
        "properties": {
          "alerts_count": {
            "$ref": "#/components/schemas/get_rule_response_object_last_run_alerts_count"
          },
          "outcome": {
            "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
            "type": "string"
          },
          "outcome_msg": {
            "items": {
              "description": "Outcome message generated during last rule run.",
              "type": "string"
            },
            "nullable": true,
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "outcome_order": {
            "description": "Order of the outcome.",
            "type": "number"
          },
          "warning": {
            "description": "Warning of last rule execution.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "outcome",
          "alerts_count"
        ],
        "type": "object"
      },
      "get_rule_response_object_last_run_alerts_count": {
        "properties": {
          "active": {
            "description": "Number of active alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "ignored": {
            "description": "Number of ignored alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "new": {
            "description": "Number of new alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "recovered": {
            "description": "Number of recovered alerts during last run.",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "get_rule_response_object_monitoring": {
        "description": "Monitoring details of the rule.",
        "properties": {
          "run": {
            "$ref": "#/components/schemas/get_rule_response_object_monitoring_run"
          }
        },
        "required": [
          "run"
        ],
        "type": "object"
      },
      "get_rule_response_object_monitoring_run": {
        "description": "Rule run details.",
        "properties": {
          "calculated_metrics": {
            "$ref": "#/components/schemas/get_rule_response_object_monitoring_run_calculated_metrics"
          },
          "history": {
            "description": "History of the rule run.",
            "items": {
              "$ref": "#/components/schemas/get_rule_response_object_monitoring_run_history_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "last_run": {
            "$ref": "#/components/schemas/get_rule_response_object_monitoring_run_last_run"
          }
        },
        "required": [
          "history",
          "calculated_metrics",
          "last_run"
        ],
        "type": "object"
      },
      "get_rule_response_object_monitoring_run_calculated_metrics": {
        "description": "Calculation of different percentiles and success ratio.",
        "properties": {
          "p50": {
            "type": "number"
          },
          "p95": {
            "type": "number"
          },
          "p99": {
            "type": "number"
          },
          "success_ratio": {
            "type": "number"
          }
        },
        "required": [
          "success_ratio"
        ],
        "type": "object"
      },
      "get_rule_response_object_monitoring_run_history_item": {
        "properties": {
          "duration": {
            "description": "Duration of the rule run.",
            "type": "number"
          },
          "outcome": {
            "$ref": "#/components/schemas/get_rule_response_object_monitoring_run_history_item_outcome"
          },
          "success": {
            "description": "Indicates whether the rule run was successful.",
            "type": "boolean"
          },
          "timestamp": {
            "description": "Time of rule run.",
            "type": "number"
          }
        },
        "required": [
          "success",
          "timestamp"
        ],
        "type": "object"
      },
      "get_rule_response_object_monitoring_run_history_item_outcome": {
        "properties": {
          "alerts_count": {
            "$ref": "#/components/schemas/get_rule_response_object_monitoring_run_history_item_outcome_alerts_count"
          },
          "outcome": {
            "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
            "type": "string"
          },
          "outcome_msg": {
            "items": {
              "description": "Outcome message generated during last rule run.",
              "type": "string"
            },
            "nullable": true,
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "outcome_order": {
            "description": "Order of the outcome.",
            "type": "number"
          },
          "warning": {
            "description": "Warning of last rule execution.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "outcome",
          "alerts_count"
        ],
        "type": "object"
      },
      "get_rule_response_object_monitoring_run_history_item_outcome_alerts_count": {
        "properties": {
          "active": {
            "description": "Number of active alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "ignored": {
            "description": "Number of ignored alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "new": {
            "description": "Number of new alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "recovered": {
            "description": "Number of recovered alerts during last run.",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "get_rule_response_object_monitoring_run_last_run": {
        "properties": {
          "metrics": {
            "$ref": "#/components/schemas/get_rule_response_object_monitoring_run_last_run_metrics"
          },
          "timestamp": {
            "description": "Time of the most recent rule run.",
            "type": "string"
          }
        },
        "required": [
          "timestamp",
          "metrics"
        ],
        "type": "object"
      },
      "get_rule_response_object_monitoring_run_last_run_metrics": {
        "properties": {
          "duration": {
            "description": "Duration of most recent rule run.",
            "type": "number"
          },
          "gap_duration_s": {
            "description": "Duration in seconds of rule run gap.",
            "nullable": true,
            "type": "number"
          },
          "total_alerts_created": {
            "description": "Total number of alerts created during last rule run.",
            "nullable": true,
            "type": "number"
          },
          "total_alerts_detected": {
            "description": "Total number of alerts detected during last rule run.",
            "nullable": true,
            "type": "number"
          },
          "total_indexing_duration_ms": {
            "description": "Total time spent indexing documents during last rule run in milliseconds.",
            "nullable": true,
            "type": "number"
          },
          "total_search_duration_ms": {
            "description": "Total time spent performing Elasticsearch searches as measured by Kibana; includes network latency and time spent serializing or deserializing the request and response.",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "get_rule_response_object_schedule": {
        "properties": {
          "interval": {
            "description": "The interval is specified in seconds, minutes, hours, or days.",
            "type": "string"
          }
        },
        "required": [
          "interval"
        ],
        "type": "object"
      },
      "get_rule_response_object_snooze_schedule_item": {
        "properties": {
          "duration": {
            "description": "Duration of the rule snooze schedule.",
            "type": "number"
          },
          "id": {
            "description": "Identifier of the rule snooze schedule.",
            "type": "string"
          },
          "rRule": {
            "$ref": "#/components/schemas/get_rule_response_object_snooze_schedule_item_rRule"
          },
          "skipRecurrences": {
            "items": {
              "description": "Skips recurrence of rule on this date.",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "duration",
          "rRule"
        ],
        "type": "object"
      },
      "get_rule_response_object_snooze_schedule_item_rRule": {
        "properties": {
          "byhour": {
            "items": {
              "description": "Indicates hours of the day to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byminute": {
            "items": {
              "description": "Indicates minutes of the hour to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bymonth": {
            "items": {
              "description": "Indicates months of the year that this rule should recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bymonthday": {
            "items": {
              "description": "Indicates the days of the month to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bysecond": {
            "items": {
              "description": "Indicates seconds of the day to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bysetpos": {
            "items": {
              "description": "A positive or negative integer affecting the nth day of the month. For example, -2 combined with `byweekday` of FR is 2nd to last Friday of the month. It is recommended to not set this manually and just use `byweekday`.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byweekday": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "description": "Indicates the days of the week to recur or else nth-day-of-month strings. For example, \"+2TU\" second Tuesday of month, \"-1FR\" last Friday of the month, which are internally converted to a `byweekday/bysetpos` combination."
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byweekno": {
            "items": {
              "description": "Indicates number of the week hours to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byyearday": {
            "items": {
              "description": "Indicates the days of the year that this rule should recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "count": {
            "description": "Number of times the rule should recur until it stops.",
            "type": "number"
          },
          "dtstart": {
            "description": "Rule start date in Coordinated Universal Time (UTC).",
            "type": "string"
          },
          "freq": {
            "description": "Indicates frequency of the rule. Options are YEARLY, MONTHLY, WEEKLY, DAILY.",
            "type": "integer"
          },
          "interval": {
            "description": "Indicates the interval of frequency. For example, 1 and YEARLY is every 1 year, 2 and WEEKLY is every 2 weeks.",
            "type": "number"
          },
          "tzid": {
            "description": "Indicates timezone abbreviation.",
            "type": "string"
          },
          "until": {
            "description": "Recur the rule until this date.",
            "type": "string"
          },
          "wkst": {
            "description": "Indicates the start of week, defaults to Monday.",
            "type": "string"
          }
        },
        "required": [
          "dtstart",
          "tzid"
        ],
        "type": "object"
      },
      "import_saved_objects_response_object": {
        "properties": {
          "errors": {
            "description": "Indicates the import was unsuccessful and specifies the objects that failed to import.\n\nNOTE: One object may result in multiple errors, which requires separate steps to resolve. For instance, a `missing_references` error and conflict error.\n",
            "items": {
              "type": "object",
              "x-go-type-skip-optional-pointer": true
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "success": {
            "description": "Indicates when the import was successfully completed. When set to false, some objects may not have been created. For additional information, refer to the `errors` and `successResults` properties.\n",
            "type": "boolean"
          },
          "successCount": {
            "description": "Indicates the number of successfully imported records.",
            "type": "integer"
          },
          "successResults": {
            "description": "Indicates the objects that are successfully imported, with any metadata if applicable.\n\nNOTE: Objects are created only when all resolvable errors are addressed, including conflicts and missing references. If objects are created as new copies, each entry in the `successResults` array includes a `destinationId` attribute.\n",
            "items": {
              "type": "object",
              "x-go-type-skip-optional-pointer": true
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "indicator_properties_apm_availability": {
        "description": "Defines properties for the APM availability indicator type",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/indicator_properties_apm_availability_params"
          },
          "type": {
            "description": "The type of indicator.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "params"
        ],
        "title": "APM availability",
        "type": "object"
      },
      "indicator_properties_apm_availability_params": {
        "description": "An object containing the indicator parameters.",
        "nullable": false,
        "properties": {
          "environment": {
            "description": "The APM service environment or \"*\"",
            "type": "string"
          },
          "filter": {
            "description": "KQL query used for filtering the data",
            "type": "string"
          },
          "index": {
            "description": "The index used by APM metrics",
            "type": "string"
          },
          "service": {
            "description": "The APM service name",
            "type": "string"
          },
          "transactionName": {
            "description": "The APM transaction name or \"*\"",
            "type": "string"
          },
          "transactionType": {
            "description": "The APM transaction type or \"*\"",
            "type": "string"
          }
        },
        "required": [
          "service",
          "environment",
          "transactionType",
          "transactionName",
          "index"
        ],
        "type": "object"
      },
      "indicator_properties_apm_latency": {
        "description": "Defines properties for the APM latency indicator type",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/indicator_properties_apm_latency_params"
          },
          "type": {
            "description": "The type of indicator.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "params"
        ],
        "title": "APM latency",
        "type": "object"
      },
      "indicator_properties_apm_latency_params": {
        "description": "An object containing the indicator parameters.",
        "nullable": false,
        "properties": {
          "environment": {
            "description": "The APM service environment or \"*\"",
            "type": "string"
          },
          "filter": {
            "description": "KQL query used for filtering the data",
            "type": "string"
          },
          "index": {
            "description": "The index used by APM metrics",
            "type": "string"
          },
          "service": {
            "description": "The APM service name",
            "type": "string"
          },
          "threshold": {
            "description": "The latency threshold in milliseconds",
            "type": "number"
          },
          "transactionName": {
            "description": "The APM transaction name or \"*\"",
            "type": "string"
          },
          "transactionType": {
            "description": "The APM transaction type or \"*\"",
            "type": "string"
          }
        },
        "required": [
          "service",
          "environment",
          "transactionType",
          "transactionName",
          "index",
          "threshold"
        ],
        "type": "object"
      },
      "indicator_properties_custom_kql": {
        "description": "Defines properties for a custom query indicator type",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/indicator_properties_custom_kql_params"
          },
          "type": {
            "description": "The type of indicator.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "params"
        ],
        "title": "Custom Query",
        "type": "object"
      },
      "indicator_properties_custom_kql_params": {
        "description": "An object containing the indicator parameters.",
        "nullable": false,
        "properties": {
          "dataViewId": {
            "description": "The kibana data view id to use, primarily used to include data view runtime mappings. Make sure to save SLO again if you add/update run time fields to the data view and if those fields are being used in slo queries.",
            "type": "string"
          },
          "filter": {
            "$ref": "#/components/schemas/kql_with_filters"
          },
          "good": {
            "$ref": "#/components/schemas/kql_with_filters_good"
          },
          "index": {
            "description": "The index or index pattern to use",
            "type": "string"
          },
          "timestampField": {
            "description": "The timestamp field used in the source indice.\n",
            "type": "string"
          },
          "total": {
            "$ref": "#/components/schemas/kql_with_filters_total"
          }
        },
        "required": [
          "index",
          "timestampField",
          "good",
          "total"
        ],
        "type": "object"
      },
      "indicator_properties_custom_metric": {
        "description": "Defines properties for a custom metric indicator type",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/indicator_properties_custom_metric_params"
          },
          "type": {
            "description": "The type of indicator.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "params"
        ],
        "title": "Custom metric",
        "type": "object"
      },
      "indicator_properties_custom_metric_params": {
        "description": "An object containing the indicator parameters.",
        "nullable": false,
        "properties": {
          "dataViewId": {
            "description": "The kibana data view id to use, primarily used to include data view runtime mappings. Make sure to save SLO again if you add/update run time fields to the data view and if those fields are being used in slo queries.",
            "type": "string"
          },
          "filter": {
            "description": "the KQL query to filter the documents with.",
            "type": "string"
          },
          "good": {
            "$ref": "#/components/schemas/indicator_properties_custom_metric_params_good"
          },
          "index": {
            "description": "The index or index pattern to use",
            "type": "string"
          },
          "timestampField": {
            "description": "The timestamp field used in the source indice.\n",
            "type": "string"
          },
          "total": {
            "$ref": "#/components/schemas/indicator_properties_custom_metric_params_total"
          }
        },
        "required": [
          "index",
          "timestampField",
          "good",
          "total"
        ],
        "type": "object"
      },
      "indicator_properties_custom_metric_params_good": {
        "description": "An object defining the \"good\" metrics and equation\n",
        "properties": {
          "equation": {
            "description": "The equation to calculate the \"good\" metric.",
            "type": "string"
          },
          "metrics": {
            "description": "List of metrics with their name, aggregation type, and field.",
            "items": {
              "$ref": "#/components/schemas/indicator_properties_custom_metric_params_good_metrics_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "metrics",
          "equation"
        ],
        "type": "object"
      },
      "indicator_properties_custom_metric_params_good_metrics_item": {
        "properties": {
          "aggregation": {
            "description": "The aggregation type of the metric. Only valid option is \"sum\"",
            "type": "string"
          },
          "field": {
            "description": "The field of the metric.",
            "type": "string"
          },
          "filter": {
            "description": "The filter to apply to the metric.",
            "type": "string"
          },
          "name": {
            "description": "The name of the metric. Only valid options are A-Z",
            "pattern": "^[A-Z]$",
            "type": "string"
          }
        },
        "required": [
          "name",
          "aggregation",
          "field"
        ],
        "type": "object"
      },
      "indicator_properties_custom_metric_params_total": {
        "description": "An object defining the \"total\" metrics and equation\n",
        "properties": {
          "equation": {
            "description": "The equation to calculate the \"total\" metric.",
            "type": "string"
          },
          "metrics": {
            "description": "List of metrics with their name, aggregation type, and field.",
            "items": {
              "$ref": "#/components/schemas/indicator_properties_custom_metric_params_total_metrics_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "metrics",
          "equation"
        ],
        "type": "object"
      },
      "indicator_properties_custom_metric_params_total_metrics_item": {
        "properties": {
          "aggregation": {
            "description": "The aggregation type of the metric. Only valid option is \"sum\"",
            "type": "string"
          },
          "field": {
            "description": "The field of the metric.",
            "type": "string"
          },
          "filter": {
            "description": "The filter to apply to the metric.",
            "type": "string"
          },
          "name": {
            "description": "The name of the metric. Only valid options are A-Z",
            "pattern": "^[A-Z]$",
            "type": "string"
          }
        },
        "required": [
          "name",
          "aggregation",
          "field"
        ],
        "type": "object"
      },
      "indicator_properties_histogram": {
        "description": "Defines properties for a histogram indicator type",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/indicator_properties_histogram_params"
          },
          "type": {
            "description": "The type of indicator.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "params"
        ],
        "title": "Histogram indicator",
        "type": "object"
      },
      "indicator_properties_histogram_params": {
        "description": "An object containing the indicator parameters.",
        "nullable": false,
        "properties": {
          "dataViewId": {
            "description": "The kibana data view id to use, primarily used to include data view runtime mappings. Make sure to save SLO again if you add/update run time fields to the data view and if those fields are being used in slo queries.",
            "type": "string"
          },
          "filter": {
            "description": "the KQL query to filter the documents with.",
            "type": "string"
          },
          "good": {
            "$ref": "#/components/schemas/indicator_properties_histogram_params_good"
          },
          "index": {
            "description": "The index or index pattern to use",
            "type": "string"
          },
          "timestampField": {
            "description": "The timestamp field used in the source indice.\n",
            "type": "string"
          },
          "total": {
            "$ref": "#/components/schemas/indicator_properties_histogram_params_total"
          }
        },
        "required": [
          "index",
          "timestampField",
          "good",
          "total"
        ],
        "type": "object"
      },
      "indicator_properties_histogram_params_good": {
        "description": "An object defining the \"good\" events\n",
        "properties": {
          "aggregation": {
            "description": "The type of aggregation to use.",
            "type": "string"
          },
          "field": {
            "description": "The field use to aggregate the good events.",
            "type": "string"
          },
          "filter": {
            "description": "The filter for good events.",
            "type": "string"
          },
          "from": {
            "description": "The starting value of the range. Only required for \"range\" aggregations.",
            "type": "number"
          },
          "to": {
            "description": "The ending value of the range. Only required for \"range\" aggregations.",
            "type": "number"
          }
        },
        "required": [
          "aggregation",
          "field"
        ],
        "type": "object"
      },
      "indicator_properties_histogram_params_total": {
        "description": "An object defining the \"total\" events\n",
        "properties": {
          "aggregation": {
            "description": "The type of aggregation to use.",
            "type": "string"
          },
          "field": {
            "description": "The field use to aggregate the good events.",
            "type": "string"
          },
          "filter": {
            "description": "The filter for total events.",
            "type": "string"
          },
          "from": {
            "description": "The starting value of the range. Only required for \"range\" aggregations.",
            "type": "number"
          },
          "to": {
            "description": "The ending value of the range. Only required for \"range\" aggregations.",
            "type": "number"
          }
        },
        "required": [
          "aggregation",
          "field"
        ],
        "type": "object"
      },
      "indicator_properties_timeslice_metric": {
        "description": "Defines properties for a timeslice metric indicator type",
        "properties": {
          "params": {
            "$ref": "#/components/schemas/indicator_properties_timeslice_metric_params"
          },
          "type": {
            "description": "The type of indicator.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "params"
        ],
        "title": "Timeslice metric",
        "type": "object"
      },
      "indicator_properties_timeslice_metric_params": {
        "description": "An object containing the indicator parameters.",
        "nullable": false,
        "properties": {
          "dataViewId": {
            "description": "The kibana data view id to use, primarily used to include data view runtime mappings. Make sure to save SLO again if you add/update run time fields to the data view and if those fields are being used in slo queries.",
            "type": "string"
          },
          "filter": {
            "description": "the KQL query to filter the documents with.",
            "type": "string"
          },
          "index": {
            "description": "The index or index pattern to use",
            "type": "string"
          },
          "metric": {
            "$ref": "#/components/schemas/indicator_properties_timeslice_metric_params_metric"
          },
          "timestampField": {
            "description": "The timestamp field used in the source indice.\n",
            "type": "string"
          }
        },
        "required": [
          "index",
          "timestampField",
          "metric"
        ],
        "type": "object"
      },
      "indicator_properties_timeslice_metric_params_metric": {
        "description": "An object defining the metrics, equation, and threshold to determine if it's a good slice or not\n",
        "properties": {
          "comparator": {
            "description": "The comparator to use to compare the equation to the threshold.",
            "type": "string"
          },
          "equation": {
            "description": "The equation to calculate the metric.",
            "type": "string"
          },
          "metrics": {
            "description": "List of metrics with their name, aggregation type, and field.",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/timeslice_metric_basic_metric_with_field"
                },
                {
                  "$ref": "#/components/schemas/timeslice_metric_percentile_metric"
                },
                {
                  "$ref": "#/components/schemas/timeslice_metric_doc_count_metric"
                }
              ]
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "threshold": {
            "description": "The threshold used to determine if the metric is a good slice or not.",
            "type": "number"
          }
        },
        "required": [
          "metrics",
          "equation",
          "comparator",
          "threshold"
        ],
        "type": "object"
      },
      "initial_namespaces": {
        "description": "Identifiers for the spaces in which this object is created. If this is provided, the object is created only in the explicitly defined spaces. If this is not provided, the object is created in the current space (default behavior). For shareable object types (registered with `namespaceType: 'multiple'`), this option can be used to specify one or more spaces, including the \"All spaces\" identifier ('*'). For isolated object types (registered with `namespaceType: 'single'` or `namespaceType: 'multiple-isolated'`), this option can only be used to specify a single space, and the \"All spaces\" identifier ('*') is not allowed. For global object types (`registered with `namespaceType: agnostic`), this option cannot be used.\n",
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "install-package-by-upload_response_object": {
        "properties": {
          "_meta": {
            "$ref": "#/components/schemas/install-package-by-upload_response_object__meta"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/install-package-by-upload_response_object_item_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "install-package-by-upload_response_object__meta": {
        "properties": {
          "install_source": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "install-package-by-upload_response_object_item_item": {
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/kibana_saved_object_type"
              },
              {
                "$ref": "#/components/schemas/elasticsearch_asset_type"
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object"
      },
      "install-package_request": {
        "properties": {
          "force": {
            "type": "boolean"
          },
          "ignore_constraints": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "install-package_response_object": {
        "properties": {
          "_meta": {
            "$ref": "#/components/schemas/install-package_response_object__meta"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/install-package_response_object_item_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "install-package_response_object__meta": {
        "properties": {
          "install_source": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "install-package_response_object_item_item": {
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/kibana_saved_object_type"
              },
              {
                "$ref": "#/components/schemas/elasticsearch_asset_type"
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object"
      },
      "installation_info": {
        "properties": {
          "created_at": {
            "type": "string"
          },
          "experimental_data_stream_features": {
            "$ref": "#/components/schemas/installation_info_experimental_data_stream_features"
          },
          "install_format_schema_version": {
            "type": "string"
          },
          "install_kibana_space_id": {
            "type": "string"
          },
          "install_source": {
            "type": "string"
          },
          "install_status": {
            "type": "string"
          },
          "installed_es": {
            "$ref": "#/components/schemas/installation_info_installed_es"
          },
          "installed_kibana": {
            "$ref": "#/components/schemas/installation_info_installed_kibana"
          },
          "latest_executed_state": {
            "$ref": "#/components/schemas/installation_info_latest_executed_state"
          },
          "latest_install_failed_attempts": {
            "description": "Latest failed install errors",
            "items": {
              "$ref": "#/components/schemas/installation_info_latest_install_failed_attempts_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "type": "string"
          },
          "namespaces": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "verification_key_id": {
            "nullable": true,
            "type": "string"
          },
          "verification_status": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "installed_kibana",
          "installed_es",
          "name",
          "version",
          "install_status",
          "install_version",
          "install_started_at",
          "install_source",
          "verification_status",
          "latest_install_failed_attempts"
        ],
        "title": "Installation info object",
        "type": "object"
      },
      "installation_info_experimental_data_stream_features": {
        "properties": {
          "data_stream": {
            "type": "string"
          },
          "features": {
            "$ref": "#/components/schemas/installation_info_experimental_data_stream_features_features"
          }
        },
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "installation_info_experimental_data_stream_features_features": {
        "properties": {
          "doc_value_only_numeric": {
            "nullable": true,
            "type": "boolean"
          },
          "doc_value_only_other": {
            "nullable": true,
            "type": "boolean"
          },
          "synthetic_source": {
            "nullable": true,
            "type": "boolean"
          },
          "tsdb": {
            "nullable": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "installation_info_installed_es": {
        "properties": {
          "deferred": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/elasticsearch_asset_type"
          }
        },
        "type": "object"
      },
      "installation_info_installed_kibana": {
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/kibana_saved_object_type"
          }
        },
        "type": "object"
      },
      "installation_info_latest_executed_state": {
        "description": "Latest successfully executed state in package install state machine",
        "properties": {
          "error": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "started_at": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "installation_info_latest_install_failed_attempts_item": {
        "properties": {
          "created_at": {
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/installation_info_latest_install_failed_attempts_item_error"
          },
          "target_version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "installation_info_latest_install_failed_attempts_item_error": {
        "properties": {
          "message": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "stack": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "kibana_saved_object_type": {
        "title": "Kibana saved object asset type",
        "type": "string"
      },
      "kql_with_filters": {
        "description": "Defines properties for a filter",
        "oneOf": [
          {
            "description": "the KQL query to filter the documents with.",
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/kql_with_filters_oneOf_1"
          }
        ],
        "title": "KQL with filters"
      },
      "kql_with_filters_good": {
        "description": "The KQL query used to define the good events.",
        "oneOf": [
          {
            "description": "the KQL query to filter the documents with.",
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/kql_with_filters_good_oneOf_1"
          }
        ],
        "title": "KQL query for good events"
      },
      "kql_with_filters_good_oneOf_1": {
        "properties": {
          "filters": {
            "items": {
              "$ref": "#/components/schemas/filter"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "kqlQuery": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "kql_with_filters_oneOf_1": {
        "properties": {
          "filters": {
            "items": {
              "$ref": "#/components/schemas/filter"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "kqlQuery": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "kql_with_filters_total": {
        "description": "The KQL query used to define all events.",
        "oneOf": [
          {
            "description": "the KQL query to filter the documents with.",
            "type": "string"
          },
          {
            "$ref": "#/components/schemas/kql_with_filters_total_oneOf_1"
          }
        ],
        "title": "KQL query for all events"
      },
      "kql_with_filters_total_oneOf_1": {
        "properties": {
          "filters": {
            "items": {
              "$ref": "#/components/schemas/filter"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "kqlQuery": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "namespaces": {
        "description": "An array of space identifiers for sharing the data view between multiple spaces.",
        "items": {
          "default": "default",
          "type": "string"
        },
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "new_package_policy": {
        "description": "",
        "properties": {
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "inputs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/new_package_policy_inputs_item"
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "output_id": {
            "type": "string"
          },
          "overrides": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "package": {
            "$ref": "#/components/schemas/new_package_policy_package"
          },
          "policy_id": {
            "deprecated": true,
            "nullable": true,
            "type": "string"
          },
          "policy_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "secret_references": {
            "items": {
              "$ref": "#/components/schemas/new_package_policy_secret_references_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "vars": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "inputs",
          "name"
        ],
        "title": "New package policy",
        "type": "object"
      },
      "new_package_policy_inputs_item": {
        "properties": {
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "enabled": {
            "type": "boolean"
          },
          "processors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "streams": {
            "additionalProperties": {
              "$ref": "#/components/schemas/new_package_policy_inputs_item_streams_item"
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "type": {
            "type": "string"
          },
          "vars": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "type",
          "enabled"
        ],
        "type": "object"
      },
      "new_package_policy_inputs_item_streams_item": {
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "vars": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        }
      },
      "new_package_policy_package": {
        "properties": {
          "name": {
            "type": "string"
          },
          "requires_root": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "version"
        ],
        "type": "object"
      },
      "new_package_policy_secret_references_item": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "objective": {
        "description": "Defines properties for the SLO objective",
        "properties": {
          "target": {
            "description": "the target objective between 0 and 1 excluded",
            "exclusiveMaximum": true,
            "exclusiveMinimum": true,
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          },
          "timesliceTarget": {
            "description": "the target objective for each slice when using a timeslices budgeting method",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          },
          "timesliceWindow": {
            "description": "the duration of each slice when using a timeslices budgeting method, as {duraton}{unit}",
            "type": "string"
          }
        },
        "required": [
          "target"
        ],
        "title": "Objective",
        "type": "object"
      },
      "output_create_request": {
        "discriminator": {
          "mapping": {
            "elasticsearch": "#/components/schemas/output_create_request_elasticsearch",
            "kafka": "#/components/schemas/output_create_request_kafka",
            "logstash": "#/components/schemas/output_create_request_logstash",
            "remote_elasticsearch": "#/components/schemas/output_create_request_remote_elasticsearch"
          },
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/output_create_request_elasticsearch"
          },
          {
            "$ref": "#/components/schemas/output_create_request_kafka"
          },
          {
            "$ref": "#/components/schemas/output_create_request_logstash"
          },
          {
            "$ref": "#/components/schemas/output_create_request_remote_elasticsearch"
          }
        ],
        "title": "Output"
      },
      "output_create_request_elasticsearch": {
        "properties": {
          "ca_sha256": {
            "type": "string"
          },
          "ca_trusted_fingerprint": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "config_yaml": {
            "type": "string"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "preset": {
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          },
          "shipper": {
            "$ref": "#/components/schemas/output_create_request_elasticsearch_shipper"
          },
          "ssl": {
            "$ref": "#/components/schemas/output_create_request_elasticsearch_ssl"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "elasticsearch",
        "type": "object"
      },
      "output_create_request_elasticsearch_shipper": {
        "properties": {
          "compression_level": {
            "type": "number"
          },
          "disk_queue_compression_enabled": {
            "type": "boolean"
          },
          "disk_queue_enabled": {
            "type": "boolean"
          },
          "disk_queue_encryption_enabled": {
            "type": "boolean"
          },
          "disk_queue_max_size": {
            "type": "number"
          },
          "disk_queue_path": {
            "type": "string"
          },
          "loadbalance": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "output_create_request_elasticsearch_ssl": {
        "properties": {
          "certificate": {
            "type": "string"
          },
          "certificate_authorities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_create_request_kafka": {
        "properties": {
          "auth_type": {
            "type": "string"
          },
          "broker_timeout": {
            "type": "number"
          },
          "ca_sha256": {
            "type": "string"
          },
          "ca_trusted_fingerprint": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "compression": {
            "type": "string"
          },
          "compression_level": {
            "type": "number"
          },
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "config_yaml": {
            "type": "string"
          },
          "connection_type": {
            "type": "string"
          },
          "headers": {
            "items": {
              "$ref": "#/components/schemas/output_create_request_kafka_headers_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "partition": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          },
          "random": {
            "$ref": "#/components/schemas/output_create_request_kafka_random"
          },
          "required_acks": {
            "type": "number"
          },
          "round_robin": {
            "$ref": "#/components/schemas/output_create_request_kafka_round_robin"
          },
          "sasl": {
            "$ref": "#/components/schemas/output_create_request_kafka_sasl"
          },
          "secrets": {
            "$ref": "#/components/schemas/output_create_request_kafka_secrets"
          },
          "shipper": {
            "$ref": "#/components/schemas/output_create_request_kafka_shipper"
          },
          "ssl": {
            "$ref": "#/components/schemas/output_create_request_kafka_ssl"
          },
          "timeout": {
            "type": "number"
          },
          "topic": {
            "type": "string"
          },
          "topics": {
            "deprecated": true,
            "description": "Use topic instead.",
            "items": {
              "$ref": "#/components/schemas/output_create_request_kafka_topics_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "type": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "topics",
          "auth_type",
          "hosts"
        ],
        "title": "kafka",
        "type": "object"
      },
      "output_create_request_kafka_headers_item": {
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_create_request_kafka_random": {
        "properties": {
          "group_events": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "output_create_request_kafka_round_robin": {
        "properties": {
          "group_events": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "output_create_request_kafka_sasl": {
        "properties": {
          "mechanism": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_create_request_kafka_secrets": {
        "properties": {
          "password": {
            "type": "string"
          },
          "ssl": {
            "$ref": "#/components/schemas/output_create_request_kafka_secrets_ssl"
          }
        },
        "type": "object"
      },
      "output_create_request_kafka_secrets_ssl": {
        "properties": {
          "key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_create_request_kafka_shipper": {
        "properties": {
          "compression_level": {
            "type": "number"
          },
          "disk_queue_compression_enabled": {
            "type": "boolean"
          },
          "disk_queue_enabled": {
            "type": "boolean"
          },
          "disk_queue_encryption_enabled": {
            "type": "boolean"
          },
          "disk_queue_max_size": {
            "type": "number"
          },
          "disk_queue_path": {
            "type": "string"
          },
          "loadbalance": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "output_create_request_kafka_ssl": {
        "properties": {
          "certificate": {
            "type": "string"
          },
          "certificate_authorities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "key": {
            "type": "string"
          },
          "verification_mode": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_create_request_kafka_topics_item": {
        "properties": {
          "topic": {
            "type": "string"
          },
          "when": {
            "$ref": "#/components/schemas/output_create_request_kafka_topics_item_when"
          }
        },
        "type": "object"
      },
      "output_create_request_kafka_topics_item_when": {
        "deprecated": true,
        "description": "Deprecated, kafka output do not support conditionnal topics anymore.",
        "properties": {
          "condition": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_create_request_logstash": {
        "properties": {
          "ca_sha256": {
            "type": "string"
          },
          "ca_trusted_fingerprint": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "config_yaml": {
            "type": "string"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          },
          "secrets": {
            "$ref": "#/components/schemas/output_create_request_logstash_secrets"
          },
          "shipper": {
            "$ref": "#/components/schemas/output_create_request_logstash_shipper"
          },
          "ssl": {
            "$ref": "#/components/schemas/output_create_request_logstash_ssl"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "hosts",
          "type"
        ],
        "title": "logstash",
        "type": "object"
      },
      "output_create_request_logstash_secrets": {
        "properties": {
          "ssl": {
            "$ref": "#/components/schemas/output_create_request_logstash_secrets_ssl"
          }
        },
        "type": "object"
      },
      "output_create_request_logstash_secrets_ssl": {
        "properties": {
          "key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_create_request_logstash_shipper": {
        "properties": {
          "compression_level": {
            "type": "number"
          },
          "disk_queue_compression_enabled": {
            "type": "boolean"
          },
          "disk_queue_enabled": {
            "type": "boolean"
          },
          "disk_queue_encryption_enabled": {
            "type": "boolean"
          },
          "disk_queue_max_size": {
            "type": "number"
          },
          "disk_queue_path": {
            "type": "string"
          },
          "loadbalance": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "output_create_request_logstash_ssl": {
        "properties": {
          "certificate": {
            "type": "string"
          },
          "certificate_authorities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_create_request_remote_elasticsearch": {
        "properties": {
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "secrets": {
            "$ref": "#/components/schemas/output_create_request_remote_elasticsearch_secrets"
          },
          "service_token": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "remote_elasticsearch",
        "type": "object"
      },
      "output_create_request_remote_elasticsearch_secrets": {
        "properties": {
          "service_token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_update_request": {
        "discriminator": {
          "mapping": {
            "elasticsearch": "#/components/schemas/output_update_request_elasticsearch",
            "kafka": "#/components/schemas/output_update_request_kafka",
            "logstash": "#/components/schemas/output_update_request_logstash"
          },
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/output_update_request_elasticsearch"
          },
          {
            "$ref": "#/components/schemas/output_update_request_kafka"
          },
          {
            "$ref": "#/components/schemas/output_update_request_logstash"
          }
        ],
        "title": "Output"
      },
      "output_update_request_elasticsearch": {
        "properties": {
          "ca_sha256": {
            "type": "string"
          },
          "ca_trusted_fingerprint": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "config_yaml": {
            "type": "string"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "preset": {
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          },
          "shipper": {
            "$ref": "#/components/schemas/output_update_request_elasticsearch_shipper"
          },
          "ssl": {
            "$ref": "#/components/schemas/output_update_request_elasticsearch_ssl"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "hosts",
          "type"
        ],
        "title": "elasticsearch",
        "type": "object"
      },
      "output_update_request_elasticsearch_shipper": {
        "properties": {
          "compression_level": {
            "type": "number"
          },
          "disk_queue_compression_enabled": {
            "type": "boolean"
          },
          "disk_queue_enabled": {
            "type": "boolean"
          },
          "disk_queue_encryption_enabled": {
            "type": "boolean"
          },
          "disk_queue_max_size": {
            "type": "number"
          },
          "disk_queue_path": {
            "type": "string"
          },
          "loadbalance": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "output_update_request_elasticsearch_ssl": {
        "properties": {
          "certificate": {
            "type": "string"
          },
          "certificate_authorities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_update_request_kafka": {
        "properties": {
          "auth_type": {
            "type": "string"
          },
          "broker_timeout": {
            "type": "number"
          },
          "ca_sha256": {
            "type": "string"
          },
          "ca_trusted_fingerprint": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "compression": {
            "type": "string"
          },
          "compression_level": {
            "type": "number"
          },
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "config_yaml": {
            "type": "string"
          },
          "connection_type": {
            "type": "string"
          },
          "headers": {
            "items": {
              "$ref": "#/components/schemas/output_update_request_kafka_headers_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "partition": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          },
          "random": {
            "$ref": "#/components/schemas/output_update_request_kafka_random"
          },
          "required_acks": {
            "type": "number"
          },
          "round_robin": {
            "$ref": "#/components/schemas/output_update_request_kafka_round_robin"
          },
          "sasl": {
            "$ref": "#/components/schemas/output_update_request_kafka_sasl"
          },
          "shipper": {
            "$ref": "#/components/schemas/output_update_request_kafka_shipper"
          },
          "ssl": {
            "$ref": "#/components/schemas/output_update_request_kafka_ssl"
          },
          "timeout": {
            "type": "number"
          },
          "topic": {
            "type": "string"
          },
          "topics": {
            "deprecated": true,
            "description": "Use topic instead.",
            "items": {
              "$ref": "#/components/schemas/output_update_request_kafka_topics_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "type": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "kafka",
        "type": "object"
      },
      "output_update_request_kafka_headers_item": {
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_update_request_kafka_random": {
        "properties": {
          "group_events": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "output_update_request_kafka_round_robin": {
        "properties": {
          "group_events": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "output_update_request_kafka_sasl": {
        "properties": {
          "mechanism": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_update_request_kafka_shipper": {
        "properties": {
          "compression_level": {
            "type": "number"
          },
          "disk_queue_compression_enabled": {
            "type": "boolean"
          },
          "disk_queue_enabled": {
            "type": "boolean"
          },
          "disk_queue_encryption_enabled": {
            "type": "boolean"
          },
          "disk_queue_max_size": {
            "type": "number"
          },
          "disk_queue_path": {
            "type": "string"
          },
          "loadbalance": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "output_update_request_kafka_ssl": {
        "properties": {
          "certificate": {
            "type": "string"
          },
          "certificate_authorities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "key": {
            "type": "string"
          },
          "verification_mode": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_update_request_kafka_topics_item": {
        "properties": {
          "topic": {
            "type": "string"
          },
          "when": {
            "$ref": "#/components/schemas/output_update_request_kafka_topics_item_when"
          }
        },
        "type": "object"
      },
      "output_update_request_kafka_topics_item_when": {
        "deprecated": true,
        "description": "Deprecated, kafka output do not support conditionnal topics anymore.",
        "properties": {
          "condition": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "output_update_request_logstash": {
        "properties": {
          "ca_sha256": {
            "type": "string"
          },
          "ca_trusted_fingerprint": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "config_yaml": {
            "type": "string"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          },
          "shipper": {
            "$ref": "#/components/schemas/output_update_request_logstash_shipper"
          },
          "ssl": {
            "$ref": "#/components/schemas/output_update_request_logstash_ssl"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "logstash",
        "type": "object"
      },
      "output_update_request_logstash_shipper": {
        "properties": {
          "compression_level": {
            "type": "number"
          },
          "disk_queue_compression_enabled": {
            "type": "boolean"
          },
          "disk_queue_enabled": {
            "type": "boolean"
          },
          "disk_queue_encryption_enabled": {
            "type": "boolean"
          },
          "disk_queue_max_size": {
            "type": "number"
          },
          "disk_queue_path": {
            "type": "string"
          },
          "loadbalance": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "output_update_request_logstash_ssl": {
        "properties": {
          "certificate": {
            "type": "string"
          },
          "certificate_authorities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "key": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "package_info": {
        "properties": {
          "assets": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "conditions": {
            "$ref": "#/components/schemas/package_info_conditions"
          },
          "data_streams": {
            "items": {
              "$ref": "#/components/schemas/package_info_data_streams_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "description": {
            "type": "string"
          },
          "download": {
            "type": "string"
          },
          "elasticsearch": {
            "$ref": "#/components/schemas/package_info_elasticsearch"
          },
          "format_version": {
            "type": "string"
          },
          "icons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "readme": {
            "type": "string"
          },
          "release": {
            "deprecated": true,
            "description": "release label is deprecated, derive from the version instead (packages follow semver)",
            "type": "string"
          },
          "screenshots": {
            "items": {
              "$ref": "#/components/schemas/package_info_screenshots_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "source": {
            "$ref": "#/components/schemas/package_info_source"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "title",
          "version",
          "description",
          "type",
          "categories",
          "conditions",
          "assets",
          "format_version",
          "download",
          "path"
        ],
        "title": "Package information",
        "type": "object"
      },
      "package_info_conditions": {
        "properties": {
          "elasticsearch": {
            "$ref": "#/components/schemas/package_info_conditions_elasticsearch"
          },
          "kibana": {
            "$ref": "#/components/schemas/package_info_conditions_kibana"
          }
        },
        "type": "object"
      },
      "package_info_conditions_elasticsearch": {
        "properties": {
          "subscription": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "package_info_conditions_kibana": {
        "properties": {
          "versions": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "package_info_data_streams_item": {
        "properties": {
          "ingeset_pipeline": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "package": {
            "type": "string"
          },
          "release": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "vars": {
            "items": {
              "$ref": "#/components/schemas/package_info_data_streams_item_vars_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "title",
          "name",
          "release",
          "ingeset_pipeline",
          "type",
          "package"
        ],
        "type": "object"
      },
      "package_info_data_streams_item_vars_item": {
        "properties": {
          "default": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "default"
        ],
        "type": "object"
      },
      "package_info_elasticsearch": {
        "properties": {
          "privileges": {
            "$ref": "#/components/schemas/package_info_elasticsearch_privileges"
          }
        },
        "type": "object"
      },
      "package_info_elasticsearch_privileges": {
        "properties": {
          "cluster": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "package_info_screenshots_item": {
        "properties": {
          "path": {
            "type": "string"
          },
          "size": {
            "type": "string"
          },
          "src": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "src",
          "path"
        ],
        "type": "object"
      },
      "package_info_source": {
        "properties": {
          "license": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "package_policy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/package_policy_allOf_0"
          },
          {
            "$ref": "#/components/schemas/new_package_policy"
          }
        ],
        "title": "Package policy"
      },
      "package_policy_allOf_0": {
        "properties": {
          "id": {
            "type": "string"
          },
          "inputs": {
            "oneOf": [
              {
                "items": {},
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              {
                "type": "object",
                "x-go-type-skip-optional-pointer": true
              }
            ]
          },
          "revision": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "revision"
        ],
        "type": "object"
      },
      "package_policy_request": {
        "properties": {
          "description": {
            "description": "Package policy description",
            "type": "string"
          },
          "force": {
            "description": "Force package policy creation even if package is not verified, or if the agent policy is managed.",
            "type": "boolean"
          },
          "id": {
            "description": "Package policy unique identifier",
            "type": "string"
          },
          "inputs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/package_policy_request_inputs_item"
            },
            "description": "Package policy inputs (see integration documentation to know what inputs are available)",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "description": "Package policy name (should be unique)",
            "type": "string"
          },
          "namespace": {
            "description": "The package policy namespace. Leave blank to inherit the agent policy's namespace.",
            "type": "string"
          },
          "output_id": {
            "description": "Output ID to send package data to",
            "nullable": true,
            "type": "string"
          },
          "overrides": {
            "$ref": "#/components/schemas/package_policy_request_overrides"
          },
          "package": {
            "$ref": "#/components/schemas/package_policy_request_package"
          },
          "policy_id": {
            "deprecated": true,
            "description": "Agent policy ID where that package policy will be added",
            "nullable": true,
            "type": "string"
          },
          "policy_ids": {
            "description": "Agent policy IDs where that package policy will be added",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "vars": {
            "description": "Package root level variable (see integration documentation for more information)",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "name",
          "package"
        ],
        "title": "Package Policy Request",
        "type": "object"
      },
      "package_policy_request_inputs_item": {
        "properties": {
          "enabled": {
            "description": "enable or disable that input, (default to true)",
            "type": "boolean"
          },
          "streams": {
            "additionalProperties": {
              "$ref": "#/components/schemas/package_policy_request_inputs_item_streams_item"
            },
            "description": "Input streams (see integration documentation to know what streams are available)",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "vars": {
            "description": "Input level variable (see integration documentation for more information)",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "package_policy_request_inputs_item_streams_item": {
        "properties": {
          "enabled": {
            "description": "enable or disable that stream, (default to true)",
            "type": "boolean"
          },
          "vars": {
            "description": "Stream level variable (see integration documentation for more information)",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "package_policy_request_overrides": {
        "description": "Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.",
        "nullable": true,
        "properties": {
          "inputs": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "package_policy_request_package": {
        "properties": {
          "name": {
            "description": "Package name",
            "type": "string"
          },
          "version": {
            "description": "Package version",
            "type": "string"
          }
        },
        "required": [
          "name",
          "version"
        ],
        "type": "object"
      },
      "package_usage_stats": {
        "properties": {
          "agent_policy_count": {
            "type": "integer"
          }
        },
        "required": [
          "agent_policy_count"
        ],
        "title": "Package usage stats",
        "type": "object"
      },
      "post-fleet-server-hosts_request": {
        "properties": {
          "host_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "proxy_id": {
            "description": "The ID of the proxy to use for this fleet server host. See the proxies API for more information.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "host_urls"
        ],
        "type": "object"
      },
      "post-fleet-server-hosts_response_object": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/fleet_server_host"
          }
        },
        "type": "object"
      },
      "post-outputs_response_object": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/output_create_request"
          }
        },
        "type": "object"
      },
      "proxies": {
        "properties": {
          "certificate": {
            "type": "string"
          },
          "certificate_authorities": {
            "type": "string"
          },
          "certificate_key": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "proxy_headers": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "url"
        ],
        "title": "Fleet Proxy",
        "type": "object"
      },
      "references": {
        "description": "Objects with `name`, `id`, and `type` properties that describe the other saved objects that this object references. Use `name` in attributes to refer to the other saved object, but never the `id`, which can update automatically during migrations or import and export.\n",
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "runtimefieldmap": {
        "description": "A map of runtime field definitions by field name.",
        "properties": {
          "script": {
            "$ref": "#/components/schemas/runtimefieldmap_script"
          },
          "type": {
            "description": "Mapping type of the runtime field.",
            "type": "string"
          }
        },
        "required": [
          "script",
          "type"
        ],
        "type": "object"
      },
      "runtimefieldmap_script": {
        "properties": {
          "source": {
            "description": "Script for the runtime field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "saved_object_type": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string"
          }
        ],
        "title": "Saved Object type"
      },
      "search_result": {
        "properties": {
          "description": {
            "type": "string"
          },
          "download": {
            "type": "string"
          },
          "icons": {
            "type": "string"
          },
          "installationInfo": {
            "$ref": "#/components/schemas/installation_info"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "savedObject": {
            "deprecated": true,
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "download",
          "icons",
          "name",
          "path",
          "title",
          "type",
          "version",
          "status"
        ],
        "title": "Search result",
        "type": "object"
      },
      "settings": {
        "description": "Defines properties for SLO settings.",
        "properties": {
          "frequency": {
            "default": "1m",
            "description": "Configure how often the transform runs, default 1m",
            "type": "string"
          },
          "preventInitialBackfill": {
            "default": false,
            "description": "Prevents the transform from backfilling data when it starts.",
            "type": "boolean"
          },
          "syncDelay": {
            "default": "1m",
            "description": "The synch delay to apply to the transform. Default 1m",
            "type": "string"
          }
        },
        "title": "Settings",
        "type": "object"
      },
      "slo_definition_response": {
        "properties": {
          "budgetingMethod": {
            "$ref": "#/components/schemas/budgeting_method"
          },
          "createdAt": {
            "description": "The creation date",
            "type": "string"
          },
          "description": {
            "description": "The description of the SLO.",
            "type": "string"
          },
          "enabled": {
            "description": "Indicate if the SLO is enabled",
            "type": "boolean"
          },
          "groupBy": {
            "description": "optional group by field to use to generate an SLO per distinct value",
            "type": "string"
          },
          "id": {
            "description": "The identifier of the SLO.",
            "type": "string"
          },
          "indicator": {
            "discriminator": {
              "mapping": {
                "sli.apm.transactionDuration": "#/components/schemas/indicator_properties_apm_latency",
                "sli.apm.transactionErrorRate": "#/components/schemas/indicator_properties_apm_availability",
                "sli.histogram.custom": "#/components/schemas/indicator_properties_histogram",
                "sli.kql.custom": "#/components/schemas/indicator_properties_custom_kql",
                "sli.metric.custom": "#/components/schemas/indicator_properties_custom_metric",
                "sli.metric.timeslice": "#/components/schemas/indicator_properties_timeslice_metric"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/indicator_properties_custom_kql"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_availability"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_latency"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_custom_metric"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_histogram"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_timeslice_metric"
              }
            ]
          },
          "name": {
            "description": "The name of the SLO.",
            "type": "string"
          },
          "objective": {
            "$ref": "#/components/schemas/objective"
          },
          "revision": {
            "description": "The SLO revision",
            "type": "number"
          },
          "settings": {
            "$ref": "#/components/schemas/settings"
          },
          "tags": {
            "description": "List of tags",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "timeWindow": {
            "$ref": "#/components/schemas/time_window"
          },
          "updatedAt": {
            "description": "The last update date",
            "type": "string"
          },
          "version": {
            "description": "The internal SLO version",
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "indicator",
          "timeWindow",
          "budgetingMethod",
          "objective",
          "settings",
          "revision",
          "enabled",
          "groupBy",
          "tags",
          "createdAt",
          "updatedAt",
          "version"
        ],
        "title": "SLO definition response",
        "type": "object"
      },
      "slo_with_summary_response": {
        "properties": {
          "budgetingMethod": {
            "$ref": "#/components/schemas/budgeting_method"
          },
          "createdAt": {
            "description": "The creation date",
            "type": "string"
          },
          "description": {
            "description": "The description of the SLO.",
            "type": "string"
          },
          "enabled": {
            "description": "Indicate if the SLO is enabled",
            "type": "boolean"
          },
          "groupBy": {
            "description": "optional group by field to use to generate an SLO per distinct value",
            "type": "string"
          },
          "id": {
            "description": "The identifier of the SLO.",
            "type": "string"
          },
          "indicator": {
            "discriminator": {
              "mapping": {
                "sli.apm.transactionDuration": "#/components/schemas/indicator_properties_apm_latency",
                "sli.apm.transactionErrorRate": "#/components/schemas/indicator_properties_apm_availability",
                "sli.histogram.custom": "#/components/schemas/indicator_properties_histogram",
                "sli.kql.custom": "#/components/schemas/indicator_properties_custom_kql",
                "sli.metric.custom": "#/components/schemas/indicator_properties_custom_metric",
                "sli.metric.timeslice": "#/components/schemas/indicator_properties_timeslice_metric"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/indicator_properties_custom_kql"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_availability"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_latency"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_custom_metric"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_histogram"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_timeslice_metric"
              }
            ]
          },
          "instanceId": {
            "description": "the value derived from the groupBy field, if present, otherwise '*'",
            "type": "string"
          },
          "name": {
            "description": "The name of the SLO.",
            "type": "string"
          },
          "objective": {
            "$ref": "#/components/schemas/objective"
          },
          "revision": {
            "description": "The SLO revision",
            "type": "number"
          },
          "settings": {
            "$ref": "#/components/schemas/settings"
          },
          "summary": {
            "$ref": "#/components/schemas/summary"
          },
          "tags": {
            "description": "List of tags",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "timeWindow": {
            "$ref": "#/components/schemas/time_window"
          },
          "updatedAt": {
            "description": "The last update date",
            "type": "string"
          },
          "version": {
            "description": "The internal SLO version",
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "indicator",
          "timeWindow",
          "budgetingMethod",
          "objective",
          "settings",
          "revision",
          "summary",
          "enabled",
          "groupBy",
          "instanceId",
          "tags",
          "createdAt",
          "updatedAt",
          "version"
        ],
        "title": "SLO response",
        "type": "object"
      },
      "sourcefilters": {
        "description": "The array of field names you want to filter out in Discover.",
        "items": {
          "$ref": "#/components/schemas/sourcefilters_item"
        },
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "sourcefilters_item": {
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "summary": {
        "description": "The SLO computed data",
        "properties": {
          "errorBudget": {
            "$ref": "#/components/schemas/error_budget"
          },
          "sliValue": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/summary_status"
          }
        },
        "required": [
          "status",
          "sliValue",
          "errorBudget"
        ],
        "title": "Summary",
        "type": "object"
      },
      "summary_status": {
        "title": "summary status",
        "type": "string"
      },
      "swap_data_view_request_object": {
        "properties": {
          "delete": {
            "description": "Deletes referenced saved object if all references are removed.",
            "type": "boolean"
          },
          "forId": {
            "description": "Limit the affected saved objects to one or more by identifier.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              }
            ]
          },
          "forType": {
            "description": "Limit the affected saved objects by type.",
            "type": "string"
          },
          "fromId": {
            "description": "The saved object reference to change.",
            "type": "string"
          },
          "fromType": {
            "description": "Specify the type of the saved object reference to alter. The default value is `index-pattern` for data views.\n",
            "type": "string"
          },
          "toId": {
            "description": "New saved object reference value to replace the old value.",
            "type": "string"
          }
        },
        "required": [
          "fromId",
          "toId"
        ],
        "title": "Data view reference swap request",
        "type": "object"
      },
      "time_window": {
        "description": "Defines properties for the SLO time window",
        "properties": {
          "duration": {
            "description": "the duration formatted as {duration}{unit}. Accepted values for rolling: 7d, 30d, 90d. Accepted values for calendar aligned: 1w (weekly) or 1M (monthly)",
            "type": "string"
          },
          "type": {
            "description": "Indicates weither the time window is a rolling or a calendar aligned time window.",
            "type": "string"
          }
        },
        "required": [
          "duration",
          "type"
        ],
        "title": "Time window",
        "type": "object"
      },
      "timefieldname": {
        "description": "The timestamp field name, which you use for time-based data views.",
        "type": "string"
      },
      "timeslice_metric_basic_metric_with_field": {
        "properties": {
          "aggregation": {
            "description": "The aggregation type of the metric.",
            "type": "string"
          },
          "field": {
            "description": "The field of the metric.",
            "type": "string"
          },
          "filter": {
            "description": "The filter to apply to the metric.",
            "type": "string"
          },
          "name": {
            "description": "The name of the metric. Only valid options are A-Z",
            "pattern": "^[A-Z]$",
            "type": "string"
          }
        },
        "required": [
          "name",
          "aggregation",
          "field"
        ],
        "title": "Timeslice Metric Basic Metric with Field",
        "type": "object"
      },
      "timeslice_metric_doc_count_metric": {
        "properties": {
          "aggregation": {
            "description": "The aggregation type of the metric. Only valid option is \"doc_count\"",
            "type": "string"
          },
          "filter": {
            "description": "The filter to apply to the metric.",
            "type": "string"
          },
          "name": {
            "description": "The name of the metric. Only valid options are A-Z",
            "pattern": "^[A-Z]$",
            "type": "string"
          }
        },
        "required": [
          "name",
          "aggregation"
        ],
        "title": "Timeslice Metric Doc Count Metric",
        "type": "object"
      },
      "timeslice_metric_percentile_metric": {
        "properties": {
          "aggregation": {
            "description": "The aggregation type of the metric. Only valid option is \"percentile\"",
            "type": "string"
          },
          "field": {
            "description": "The field of the metric.",
            "type": "string"
          },
          "filter": {
            "description": "The filter to apply to the metric.",
            "type": "string"
          },
          "name": {
            "description": "The name of the metric. Only valid options are A-Z",
            "pattern": "^[A-Z]$",
            "type": "string"
          },
          "percentile": {
            "description": "The percentile value.",
            "type": "number"
          }
        },
        "required": [
          "name",
          "aggregation",
          "field",
          "percentile"
        ],
        "title": "Timeslice Metric Percentile Metric",
        "type": "object"
      },
      "title": {
        "description": "Comma-separated list of data streams, indices, and aliases that you want to search. Supports wildcards (`*`).",
        "type": "string"
      },
      "type": {
        "description": "When set to `rollup`, identifies the rollup data views.",
        "type": "string"
      },
      "typemeta": {
        "description": "When you use rollup indices, contains the field list for the rollup data view API endpoints.",
        "properties": {
          "aggs": {
            "description": "A map of rollup restrictions by aggregation type and field name.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "params": {
            "description": "Properties for retrieving rollup fields.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "aggs",
          "params"
        ],
        "type": "object"
      },
      "typemeta_response": {
        "description": "When you use rollup indices, contains the field list for the rollup data view API endpoints.",
        "nullable": true,
        "properties": {
          "aggs": {
            "description": "A map of rollup restrictions by aggregation type and field name.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "params": {
            "description": "Properties for retrieving rollup fields.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "update-agent-policy_response_object": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/agent_policy"
          }
        },
        "required": [
          "item"
        ],
        "type": "object"
      },
      "update-fleet-server-hosts_request": {
        "properties": {
          "host_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "is_default": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "proxy_id": {
            "description": "The ID of the proxy to use for this fleet server host. See the proxies API for more information.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "update-fleet-server-hosts_response_object": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/fleet_server_host"
          }
        },
        "required": [
          "item"
        ],
        "type": "object"
      },
      "update-output_response_object": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/output_update_request"
          }
        },
        "type": "object"
      },
      "update-package-policy_response_object": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/package_policy"
          },
          "sucess": {
            "type": "boolean"
          }
        },
        "required": [
          "item",
          "sucess"
        ],
        "type": "object"
      },
      "update-package_request": {
        "properties": {
          "keepPoliciesUpToDate": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "update-package_response_object": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/update-package_response_object_item_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "update-package_response_object_item_item": {
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/kibana_saved_object_type"
              },
              {
                "$ref": "#/components/schemas/elasticsearch_asset_type"
              }
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object"
      },
      "update_connector_request": {
        "properties": {
          "config": {
            "default": {},
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string"
          },
          "secrets": {
            "default": {},
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "update_connector_response_object": {
        "properties": {
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "connector_type_id": {
            "description": "The connector type identifier.",
            "type": "string"
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string"
          },
          "is_deprecated": {
            "description": "Indicates whether the connector is deprecated.",
            "type": "boolean"
          },
          "is_missing_secrets": {
            "description": "Indicates whether the connector is missing secrets.",
            "type": "boolean"
          },
          "is_preconfigured": {
            "description": "Indicates whether the connector is preconfigured. If true, the `config` and `is_missing_secrets` properties are omitted from the response. ",
            "type": "boolean"
          },
          "is_system_action": {
            "description": "Indicates whether the connector is used for system actions.",
            "type": "boolean"
          },
          "name": {
            "description": " The name of the rule.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "connector_type_id",
          "is_preconfigured",
          "is_deprecated",
          "is_system_action"
        ],
        "type": "object"
      },
      "update_data_view_request_object": {
        "properties": {
          "data_view": {
            "$ref": "#/components/schemas/update_data_view_request_object_data_view"
          },
          "refresh_fields": {
            "default": false,
            "description": "Reloads the data view fields after the data view is updated.",
            "type": "boolean"
          }
        },
        "required": [
          "data_view"
        ],
        "title": "Update data view request",
        "type": "object"
      },
      "update_data_view_request_object_data_view": {
        "description": "The data view properties you want to update. Only the specified properties are updated in the data view. Unspecified fields stay as they are persisted.\n",
        "properties": {
          "allowNoIndex": {
            "$ref": "#/components/schemas/allownoindex"
          },
          "fieldFormats": {
            "$ref": "#/components/schemas/fieldformats"
          },
          "fields": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "type": "string"
          },
          "runtimeFieldMap": {
            "additionalProperties": {
              "$ref": "#/components/schemas/runtimefieldmap"
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "sourceFilters": {
            "$ref": "#/components/schemas/sourcefilters"
          },
          "timeFieldName": {
            "$ref": "#/components/schemas/timefieldname"
          },
          "title": {
            "$ref": "#/components/schemas/title"
          },
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "typeMeta": {
            "$ref": "#/components/schemas/typemeta"
          }
        },
        "type": "object"
      },
      "update_rule_request": {
        "properties": {
          "actions": {
            "default": [],
            "items": {
              "$ref": "#/components/schemas/update_rule_request_actions_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "alert_delay": {
            "$ref": "#/components/schemas/update_rule_request_alert_delay"
          },
          "name": {
            "description": "The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.",
            "type": "string"
          },
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          },
          "params": {
            "default": {},
            "description": "The parameters for the rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "schedule": {
            "$ref": "#/components/schemas/update_rule_request_schedule"
          },
          "tags": {
            "default": [],
            "items": {
              "description": "The tags for the rule.",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "throttle": {
            "description": "Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "name",
          "schedule"
        ],
        "type": "object"
      },
      "update_rule_request_actions_item": {
        "description": "An action that runs under defined conditions.",
        "properties": {
          "alerts_filter": {
            "$ref": "#/components/schemas/update_rule_request_actions_item_alerts_filter"
          },
          "frequency": {
            "$ref": "#/components/schemas/update_rule_request_actions_item_frequency"
          },
          "group": {
            "description": "The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.",
            "type": "string"
          },
          "id": {
            "description": "The identifier for the connector saved object.",
            "type": "string"
          },
          "params": {
            "default": {},
            "description": "The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "use_alert_data_for_template": {
            "description": "Indicates whether to use alert data as a template.",
            "type": "boolean"
          },
          "uuid": {
            "description": "A universally unique identifier (UUID) for the action.",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "update_rule_request_actions_item_alerts_filter": {
        "properties": {
          "query": {
            "$ref": "#/components/schemas/update_rule_request_actions_item_alerts_filter_query"
          },
          "timeframe": {
            "$ref": "#/components/schemas/update_rule_request_actions_item_alerts_filter_timeframe"
          }
        },
        "type": "object"
      },
      "update_rule_request_actions_item_alerts_filter_query": {
        "properties": {
          "dsl": {
            "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL).",
            "type": "string"
          },
          "filters": {
            "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL) as defined in the `kbn-es-query` package.",
            "items": {
              "$ref": "#/components/schemas/update_rule_request_actions_item_alerts_filter_query_filters_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "kql": {
            "description": "A filter written in Kibana Query Language (KQL).",
            "type": "string"
          }
        },
        "required": [
          "kql",
          "filters"
        ],
        "type": "object"
      },
      "update_rule_request_actions_item_alerts_filter_query_filters_item": {
        "properties": {
          "$state": {
            "$ref": "#/components/schemas/update_rule_request_actions_item_alerts_filter_query_filters_item_$state"
          },
          "meta": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "query": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "meta"
        ],
        "type": "object"
      },
      "update_rule_request_actions_item_alerts_filter_query_filters_item_$state": {
        "properties": {
          "store": {
            "description": "A filter can be either specific to an application context or applied globally.",
            "type": "string"
          }
        },
        "required": [
          "store"
        ],
        "type": "object"
      },
      "update_rule_request_actions_item_alerts_filter_timeframe": {
        "description": "Defines a period that limits whether the action runs.",
        "properties": {
          "days": {
            "description": "Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.",
            "items": {
              "type": "integer"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "hours": {
            "$ref": "#/components/schemas/update_rule_request_actions_item_alerts_filter_timeframe_hours"
          },
          "timezone": {
            "description": "The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.",
            "type": "string"
          }
        },
        "required": [
          "days",
          "hours",
          "timezone"
        ],
        "type": "object"
      },
      "update_rule_request_actions_item_alerts_filter_timeframe_hours": {
        "description": "Defines the range of time in a day that the action can run. If the `start` value is `00:00` and the `end` value is `24:00`, actions be generated all day.",
        "properties": {
          "end": {
            "description": "The end of the time frame in 24-hour notation (`hh:mm`).",
            "type": "string"
          },
          "start": {
            "description": "The start of the time frame in 24-hour notation (`hh:mm`).",
            "type": "string"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "type": "object"
      },
      "update_rule_request_actions_item_frequency": {
        "properties": {
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "type": "string"
          },
          "summary": {
            "description": "Indicates whether the action is a summary.",
            "type": "boolean"
          },
          "throttle": {
            "description": "The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if `notify_when` is set to `onThrottleInterval`. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "summary",
          "notify_when",
          "throttle"
        ],
        "type": "object"
      },
      "update_rule_request_alert_delay": {
        "description": "Indicates that an alert occurs only when the specified number of consecutive runs met the rule conditions.",
        "properties": {
          "active": {
            "description": "The number of consecutive runs that must meet the rule conditions.",
            "type": "number"
          }
        },
        "required": [
          "active"
        ],
        "type": "object"
      },
      "update_rule_request_schedule": {
        "properties": {
          "interval": {
            "description": "The interval is specified in seconds, minutes, hours, or days.",
            "type": "string"
          }
        },
        "required": [
          "interval"
        ],
        "type": "object"
      },
      "update_rule_response_object": {
        "properties": {
          "actions": {
            "items": {
              "$ref": "#/components/schemas/update_rule_response_object_actions_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "active_snoozes": {
            "items": {
              "description": "List of active snoozes for the rule.",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "alert_delay": {
            "$ref": "#/components/schemas/update_rule_response_object_alert_delay"
          },
          "api_key_created_by_user": {
            "description": "Indicates whether the API key that is associated with the rule was created by the user.",
            "nullable": true,
            "type": "boolean"
          },
          "api_key_owner": {
            "description": "The owner of the API key that is associated with the rule and used to run background tasks.",
            "nullable": true,
            "type": "string"
          },
          "consumer": {
            "description": "The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.",
            "type": "string"
          },
          "created_at": {
            "description": "The date and time that the rule was created.",
            "type": "string"
          },
          "created_by": {
            "description": "The identifier for the user that created the rule.",
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
            "type": "boolean"
          },
          "execution_status": {
            "$ref": "#/components/schemas/update_rule_response_object_execution_status"
          },
          "id": {
            "description": "The identifier for the rule.",
            "type": "string"
          },
          "is_snoozed_until": {
            "description": "The date when the rule will no longer be snoozed.",
            "nullable": true,
            "type": "string"
          },
          "last_run": {
            "$ref": "#/components/schemas/update_rule_response_object_last_run"
          },
          "mapped_params": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "monitoring": {
            "$ref": "#/components/schemas/update_rule_response_object_monitoring"
          },
          "mute_all": {
            "description": "Indicates whether all alerts are muted.",
            "type": "boolean"
          },
          "muted_alert_ids": {
            "items": {
              "description": "List of identifiers of muted alerts. ",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "description": " The name of the rule.",
            "type": "string"
          },
          "next_run": {
            "description": "Date and time of the next run of the rule.",
            "nullable": true,
            "type": "string"
          },
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          },
          "params": {
            "description": "The parameters for the rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "revision": {
            "description": "The rule revision number.",
            "type": "number"
          },
          "rule_type_id": {
            "description": "The rule type identifier.",
            "type": "string"
          },
          "running": {
            "description": "Indicates whether the rule is running.",
            "nullable": true,
            "type": "boolean"
          },
          "schedule": {
            "$ref": "#/components/schemas/update_rule_response_object_schedule"
          },
          "scheduled_task_id": {
            "description": "Identifier of the scheduled task.",
            "type": "string"
          },
          "snooze_schedule": {
            "items": {
              "$ref": "#/components/schemas/update_rule_response_object_snooze_schedule_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "tags": {
            "items": {
              "description": "The tags for the rule.",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "throttle": {
            "deprecated": true,
            "description": "Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          },
          "updated_at": {
            "description": "The date and time that the rule was updated most recently.",
            "type": "string"
          },
          "updated_by": {
            "description": "The identifier for the user that updated this rule most recently.",
            "nullable": true,
            "type": "string"
          },
          "view_in_app_relative_url": {
            "description": "Relative URL to view rule in the app.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "id",
          "enabled",
          "name",
          "tags",
          "rule_type_id",
          "consumer",
          "schedule",
          "actions",
          "params",
          "created_by",
          "updated_by",
          "created_at",
          "updated_at",
          "api_key_owner",
          "mute_all",
          "muted_alert_ids",
          "execution_status",
          "revision"
        ],
        "type": "object"
      },
      "update_rule_response_object_actions_item": {
        "properties": {
          "alerts_filter": {
            "$ref": "#/components/schemas/update_rule_response_object_actions_item_alerts_filter"
          },
          "connector_type_id": {
            "description": "The type of connector. This property appears in responses but cannot be set in requests.",
            "type": "string"
          },
          "frequency": {
            "$ref": "#/components/schemas/update_rule_response_object_actions_item_frequency"
          },
          "group": {
            "description": "The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.",
            "type": "string"
          },
          "id": {
            "description": "The identifier for the connector saved object.",
            "type": "string"
          },
          "params": {
            "description": "The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "use_alert_data_for_template": {
            "description": "Indicates whether to use alert data as a template.",
            "type": "boolean"
          },
          "uuid": {
            "description": "A universally unique identifier (UUID) for the action.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "connector_type_id",
          "params"
        ],
        "type": "object"
      },
      "update_rule_response_object_actions_item_alerts_filter": {
        "description": "Defines a period that limits whether the action runs.",
        "properties": {
          "query": {
            "$ref": "#/components/schemas/update_rule_response_object_actions_item_alerts_filter_query"
          },
          "timeframe": {
            "$ref": "#/components/schemas/update_rule_response_object_actions_item_alerts_filter_timeframe"
          }
        },
        "type": "object"
      },
      "update_rule_response_object_actions_item_alerts_filter_query": {
        "properties": {
          "dsl": {
            "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL).",
            "type": "string"
          },
          "filters": {
            "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL) as defined in the `kbn-es-query` package.",
            "items": {
              "$ref": "#/components/schemas/update_rule_response_object_actions_item_alerts_filter_query_filters_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "kql": {
            "description": "A filter written in Kibana Query Language (KQL).",
            "type": "string"
          }
        },
        "required": [
          "kql",
          "filters"
        ],
        "type": "object"
      },
      "update_rule_response_object_actions_item_alerts_filter_query_filters_item": {
        "properties": {
          "$state": {
            "$ref": "#/components/schemas/update_rule_response_object_actions_item_alerts_filter_query_filters_item_$state"
          },
          "meta": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "query": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "meta"
        ],
        "type": "object"
      },
      "update_rule_response_object_actions_item_alerts_filter_query_filters_item_$state": {
        "properties": {
          "store": {
            "description": "A filter can be either specific to an application context or applied globally.",
            "type": "string"
          }
        },
        "required": [
          "store"
        ],
        "type": "object"
      },
      "update_rule_response_object_actions_item_alerts_filter_timeframe": {
        "properties": {
          "days": {
            "description": "Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.",
            "items": {
              "type": "integer"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "hours": {
            "$ref": "#/components/schemas/update_rule_response_object_actions_item_alerts_filter_timeframe_hours"
          },
          "timezone": {
            "description": "The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.",
            "type": "string"
          }
        },
        "required": [
          "days",
          "hours",
          "timezone"
        ],
        "type": "object"
      },
      "update_rule_response_object_actions_item_alerts_filter_timeframe_hours": {
        "properties": {
          "end": {
            "description": "The end of the time frame in 24-hour notation (`hh:mm`).",
            "type": "string"
          },
          "start": {
            "description": "The start of the time frame in 24-hour notation (`hh:mm`).",
            "type": "string"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "type": "object"
      },
      "update_rule_response_object_actions_item_frequency": {
        "properties": {
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "type": "string"
          },
          "summary": {
            "description": "Indicates whether the action is a summary.",
            "type": "boolean"
          },
          "throttle": {
            "description": "The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if 'notify_when' is set to 'onThrottleInterval'. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "summary",
          "notify_when",
          "throttle"
        ],
        "type": "object"
      },
      "update_rule_response_object_alert_delay": {
        "description": "Indicates that an alert occurs only when the specified number of consecutive runs met the rule conditions.",
        "properties": {
          "active": {
            "description": "The number of consecutive runs that must meet the rule conditions.",
            "type": "number"
          }
        },
        "required": [
          "active"
        ],
        "type": "object"
      },
      "update_rule_response_object_execution_status": {
        "properties": {
          "error": {
            "$ref": "#/components/schemas/update_rule_response_object_execution_status_error"
          },
          "last_duration": {
            "description": "Duration of last execution of the rule.",
            "type": "number"
          },
          "last_execution_date": {
            "description": "The date and time when rule was executed last.",
            "type": "string"
          },
          "status": {
            "description": "Status of rule execution.",
            "type": "string"
          },
          "warning": {
            "$ref": "#/components/schemas/update_rule_response_object_execution_status_warning"
          }
        },
        "required": [
          "status",
          "last_execution_date"
        ],
        "type": "object"
      },
      "update_rule_response_object_execution_status_error": {
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "reason": {
            "description": "Reason for error.",
            "type": "string"
          }
        },
        "required": [
          "reason",
          "message"
        ],
        "type": "object"
      },
      "update_rule_response_object_execution_status_warning": {
        "properties": {
          "message": {
            "description": "Warning message.",
            "type": "string"
          },
          "reason": {
            "description": "Reason for warning.",
            "type": "string"
          }
        },
        "required": [
          "reason",
          "message"
        ],
        "type": "object"
      },
      "update_rule_response_object_last_run": {
        "nullable": true,
        "properties": {
          "alerts_count": {
            "$ref": "#/components/schemas/update_rule_response_object_last_run_alerts_count"
          },
          "outcome": {
            "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
            "type": "string"
          },
          "outcome_msg": {
            "items": {
              "description": "Outcome message generated during last rule run.",
              "type": "string"
            },
            "nullable": true,
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "outcome_order": {
            "description": "Order of the outcome.",
            "type": "number"
          },
          "warning": {
            "description": "Warning of last rule execution.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "outcome",
          "alerts_count"
        ],
        "type": "object"
      },
      "update_rule_response_object_last_run_alerts_count": {
        "properties": {
          "active": {
            "description": "Number of active alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "ignored": {
            "description": "Number of ignored alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "new": {
            "description": "Number of new alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "recovered": {
            "description": "Number of recovered alerts during last run.",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "update_rule_response_object_monitoring": {
        "description": "Monitoring details of the rule.",
        "properties": {
          "run": {
            "$ref": "#/components/schemas/update_rule_response_object_monitoring_run"
          }
        },
        "required": [
          "run"
        ],
        "type": "object"
      },
      "update_rule_response_object_monitoring_run": {
        "description": "Rule run details.",
        "properties": {
          "calculated_metrics": {
            "$ref": "#/components/schemas/update_rule_response_object_monitoring_run_calculated_metrics"
          },
          "history": {
            "description": "History of the rule run.",
            "items": {
              "$ref": "#/components/schemas/update_rule_response_object_monitoring_run_history_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "last_run": {
            "$ref": "#/components/schemas/update_rule_response_object_monitoring_run_last_run"
          }
        },
        "required": [
          "history",
          "calculated_metrics",
          "last_run"
        ],
        "type": "object"
      },
      "update_rule_response_object_monitoring_run_calculated_metrics": {
        "description": "Calculation of different percentiles and success ratio.",
        "properties": {
          "p50": {
            "type": "number"
          },
          "p95": {
            "type": "number"
          },
          "p99": {
            "type": "number"
          },
          "success_ratio": {
            "type": "number"
          }
        },
        "required": [
          "success_ratio"
        ],
        "type": "object"
      },
      "update_rule_response_object_monitoring_run_history_item": {
        "properties": {
          "duration": {
            "description": "Duration of the rule run.",
            "type": "number"
          },
          "outcome": {
            "$ref": "#/components/schemas/update_rule_response_object_monitoring_run_history_item_outcome"
          },
          "success": {
            "description": "Indicates whether the rule run was successful.",
            "type": "boolean"
          },
          "timestamp": {
            "description": "Time of rule run.",
            "type": "number"
          }
        },
        "required": [
          "success",
          "timestamp"
        ],
        "type": "object"
      },
      "update_rule_response_object_monitoring_run_history_item_outcome": {
        "properties": {
          "alerts_count": {
            "$ref": "#/components/schemas/update_rule_response_object_monitoring_run_history_item_outcome_alerts_count"
          },
          "outcome": {
            "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
            "type": "string"
          },
          "outcome_msg": {
            "items": {
              "description": "Outcome message generated during last rule run.",
              "type": "string"
            },
            "nullable": true,
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "outcome_order": {
            "description": "Order of the outcome.",
            "type": "number"
          },
          "warning": {
            "description": "Warning of last rule execution.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "outcome",
          "alerts_count"
        ],
        "type": "object"
      },
      "update_rule_response_object_monitoring_run_history_item_outcome_alerts_count": {
        "properties": {
          "active": {
            "description": "Number of active alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "ignored": {
            "description": "Number of ignored alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "new": {
            "description": "Number of new alerts during last run.",
            "nullable": true,
            "type": "number"
          },
          "recovered": {
            "description": "Number of recovered alerts during last run.",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "update_rule_response_object_monitoring_run_last_run": {
        "properties": {
          "metrics": {
            "$ref": "#/components/schemas/update_rule_response_object_monitoring_run_last_run_metrics"
          },
          "timestamp": {
            "description": "Time of the most recent rule run.",
            "type": "string"
          }
        },
        "required": [
          "timestamp",
          "metrics"
        ],
        "type": "object"
      },
      "update_rule_response_object_monitoring_run_last_run_metrics": {
        "properties": {
          "duration": {
            "description": "Duration of most recent rule run.",
            "type": "number"
          },
          "gap_duration_s": {
            "description": "Duration in seconds of rule run gap.",
            "nullable": true,
            "type": "number"
          },
          "total_alerts_created": {
            "description": "Total number of alerts created during last rule run.",
            "nullable": true,
            "type": "number"
          },
          "total_alerts_detected": {
            "description": "Total number of alerts detected during last rule run.",
            "nullable": true,
            "type": "number"
          },
          "total_indexing_duration_ms": {
            "description": "Total time spent indexing documents during last rule run in milliseconds.",
            "nullable": true,
            "type": "number"
          },
          "total_search_duration_ms": {
            "description": "Total time spent performing Elasticsearch searches as measured by Kibana; includes network latency and time spent serializing or deserializing the request and response.",
            "nullable": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "update_rule_response_object_schedule": {
        "properties": {
          "interval": {
            "description": "The interval is specified in seconds, minutes, hours, or days.",
            "type": "string"
          }
        },
        "required": [
          "interval"
        ],
        "type": "object"
      },
      "update_rule_response_object_snooze_schedule_item": {
        "properties": {
          "duration": {
            "description": "Duration of the rule snooze schedule.",
            "type": "number"
          },
          "id": {
            "description": "Identifier of the rule snooze schedule.",
            "type": "string"
          },
          "rRule": {
            "$ref": "#/components/schemas/update_rule_response_object_snooze_schedule_item_rRule"
          },
          "skipRecurrences": {
            "items": {
              "description": "Skips recurrence of rule on this date.",
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "duration",
          "rRule"
        ],
        "type": "object"
      },
      "update_rule_response_object_snooze_schedule_item_rRule": {
        "properties": {
          "byhour": {
            "items": {
              "description": "Indicates hours of the day to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byminute": {
            "items": {
              "description": "Indicates minutes of the hour to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bymonth": {
            "items": {
              "description": "Indicates months of the year that this rule should recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bymonthday": {
            "items": {
              "description": "Indicates the days of the month to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bysecond": {
            "items": {
              "description": "Indicates seconds of the day to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "bysetpos": {
            "items": {
              "description": "A positive or negative integer affecting the nth day of the month. For example, -2 combined with `byweekday` of FR is 2nd to last Friday of the month. It is recommended to not set this manually and just use `byweekday`.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byweekday": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "description": "Indicates the days of the week to recur or else nth-day-of-month strings. For example, \"+2TU\" second Tuesday of month, \"-1FR\" last Friday of the month, which are internally converted to a `byweekday/bysetpos` combination."
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byweekno": {
            "items": {
              "description": "Indicates number of the week hours to recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "byyearday": {
            "items": {
              "description": "Indicates the days of the year that this rule should recur.",
              "type": "number"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "count": {
            "description": "Number of times the rule should recur until it stops.",
            "type": "number"
          },
          "dtstart": {
            "description": "Rule start date in Coordinated Universal Time (UTC).",
            "type": "string"
          },
          "freq": {
            "description": "Indicates frequency of the rule. Options are YEARLY, MONTHLY, WEEKLY, DAILY.",
            "type": "integer"
          },
          "interval": {
            "description": "Indicates the interval of frequency. For example, 1 and YEARLY is every 1 year, 2 and WEEKLY is every 2 weeks.",
            "type": "number"
          },
          "tzid": {
            "description": "Indicates timezone abbreviation.",
            "type": "string"
          },
          "until": {
            "description": "Recur the rule until this date.",
            "type": "string"
          },
          "wkst": {
            "description": "Indicates the start of week, defaults to Monday.",
            "type": "string"
          }
        },
        "required": [
          "dtstart",
          "tzid"
        ],
        "type": "object"
      },
      "update_slo_request": {
        "description": "The update SLO API request body varies depending on the type of indicator, time window and budgeting method. Partial update is handled.\n",
        "properties": {
          "budgetingMethod": {
            "$ref": "#/components/schemas/budgeting_method"
          },
          "description": {
            "description": "A description for the SLO.",
            "type": "string"
          },
          "indicator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/indicator_properties_custom_kql"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_availability"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_latency"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_custom_metric"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_histogram"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_timeslice_metric"
              }
            ]
          },
          "name": {
            "description": "A name for the SLO.",
            "type": "string"
          },
          "objective": {
            "$ref": "#/components/schemas/objective"
          },
          "settings": {
            "$ref": "#/components/schemas/settings"
          },
          "tags": {
            "description": "List of tags",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "timeWindow": {
            "$ref": "#/components/schemas/time_window"
          }
        },
        "title": "Update SLO request",
        "type": "object"
      },
      "upgrade_agent": {
        "properties": {
          "force": {
            "description": "Force upgrade, skipping validation (should be used with caution)",
            "type": "boolean"
          },
          "skipRateLimitCheck": {
            "description": "Skip rate limit check for upgrade",
            "type": "boolean"
          },
          "source_uri": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "version"
        ],
        "title": "Upgrade agent",
        "type": "object"
      },
      "upgrade_agent_diff": {
        "items": {
          "items": {
            "$ref": "#/components/schemas/full_agent_policy_input"
          },
          "type": "array",
          "x-go-type-skip-optional-pointer": true
        },
        "title": "Package policy Upgrade dryrun",
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "upgrade_diff": {
        "items": {
          "allOf": [
            {
              "$ref": "#/components/schemas/package_policy"
            },
            {
              "allOf": [
                {
                  "$ref": "#/components/schemas/new_package_policy"
                },
                {
                  "$ref": "#/components/schemas/upgrade_diff_item_allOf_1_allOf_1"
                }
              ],
              "type": "object",
              "x-go-type-skip-optional-pointer": true
            }
          ]
        },
        "title": "Package policy Upgrade dryrun",
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "upgrade_diff_item_allOf_1_allOf_1": {
        "properties": {
          "errors": {
            "items": {
              "$ref": "#/components/schemas/upgrade_diff_item_allOf_1_allOf_1_errors_item"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "missingVars": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "upgrade_diff_item_allOf_1_allOf_1_errors_item": {
        "properties": {
          "key": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "Access_API_Key": {
        "description": "e.g. Authorization: ApiKey base64AccessApiKey",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "Enrollment_API_Key": {
        "description": "e.g. Authorization: ApiKey base64EnrollmentApiKey",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "apiKeyAuth": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Kibana HTTP APIs",
    "version": "0.0.0"
  }
}
