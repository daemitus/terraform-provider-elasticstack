{
  "components": {
    "examples": {
      "create_data_view_request": {
        "summary": "Create a data view with runtime fields.",
        "value": {
          "data_view": {
            "name": "My Logstash data view",
            "runtimeFieldMap": {
              "runtime_shape_name": {
                "script": {
                  "source": "emit(doc['shape_name'].value)"
                },
                "type": "keyword"
              }
            },
            "title": "logstash-*"
          }
        }
      },
      "create_es_query_esql_rule_request": {
        "summary": "Create an Elasticsearch query rule that uses Elasticsearch Query Language (ES|QL).",
        "value": {
          "actions": [
            {
              "frequency": {
                "notify_when": "onActiveAlert",
                "summary": false
              },
              "group": "query matched",
              "id": "d0db1fe0-78d6-11ee-9177-f7d404c8c945",
              "params": {
                "level": "info",
                "message": "Elasticsearch query rule '{{rule.name}}' is active:\n- Value: {{context.value}} - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}} - Timestamp: {{context.date}} - Link: {{context.link}}"
              }
            }
          ],
          "consumer": "stackAlerts",
          "name": "my Elasticsearch query ESQL rule",
          "params": {
            "esqlQuery": {
              "esql": "FROM kibana_sample_data_logs | KEEP bytes, clientip, host, geo.dest | where geo.dest != \"GB\" | STATS sumbytes = sum(bytes) by clientip, host | WHERE sumbytes \u003e 5000 | SORT sumbytes desc | LIMIT 10"
            },
            "searchType": "esqlQuery",
            "size": 0,
            "threshold": [
              0
            ],
            "thresholdComparator": "\u003e",
            "timeField": "@timestamp",
            "timeWindowSize": 1,
            "timeWindowUnit": "d"
          },
          "rule_type_id": ".es-query",
          "schedule": {
            "interval": "1d"
          }
        }
      },
      "create_es_query_esql_rule_response": {
        "summary": "The create rule API returns a JSON object that contains details about the rule.",
        "value": {
          "actions": [
            {
              "connector_type_id": ".server-log",
              "frequency": {
                "notify_when": "onActiveAlert",
                "summary": false,
                "throttle": null
              },
              "group": "query matched",
              "id": "d0db1fe0-78d6-11ee-9177-f7d404c8c945",
              "params": {
                "level": "info",
                "message": "Elasticsearch query rule '{{rule.name}}' is active:\n- Value: {{context.value}} - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}} - Timestamp: {{context.date}} - Link: {{context.link}}"
              },
              "uuid": "bfe370a3-531b-4855-bbe6-ad739f578844"
            }
          ],
          "api_key_created_by_user": false,
          "api_key_owner": "elastic",
          "consumer": "stackAlerts",
          "created_at": "2023-11-01T19:00:10.453Z",
          "created_by": "elastic",
          "enabled": true,
          "execution_status": {
            "last_execution_date": "2023-11-01T19:00:10.453Z",
            "status": "pending"
          },
          "id": "e0d62360-78e8-11ee-9177-f7d404c8c945",
          "mute_all": false,
          "muted_alert_ids": [],
          "name": "my Elasticsearch query ESQL rule",
          "notify_when": null,
          "params": {
            "aggType": "count",
            "esqlQuery": {
              "esql": "FROM kibana_sample_data_logs | keep bytes, clientip, host, geo.dest | WHERE geo.dest != \"GB\" | stats sumbytes = sum(bytes) by clientip, host | WHERE sumbytes \u003e 5000 | sort sumbytes desc | limit 10"
            },
            "excludeHitsFromPreviousRun\"": "true,",
            "groupBy": "all",
            "searchType": "esqlQuery",
            "size": 0,
            "threshold": [
              0
            ],
            "thresholdComparator": "\u003e",
            "timeField": "@timestamp",
            "timeWindowSize": 1,
            "timeWindowUnit": "d"
          },
          "revision": 0,
          "rule_type_id": ".es-query",
          "running": false,
          "schedule": {
            "interval": "1d"
          },
          "scheduled_task_id": "e0d62360-78e8-11ee-9177-f7d404c8c945",
          "tags": [],
          "throttle": null,
          "updated_at": "2023-11-01T19:00:10.453Z",
          "updated_by": "elastic\","
        }
      },
      "create_es_query_kql_rule_request": {
        "summary": "Create an Elasticsearch query rule that uses Kibana query language (KQL).",
        "value": {
          "consumer": "alerts",
          "name": "my Elasticsearch query KQL rule",
          "params": {
            "aggType": "count",
            "excludeHitsFromPreviousRun": true,
            "groupBy": "all",
            "searchConfiguration": {
              "index": "90943e30-9a47-11e8-b64d-95841ca0b247",
              "query": {
                "language": "kuery",
                "query": "\"\"geo.src : \"US\" \"\""
              }
            },
            "searchType": "searchSource",
            "size": 100,
            "threshold": [
              1000
            ],
            "thresholdComparator": "\u003e",
            "timeWindowSize": 5,
            "timeWindowUnit": "m"
          },
          "rule_type_id": ".es-query",
          "schedule": {
            "interval": "1m"
          }
        }
      },
      "create_es_query_kql_rule_response": {
        "summary": "The create rule API returns a JSON object that contains details about the rule.",
        "value": {
          "actions": [],
          "api_key_created_by_user": false,
          "api_key_owner": "elastic",
          "consumer": "alerts",
          "created_at": "2023-07-14T20:24:50.729Z",
          "created_by": "elastic",
          "enabled": true,
          "execution_status": {
            "last_execution_date": "2023-07-14T20:24:50.729Z",
            "status": "pending"
          },
          "id": "7bd506d0-2284-11ee-8fad-6101956ced88",
          "mute_all": false,
          "muted_alert_ids": [],
          "name": "my Elasticsearch query KQL rule\"",
          "notify_when": null,
          "params": {
            "aggType": "count",
            "excludeHitsFromPreviousRun": true,
            "groupBy": "all",
            "searchConfiguration": {
              "index": "90943e30-9a47-11e8-b64d-95841ca0b247",
              "query": {
                "language": "kuery",
                "query": "\"\"geo.src : \"US\" \"\""
              }
            },
            "searchType": "searchSource",
            "size": 100,
            "threshold": [
              1000
            ],
            "thresholdComparator": "\u003e",
            "timeWindowSize": 5,
            "timeWindowUnit": "m"
          },
          "revision": 0,
          "rule_type_id": ".es-query",
          "running": false,
          "schedule": {
            "interval": "1m"
          },
          "scheduled_task_id": "7bd506d0-2284-11ee-8fad-6101956ced88",
          "tags": [],
          "throttle": null,
          "updated_at": "2023-07-14T20:24:50.729Z",
          "updated_by": "elastic"
        }
      },
      "create_es_query_rule_request": {
        "summary": "Create an Elasticsearch query rule that uses Elasticsearch query domain specific language (DSL) to define its query and a server log connector to send notifications.",
        "value": {
          "actions": [
            {
              "frequency": {
                "notify_when": "onThrottleInterval",
                "summary": true,
                "throttle": "1d"
              },
              "group": "query matched",
              "id": "fdbece50-406c-11ee-850e-c71febc4ca7f",
              "params": {
                "level": "info",
                "message": "The system has detected {{alerts.new.count}} new, {{alerts.ongoing.count}} ongoing, and {{alerts.recovered.count}} recovered alerts."
              }
            },
            {
              "frequency": {
                "notify_when": "onActionGroupChange",
                "summary": false
              },
              "group": "recovered",
              "id": "fdbece50-406c-11ee-850e-c71febc4ca7f",
              "params": {
                "level": "info",
                "message": "Recovered"
              }
            }
          ],
          "consumer": "alerts",
          "name": "my Elasticsearch query rule",
          "params": {
            "esQuery": "\"\"\"{\"query\":{\"match_all\" : {}}}\"\"\"",
            "index": [
              "kibana_sample_data_logs"
            ],
            "size": 100,
            "threshold": [
              100
            ],
            "thresholdComparator": "\u003e",
            "timeField": "@timestamp",
            "timeWindowSize": 1,
            "timeWindowUnit": "d"
          },
          "rule_type_id": ".es-query",
          "schedule": {
            "interval": "1d"
          }
        }
      },
      "create_es_query_rule_response": {
        "summary": "The create rule API returns a JSON object that contains details about the rule.",
        "value": {
          "actions": [
            {
              "connector_type_id": ".server-log",
              "frequency": {
                "notify_when": "onThrottleInterval",
                "summary": true,
                "throttle": "1d"
              },
              "group": "query matched",
              "id": "fdbece50-406c-11ee-850e-c71febc4ca7f",
              "params": {
                "level": "info",
                "message": "The system has detected {{alerts.new.count}} new, {{alerts.ongoing.count}} ongoing, and {{alerts.recovered.count}} recovered alerts."
              },
              "uuid": "53f3c2a3-e5d0-4cfa-af3b-6f0881385e78"
            },
            {
              "connector_type_id": ".server-log",
              "frequency": {
                "notify_when": "onActionGroupChange",
                "summary": false,
                "throttle": null
              },
              "group": "recovered",
              "id": "fdbece50-406c-11ee-850e-c71febc4ca7f",
              "params": {
                "level": "info",
                "message": "Recovered"
              },
              "uuid": "2324e45b-c0df-45c7-9d70-4993e30be758"
            }
          ],
          "api_key_created_by_user": false,
          "api_key_owner": "elastic",
          "consumer": "alerts",
          "created_at": "2023-08-22T00:03:38.263Z",
          "created_by": "elastic",
          "enabled": true,
          "execution_status": {
            "last_execution_date": "2023-08-22T00:03:38.263Z",
            "status": "pending"
          },
          "id": "58148c70-407f-11ee-850e-c71febc4ca7f",
          "mute_all": false,
          "muted_alert_ids": [],
          "name": "my Elasticsearch query rule",
          "notify_when": null,
          "params": {
            "aggType": "count",
            "esQuery": "\"\"\"{\"query\":{\"match_all\" : {}}}\"\"\"",
            "excludeHitsFromPreviousRun": true,
            "groupBy": "all",
            "index": [
              "kibana_sample_data_logs"
            ],
            "searchType": "esQuery",
            "size": 100,
            "threshold": [
              100
            ],
            "thresholdComparator": "\u003e",
            "timeField": "@timestamp",
            "timeWindowSize": 1,
            "timeWindowUnit": "d"
          },
          "revision": 0,
          "rule_type_id": ".es-query",
          "running": false,
          "schedule": {
            "interval": "1d"
          },
          "scheduled_task_id": "58148c70-407f-11ee-850e-c71febc4ca7f",
          "tags": [],
          "throttle": null,
          "updated_at": "2023-08-22T00:03:38.263Z",
          "updated_by": "elastic"
        }
      },
      "create_index_threshold_rule_request": {
        "summary": "Create an index threshold rule.",
        "value": {
          "actions": [
            {
              "frequency": {
                "notify_when": "onActionGroupChange",
                "summary": false
              },
              "group": "threshold met",
              "id": "48de3460-f401-11ed-9f8e-399c75a2deeb",
              "params": {
                "level": "info",
                "message": "Rule '{{rule.name}}' is active for group '{{context.group}}':\n\n- Value: {{context.value}}\n- Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}\n- Timestamp: {{context.date}}"
              }
            }
          ],
          "alert_delay": {
            "active": 3
          },
          "consumer": "alerts",
          "name": "my rule",
          "params": {
            "aggField": "sheet.version",
            "aggType": "avg",
            "groupBy": "top",
            "index": [
              ".test-index"
            ],
            "termField": "name.keyword",
            "termSize": 6,
            "threshold": [
              1000
            ],
            "thresholdComparator": "\u003e",
            "timeField": "@timestamp",
            "timeWindowSize": 5,
            "timeWindowUnit": "m"
          },
          "rule_type_id": ".index-threshold",
          "schedule": {
            "interval": "1m"
          },
          "tags": [
            "cpu"
          ]
        }
      },
      "create_index_threshold_rule_response": {
        "summary": "The create rule API returns a JSON object that contains details about the rule.",
        "value": {
          "actions": [
            {
              "connector_type_id": ".server-log",
              "frequency": {
                "notify_when": "onActionGroupChange",
                "summary": false,
                "throttle": null
              },
              "group": "threshold met",
              "id": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
              "params": {
                "level": "info",
                "message": "Rule {{rule.name}} is active for group {{context.group} :\n\n- Value: {{context.value}}\n- Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}\n- Timestamp: {{context.date}}"
              },
              "uuid": "07aef2a0-9eed-4ef9-94ec-39ba58eb609d"
            }
          ],
          "alert_delay": {
            "active": 3
          },
          "api_key_created_by_user": false,
          "api_key_owner": "elastic",
          "consumer": "alerts",
          "created_at": "2022-06-08T17:20:31.632Z",
          "created_by": "elastic",
          "enabled": true,
          "execution_status": {
            "last_execution_date": "2022-06-08T17:20:31.632Z",
            "status": "pending"
          },
          "id": "41893910-6bca-11eb-9e0d-85d233e3ee35",
          "mute_all": false,
          "muted_alert_ids": [],
          "name": "my rule",
          "notify_when": null,
          "params": {
            "aggField": "sheet.version",
            "aggType": "avg",
            "groupBy": "top",
            "index": [
              ".test-index"
            ],
            "termField": "name.keyword",
            "termSize": 6,
            "threshold": [
              1000
            ],
            "thresholdComparator": "\u003e",
            "timeField": "@timestamp",
            "timeWindowSize": 5,
            "timeWindowUnit": "m"
          },
          "revision": 0,
          "rule_type_id": ".index-threshold",
          "running": false,
          "schedule": {
            "interval": "1m"
          },
          "scheduled_task_id": "425b0800-6bca-11eb-9e0d-85d233e3ee35",
          "tags": [
            "cpu"
          ],
          "throttle": null,
          "updated_at": "2022-06-08T17:20:31.632Z",
          "updated_by": "elastic"
        }
      },
      "create_runtime_field_request": {
        "summary": "Create a runtime field.",
        "value": {
          "name": "runtimeFoo",
          "runtimeField": {
            "script": {
              "source": "emit(doc[\"foo\"].value)"
            },
            "type": "long"
          }
        }
      },
      "create_tracking_containment_rule_request": {
        "summary": "Create a tracking containment rule.",
        "value": {
          "consumer": "alerts",
          "name": "my tracking rule",
          "params": {
            "boundaryGeoField": "location",
            "boundaryIndexId": "0cd90abf-abe7-44c7-909a-f621bbbcfefc",
            "boundaryIndexTitle": "boundary*",
            "boundaryNameField": "name",
            "boundaryType": "entireIndex",
            "dateField\"": "@timestamp",
            "entity": "agent.keyword",
            "geoField": "geo.coordinates",
            "index": "kibana_sample_data_logs",
            "indexId": "90943e30-9a47-11e8-b64d-95841ca0b247"
          },
          "rule_type_id": ".geo-containment",
          "schedule": {
            "interval": "1h"
          }
        }
      },
      "create_tracking_containment_rule_response": {
        "summary": "The create rule API returns a JSON object that contains details about the rule.",
        "value": {
          "actions": [],
          "api_key_created_by_user": false,
          "api_key_owner": "elastic",
          "consumer": "alerts",
          "created_at": "2024-02-14T19:52:55.920Z",
          "created_by": "elastic",
          "enabled": true,
          "execution_status": {
            "last_duration": 74,
            "last_execution_date": "2024-02-15T03:25:38.125Z",
            "status": "ok"
          },
          "id": "b6883f9d-5f70-4758-a66e-369d7c26012f",
          "last_run": {
            "alerts_count": {
              "active": 0,
              "ignored": 0,
              "new": 0,
              "recovered": 0
            },
            "outcome": "succeeded",
            "outcome_msg": null,
            "outcome_order": 0,
            "warning": null
          },
          "mute_all": false,
          "muted_alert_ids": [],
          "name": "my tracking rule",
          "next_run": "2024-02-15T03:26:38.033Z",
          "notify_when": null,
          "params": {
            "boundaryGeoField": "location",
            "boundaryIndexId": "0cd90abf-abe7-44c7-909a-f621bbbcfefc",
            "boundaryIndexTitle": "boundary*",
            "boundaryNameField": "name",
            "boundaryType": "entireIndex",
            "dateField": "@timestamp",
            "entity": "agent.keyword",
            "geoField": "geo.coordinates",
            "index": "kibana_sample_data_logs",
            "indexId": "90943e30-9a47-11e8-b64d-95841ca0b247"
          },
          "revision": 1,
          "rule_type_id": ".geo-containment",
          "running": false,
          "schedule": {
            "interval": "1h"
          },
          "scheduled_task_id": "b6883f9d-5f70-4758-a66e-369d7c26012f",
          "tags": [],
          "throttle": null,
          "updated_at": "2024-02-15T03:24:32.574Z",
          "updated_by": "elastic"
        }
      },
      "export_objects_request": {
        "summary": "Export a specific saved object.",
        "value": {
          "excludeExportDetails": true,
          "includeReferencesDeep": false,
          "objects": [
            {
              "id": "de71f4f0-1902-11e9-919b-ffe5949a18d2",
              "type": "map"
            }
          ]
        }
      },
      "export_objects_response": {
        "summary": "The export objects API response contains a JSON record for each exported object.",
        "value": {
          "attributes": {
            "description": "",
            "layerListJSON": "[{\"id\":\"0hmz5\",\"alpha\":1,\"sourceDescriptor\":{\"type\":\"EMS_TMS\",\"isAutoSelect\":true,\"lightModeDefault\":\"road_map_desaturated\"},\"visible\":true,\"style\":{},\"type\":\"EMS_VECTOR_TILE\",\"minZoom\":0,\"maxZoom\":24},{\"id\":\"edh66\",\"label\":\"Total Requests by Destination\",\"minZoom\":0,\"maxZoom\":24,\"alpha\":0.5,\"sourceDescriptor\":{\"type\":\"EMS_FILE\",\"id\":\"world_countries\",\"tooltipProperties\":[\"name\",\"iso2\"]},\"visible\":true,\"style\":{\"type\":\"VECTOR\",\"properties\":{\"fillColor\":{\"type\":\"DYNAMIC\",\"options\":{\"field\":{\"name\":\"__kbnjoin__count__673ff994-fc75-4c67-909b-69fcb0e1060e\",\"origin\":\"join\"},\"color\":\"Greys\",\"fieldMetaOptions\":{\"isEnabled\":false,\"sigma\":3}}},\"lineColor\":{\"type\":\"STATIC\",\"options\":{\"color\":\"#FFFFFF\"}},\"lineWidth\":{\"type\":\"STATIC\",\"options\":{\"size\":1}},\"iconSize\":{\"type\":\"STATIC\",\"options\":{\"size\":10}},\"symbolizeAs\":{\"options\":{\"value\":\"circle\"}},\"icon\":{\"type\":\"STATIC\",\"options\":{\"value\":\"marker\"}}}},\"type\":\"GEOJSON_VECTOR\",\"joins\":[{\"leftField\":\"iso2\",\"right\":{\"type\":\"ES_TERM_SOURCE\",\"id\":\"673ff994-fc75-4c67-909b-69fcb0e1060e\",\"indexPatternTitle\":\"kibana_sample_data_logs\",\"term\":\"geo.dest\",\"indexPatternRefName\":\"layer_1_join_0_index_pattern\",\"metrics\":[{\"type\":\"count\",\"label\":\"web logs count\"}],\"applyGlobalQuery\":true}}]},{\"id\":\"gaxya\",\"label\":\"Actual Requests\",\"minZoom\":9,\"maxZoom\":24,\"alpha\":1,\"sourceDescriptor\":{\"id\":\"b7486535-171b-4d3b-bb2e-33c1a0a2854c\",\"type\":\"ES_SEARCH\",\"geoField\":\"geo.coordinates\",\"limit\":2048,\"filterByMapBounds\":true,\"tooltipProperties\":[\"clientip\",\"timestamp\",\"host\",\"request\",\"response\",\"machine.os\",\"agent\",\"bytes\"],\"indexPatternRefName\":\"layer_2_source_index_pattern\",\"applyGlobalQuery\":true,\"scalingType\":\"LIMIT\"},\"visible\":true,\"style\":{\"type\":\"VECTOR\",\"properties\":{\"fillColor\":{\"type\":\"STATIC\",\"options\":{\"color\":\"#2200ff\"}},\"lineColor\":{\"type\":\"STATIC\",\"options\":{\"color\":\"#FFFFFF\"}},\"lineWidth\":{\"type\":\"STATIC\",\"options\":{\"size\":2}},\"iconSize\":{\"type\":\"DYNAMIC\",\"options\":{\"field\":{\"name\":\"bytes\",\"origin\":\"source\"},\"minSize\":1,\"maxSize\":23,\"fieldMetaOptions\":{\"isEnabled\":false,\"sigma\":3}}},\"symbolizeAs\":{\"options\":{\"value\":\"circle\"}},\"icon\":{\"type\":\"STATIC\",\"options\":{\"value\":\"marker\"}}}},\"type\":\"GEOJSON_VECTOR\"},{\"id\":\"tfi3f\",\"label\":\"Total Requests and Bytes\",\"minZoom\":0,\"maxZoom\":9,\"alpha\":1,\"sourceDescriptor\":{\"type\":\"ES_GEO_GRID\",\"resolution\":\"COARSE\",\"id\":\"8aaa65b5-a4e9-448b-9560-c98cb1c5ac5b\",\"geoField\":\"geo.coordinates\",\"requestType\":\"point\",\"metrics\":[{\"type\":\"count\",\"label\":\"web logs count\"},{\"type\":\"sum\",\"field\":\"bytes\"}],\"indexPatternRefName\":\"layer_3_source_index_pattern\",\"applyGlobalQuery\":true},\"visible\":true,\"style\":{\"type\":\"VECTOR\",\"properties\":{\"fillColor\":{\"type\":\"DYNAMIC\",\"options\":{\"field\":{\"name\":\"doc_count\",\"origin\":\"source\"},\"color\":\"Blues\",\"fieldMetaOptions\":{\"isEnabled\":false,\"sigma\":3}}},\"lineColor\":{\"type\":\"STATIC\",\"options\":{\"color\":\"#cccccc\"}},\"lineWidth\":{\"type\":\"STATIC\",\"options\":{\"size\":1}},\"iconSize\":{\"type\":\"DYNAMIC\",\"options\":{\"field\":{\"name\":\"sum_of_bytes\",\"origin\":\"source\"},\"minSize\":7,\"maxSize\":25,\"fieldMetaOptions\":{\"isEnabled\":false,\"sigma\":3}}},\"labelText\":{\"type\":\"DYNAMIC\",\"options\":{\"field\":{\"name\":\"doc_count\",\"origin\":\"source\"},\"fieldMetaOptions\":{\"isEnabled\":false,\"sigma\":3}}},\"labelSize\":{\"type\":\"DYNAMIC\",\"options\":{\"field\":{\"name\":\"doc_count\",\"origin\":\"source\"},\"minSize\":12,\"maxSize\":24,\"fieldMetaOptions\":{\"isEnabled\":false,\"sigma\":3}}},\"symbolizeAs\":{\"options\":{\"value\":\"circle\"}},\"icon\":{\"type\":\"STATIC\",\"options\":{\"value\":\"marker\"}}}},\"type\":\"GEOJSON_VECTOR\"}]",
            "mapStateJSON": "{\"zoom\":3.64,\"center\":{\"lon\":-88.92107,\"lat\":42.16337},\"timeFilters\":{\"from\":\"now-7d\",\"to\":\"now\"},\"refreshConfig\":{\"isPaused\":true,\"interval\":0},\"query\":{\"language\":\"kuery\",\"query\":\"\"},\"settings\":{\"autoFitToDataBounds\":false}}",
            "title": "[Logs] Total Requests and Bytes",
            "uiStateJSON": "{\"isDarkMode\":false}"
          },
          "coreMigrationVersion": "8.8.0",
          "created_at": "2023-08-23T20:03:32.204Z",
          "id": "de71f4f0-1902-11e9-919b-ffe5949a18d2",
          "managed": false,
          "references": [
            {
              "id": "90943e30-9a47-11e8-b64d-95841ca0b247",
              "name": "layer_1_join_0_index_pattern",
              "type": "index-pattern"
            },
            {
              "id": "90943e30-9a47-11e8-b64d-95841ca0b247",
              "name": "layer_2_source_index_pattern",
              "type": "index-pattern"
            },
            {
              "id": "90943e30-9a47-11e8-b64d-95841ca0b247",
              "name": "layer_3_source_index_pattern",
              "type": "index-pattern"
            }
          ],
          "type": "map",
          "typeMigrationVersion": "8.4.0",
          "updated_at": "2023-08-23T20:03:32.204Z",
          "version": "WzEzLDFd"
        }
      },
      "find_rules_response": {
        "summary": "Retrieve information about a rule.",
        "value": {
          "data": [
            {
              "actions": [
                {
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                    "throttle": null
                  },
                  "group": "threshold met",
                  "id": "9dca3e00-74f5-11ed-9801-35303b735aef",
                  "params": {
                    "connector_type_id": ".server-log",
                    "level": "info",
                    "message": "Rule {{rule.name}} is active for group {{context.group}}:\n\n- Value: {{context.value}}\n- Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}\n- Timestamp: {{context.date}}"
                  },
                  "uuid": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61"
                }
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "alerts",
              "created_at": "2022-12-05T23:40:33.132Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_duration": 48,
                "last_execution_date": "2022-12-06T01:44:23.983Z",
                "status": "ok"
              },
              "id": "3583a470-74f6-11ed-9801-35303b735aef",
              "last_run": {
                "alerts_count": {
                  "active": 0,
                  "ignored": 0,
                  "new": 0,
                  "recovered": 0
                },
                "outcome": "succeeded",
                "outcome_msg": null,
                "warning": null
              },
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "my alert",
              "next_run": "2022-12-06T01:45:23.912Z",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  "test-index"
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000
                ],
                "thresholdComparator": "\u003e",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m"
              },
              "revision": 1,
              "rule_type_id": ".index-threshold",
              "schedule": {
                "interval": "1m"
              },
              "scheduled_task_id": "3583a470-74f6-11ed-9801-35303b735aef",
              "tags": [
                "cpu"
              ],
              "throttle": null,
              "updated_at": "2022-12-05T23:40:33.132Z",
              "updated_by": "elastic"
            }
          ],
          "page": 1,
          "per_page": 10,
          "total": 1
        }
      },
      "find_rules_response_conditional_action": {
        "summary": "Retrieve information about a rule that has conditional actions.",
        "value": {
          "data": [
            {
              "actions": [
                {
                  "alerts_filter": {
                    "query": {
                      "filters": [
                        {
                          "$state": {
                            "store": "appState"
                          },
                          "meta": {
                            "alias": null,
                            "disabled": false,
                            "field": "client.geo.region_iso_code",
                            "index": "c4bdca79-e69e-4d80-82a1-e5192c621bea",
                            "key": "client.geo.region_iso_code",
                            "negate": false,
                            "params": {
                              "query": "CA-QC",
                              "type": "phrase"
                            }
                          },
                          "query": {
                            "match_phrase": {
                              "client.geo.region_iso_code": "CA-QC"
                            }
                          }
                        }
                      ],
                      "kql": ""
                    },
                    "timeframe": {
                      "days": [
                        7
                      ],
                      "hours": {
                        "end": "17:00",
                        "start": "08:00"
                      },
                      "timezone": "UTC"
                    }
                  },
                  "connector_type_id": ".index",
                  "frequency": {
                    "notify_when": "onActiveAlert",
                    "summary": true,
                    "throttle": null
                  },
                  "group": "default",
                  "id": "49eae970-f401-11ed-9f8e-399c75a2deeb",
                  "params": {
                    "documents": [
                      {
                        "alert_id": {
                          "[object Object]": null
                        },
                        "context_message": {
                          "[object Object]": null
                        },
                        "rule_id": {
                          "[object Object]": null
                        },
                        "rule_name": {
                          "[object Object]": null
                        }
                      }
                    ]
                  },
                  "uuid": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61"
                }
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "siem",
              "created_at": "2023-05-16T15:50:28.358Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_duration": 166,
                "last_execution_date": "2023-05-16T20:26:49.590Z",
                "status": "ok"
              },
              "id": "6107a8f0-f401-11ed-9f8e-399c75a2deeb",
              "last_run": {
                "alerts_count": {
                  "active": 0,
                  "ignored": 0,
                  "new": 0,
                  "recovered": 0
                },
                "outcome": "succeeded",
                "outcome_msg": [
                  "Rule execution completed successfully"
                ],
                "outcome_order": 0,
                "warning": null
              },
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "security_rule",
              "next_run": "2023-05-16T20:27:49.507Z",
              "notify_when": null,
              "params": {
                "author": [],
                "description": "A security threshold rule.",
                "exceptionsList": [],
                "falsePositives": [],
                "filters": [],
                "from": "now-3660s",
                "immutable": false,
                "index": [
                  "kibana_sample_data_logs"
                ],
                "language": "kuery",
                "license": "",
                "maxSignals": 100,
                "meta": {
                  "from": "1h",
                  "kibana_siem_app_url": "https://localhost:5601/app/security"
                },
                "outputIndex": "",
                "query": "*",
                "references": [],
                "riskScore": 21,
                "riskScoreMapping": [],
                "ruleId": "an_internal_rule_id",
                "severity": "low",
                "severityMapping": [],
                "threat": [],
                "threshold": {
                  "cardinality": [],
                  "field": [
                    "bytes"
                  ],
                  "value": 1
                },
                "to": "now",
                "type": "threshold",
                "version": 1
              },
              "revision": 1,
              "rule_type_id": "siem.thresholdRule",
              "running": false,
              "schedule": {
                "interval": "1m"
              },
              "scheduled_task_id": "6107a8f0-f401-11ed-9f8e-399c75a2deeb",
              "tags": [],
              "throttle": null,
              "updated_at": "2023-05-16T20:25:42.559Z",
              "updated_by": "elastic"
            }
          ],
          "page": 1,
          "per_page": 10,
          "total": 1
        }
      },
      "get_data_view_response": {
        "summary": "The get data view API returns a JSON object that contains information about the data view.",
        "value": {
          "data_view": {
            "allowNoIndex": false,
            "fieldAttrs": {
              "products.manufacturer": {
                "count": 1
              },
              "products.price": {
                "count": 1
              },
              "products.product_name": {
                "count": 1
              },
              "total_quantity": {
                "count": 1
              }
            },
            "fieldFormats": {
              "products.base_price": {
                "id": "number",
                "params": {
                  "pattern": "$0,0.00"
                }
              },
              "products.base_unit_price": {
                "id": "number",
                "params": {
                  "pattern": "$0,0.00"
                }
              },
              "products.min_price": {
                "id": "number",
                "params": {
                  "pattern": "$0,0.00"
                }
              },
              "products.price": {
                "id": "number",
                "params": {
                  "pattern": "$0,0.00"
                }
              },
              "products.taxful_price": {
                "id": "number",
                "params": {
                  "pattern": "$0,0.00"
                }
              },
              "products.taxless_price": {
                "id": "number",
                "params": {
                  "pattern": "$0,0.00"
                }
              },
              "taxful_total_price": {
                "id": "number",
                "params": {
                  "pattern": "$0,0.[00]"
                }
              },
              "taxless_total_price": {
                "id": "number",
                "params": {
                  "pattern": "$0,0.00"
                }
              }
            },
            "fields": {
              "_id": {
                "aggregatable": false,
                "count": 0,
                "esTypes": [
                  "_id"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "_id",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "_index": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "_index"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "_index",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "_score": {
                "aggregatable": false,
                "count": 0,
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "_score",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": false,
                "shortDotsEnable": false,
                "type": "number"
              },
              "_source": {
                "aggregatable": false,
                "count": 0,
                "esTypes": [
                  "_source"
                ],
                "format": {
                  "id": "_source"
                },
                "isMapped": true,
                "name": "_source",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": false,
                "shortDotsEnable": false,
                "type": "_source"
              },
              "category": {
                "aggregatable": false,
                "count": 0,
                "esTypes": [
                  "text"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "category",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "category.keyword": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "category.keyword",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "subType": {
                  "multi": {
                    "parent": "category"
                  }
                },
                "type": "string"
              },
              "currency": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "currency",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "customer_birth_date": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "date"
                ],
                "format": {
                  "id": "date"
                },
                "isMapped": true,
                "name": "customer_birth_date",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "date"
              },
              "customer_first_name": {
                "aggregatable": false,
                "count": 0,
                "esTypes": [
                  "text"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "customer_first_name",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "customer_first_name.keyword": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "customer_first_name.keyword",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "subType": {
                  "multi": {
                    "parent": "customer_first_name"
                  }
                },
                "type": "string"
              },
              "customer_full_name": {
                "aggregatable": false,
                "count": 0,
                "esTypes": [
                  "text"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "customer_full_name",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "customer_full_name.keyword": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "customer_full_name.keyword",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "subType": {
                  "multi": {
                    "parent": "customer_full_name"
                  }
                },
                "type": "string"
              },
              "customer_gender": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "customer_gender",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "customer_id": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "customer_id",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "customer_last_name": {
                "aggregatable": false,
                "count": 0,
                "esTypes": [
                  "text"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "customer_last_name",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "customer_last_name.keyword": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "customer_last_name.keyword",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "subType": {
                  "multi": {
                    "parent": "customer_last_name"
                  }
                },
                "type": "string"
              },
              "customer_phone": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "customer_phone",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "day_of_week": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "day_of_week",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "day_of_week_i": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "integer"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "day_of_week_i",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "email": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "email",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "event.dataset": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "event.dataset",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "geoip.city_name": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "geoip.city_name",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "geoip.continent_name": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "geoip.continent_name",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "geoip.country_iso_code": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "geoip.country_iso_code",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "geoip.location": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "geo_point"
                ],
                "format": {
                  "id": "geo_point",
                  "params": {
                    "transform": "wkt"
                  }
                },
                "isMapped": true,
                "name": "geoip.location",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "geo_point"
              },
              "geoip.region_name": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "geoip.region_name",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "manufacturer": {
                "aggregatable": false,
                "count": 0,
                "esTypes": [
                  "text"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "manufacturer",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "manufacturer.keyword": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "manufacturer.keyword",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "subType": {
                  "multi": {
                    "parent": "manufacturer"
                  }
                },
                "type": "string"
              },
              "order_date": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "date"
                ],
                "format": {
                  "id": "date"
                },
                "isMapped": true,
                "name": "order_date",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "date"
              },
              "order_id": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "order_id",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "products._id": {
                "aggregatable": false,
                "count": 0,
                "esTypes": [
                  "text"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "products._id",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "products._id.keyword": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "products._id.keyword",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "subType": {
                  "multi": {
                    "parent": "products._id"
                  }
                },
                "type": "string"
              },
              "products.base_price": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "half_float"
                ],
                "format": {
                  "id": "number",
                  "params": {
                    "pattern": "$0,0.00"
                  }
                },
                "isMapped": true,
                "name": "products.base_price",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "products.base_unit_price": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "half_float"
                ],
                "format": {
                  "id": "number",
                  "params": {
                    "pattern": "$0,0.00"
                  }
                },
                "isMapped": true,
                "name": "products.base_unit_price",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "products.category": {
                "aggregatable": false,
                "count": 0,
                "esTypes": [
                  "text"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "products.category",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "products.category.keyword": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "products.category.keyword",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "subType": {
                  "multi": {
                    "parent": "products.category"
                  }
                },
                "type": "string"
              },
              "products.created_on": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "date"
                ],
                "format": {
                  "id": "date"
                },
                "isMapped": true,
                "name": "products.created_on",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "date"
              },
              "products.discount_amount": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "half_float"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "products.discount_amount",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "products.discount_percentage": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "half_float"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "products.discount_percentage",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "products.manufacturer": {
                "aggregatable": false,
                "count": 1,
                "esTypes": [
                  "text"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "products.manufacturer",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "products.manufacturer.keyword": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "products.manufacturer.keyword",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "subType": {
                  "multi": {
                    "parent": "products.manufacturer"
                  }
                },
                "type": "string"
              },
              "products.min_price": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "half_float"
                ],
                "format": {
                  "id": "number",
                  "params": {
                    "pattern": "$0,0.00"
                  }
                },
                "isMapped": true,
                "name": "products.min_price",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "products.price": {
                "aggregatable": true,
                "count": 1,
                "esTypes": [
                  "half_float"
                ],
                "format": {
                  "id": "number",
                  "params": {
                    "pattern": "$0,0.00"
                  }
                },
                "isMapped": true,
                "name": "products.price",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "products.product_id": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "long"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "products.product_id",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "products.product_name": {
                "aggregatable": false,
                "count": 1,
                "esTypes": [
                  "text"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "products.product_name",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "products.product_name.keyword": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "products.product_name.keyword",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "subType": {
                  "multi": {
                    "parent": "products.product_name"
                  }
                },
                "type": "string"
              },
              "products.quantity": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "integer"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "products.quantity",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "products.sku": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "products.sku",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "products.tax_amount": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "half_float"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "products.tax_amount",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "products.taxful_price": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "half_float"
                ],
                "format": {
                  "id": "number",
                  "params": {
                    "pattern": "$0,0.00"
                  }
                },
                "isMapped": true,
                "name": "products.taxful_price",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "products.taxless_price": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "half_float"
                ],
                "format": {
                  "id": "number",
                  "params": {
                    "pattern": "$0,0.00"
                  }
                },
                "isMapped": true,
                "name": "products.taxless_price",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "products.unit_discount_amount": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "half_float"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "products.unit_discount_amount",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "sku": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "sku",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "taxful_total_price": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "half_float"
                ],
                "format": {
                  "id": "number",
                  "params": {
                    "pattern": "$0,0.[00]"
                  }
                },
                "isMapped": true,
                "name": "taxful_total_price",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "taxless_total_price": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "half_float"
                ],
                "format": {
                  "id": "number",
                  "params": {
                    "pattern": "$0,0.00"
                  }
                },
                "isMapped": true,
                "name": "taxless_total_price",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "total_quantity": {
                "aggregatable": true,
                "count": 1,
                "esTypes": [
                  "integer"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "total_quantity",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "total_unique_products": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "integer"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "total_unique_products",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "type": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "type",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "user": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "user",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              }
            },
            "id": "ff959d40-b880-11e8-a6d9-e546fe2bba5f",
            "name": "Kibana Sample Data eCommerce",
            "namespaces": [
              "default"
            ],
            "runtimeFieldMap": {},
            "sourceFilters": [],
            "timeFieldName": "order_date",
            "title": "kibana_sample_data_ecommerce",
            "typeMeta": {},
            "version": "WzUsMV0="
          }
        }
      },
      "get_data_views_response": {
        "summary": "The get all data views API returns a list of data views.",
        "value": {
          "data_view": [
            {
              "id": "ff959d40-b880-11e8-a6d9-e546fe2bba5f",
              "name": "Kibana Sample Data eCommerce",
              "namespaces": [
                "default"
              ],
              "title": "kibana_sample_data_ecommerce",
              "typeMeta": {}
            },
            {
              "id": "d3d7af60-4c81-11e8-b3d7-01146121b73d",
              "name": "Kibana Sample Data Flights",
              "namespaces": [
                "default"
              ],
              "title": "kibana_sample_data_flights"
            },
            {
              "id": "90943e30-9a47-11e8-b64d-95841ca0b247",
              "name": "Kibana Sample Data Logs",
              "namespaces": [
                "default"
              ],
              "title": "kibana_sample_data_logs"
            }
          ]
        }
      },
      "get_default_data_view_response": {
        "summary": "The get default data view API returns the default data view identifier.",
        "value": {
          "data_view_id": "ff959d40-b880-11e8-a6d9-e546fe2bba5f"
        }
      },
      "get_health_response": {
        "summary": "Retrieve information about the health of the alerting framework.",
        "value": {
          "alerting_framework_health": {
            "decryption_health": {
              "status": "ok",
              "timestamp": "2023-01-13T01:28:00.280Z"
            },
            "execution_health": {
              "status": "ok",
              "timestamp": "2023-01-13T01:28:00.280Z"
            },
            "read_health": {
              "status": "ok",
              "timestamp": "2023-01-13T01:28:00.280Z"
            }
          },
          "has_permanent_encryption_key": true,
          "is_sufficiently_secure": true
        }
      },
      "get_rule_response": {
        "summary": "The get rule API returns a JSON object that contains details about the rule.",
        "value": {
          "actions": [
            {
              "connector_type_id": ".server-log",
              "frequency": {
                "notify_when": "onActionGroupChange",
                "summary": false,
                "throttle": null
              },
              "group": "threshold met",
              "id": "1007a0c0-7a6e-11ed-89d5-abec321c0def",
              "params": {
                "connector_type_id": ".server-log",
                "level": "info",
                "message": "Rule {{rule.name}} is active for group {{context.group}}:\n\n- Value: {{context.value}}\n- Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}\n- Timestamp: {{context.date}"
              },
              "uuid": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61"
            }
          ],
          "api_key_created_by_user": false,
          "api_key_owner": "elastic",
          "consumer": "alerts",
          "created_at": "2022-12-13T22:33:41.163Z",
          "created_by": "elastic",
          "enabled": true,
          "execution_status": {
            "last_duration": 83,
            "last_execution_date": "2022-12-13T22:33:44.388Z",
            "status": "ok"
          },
          "id": "31697a40-7b36-11ed-aa79-f742c05329b2",
          "last_run": {
            "alerts_count": {
              "active": 0,
              "ignored": 0,
              "new": 0,
              "recovered": 0
            },
            "outcome": "succeeded",
            "outcome_msg": null,
            "warning": null
          },
          "mute_all": false,
          "muted_alert_ids": [],
          "name": "my alert",
          "next_run": "2022-12-13T22:34:44.314Z",
          "notify_when": null,
          "params": {
            "aggField": "sheet.version",
            "aggType": "avg",
            "groupBy": "top",
            "index": [
              "test-index"
            ],
            "termField": "name.keyword",
            "termSize": 6,
            "threshold": [
              1000
            ],
            "thresholdComparator": "\u003e",
            "timeField": "@timestamp",
            "timeWindowSize": 5,
            "timeWindowUnit": "m"
          },
          "revision": 1,
          "rule_type_id": ".index-threshold",
          "schedule": {
            "interval": "1m"
          },
          "scheduled_task_id": "31697a40-7b36-11ed-aa79-f742c05329b2",
          "tags": [
            "cpu"
          ],
          "throttle": null,
          "updated_at": "2022-12-13T22:33:41.163Z",
          "updated_by": "elastic"
        }
      },
      "get_rule_types_response": {
        "summary": "Retrieve rule types associated with Kibana machine learning features",
        "value": [
          {
            "action_groups": [
              {
                "id": "anomaly_score_match",
                "name": "Anomaly score matched the condition"
              },
              {
                "id": "recovered",
                "name": "Recovered"
              }
            ],
            "action_variables": {
              "context": [
                {
                  "description": "The bucket timestamp of the anomaly",
                  "name": "timestamp"
                },
                {
                  "description": "The bucket time of the anomaly in ISO8601 format",
                  "name": "timestampIso8601"
                },
                {
                  "description": "List of job IDs that triggered the alert",
                  "name": "jobIds"
                },
                {
                  "description": "Alert info message",
                  "name": "message"
                },
                {
                  "description": "Indicate if top hits contain interim results",
                  "name": "isInterim"
                },
                {
                  "description": "Anomaly score at the time of the notification action",
                  "name": "score"
                },
                {
                  "description": "Top records",
                  "name": "topRecords"
                },
                {
                  "description": "Top influencers",
                  "name": "topInfluencers"
                },
                {
                  "description": "URL to open in the Anomaly Explorer",
                  "name": "anomalyExplorerUrl",
                  "useWithTripleBracesInTemplates": true
                }
              ],
              "params": [],
              "state": []
            },
            "alerts": {
              "context": "ml.anomaly-detection",
              "mappings": {
                "fieldMap": {
                  "kibana.alert.anomaly_score": {
                    "array": false,
                    "required": false,
                    "type": "double"
                  },
                  "kibana.alert.anomaly_timestamp": {
                    "array": false,
                    "required": false,
                    "type": "date"
                  },
                  "kibana.alert.is_interim": {
                    "array": false,
                    "required": false,
                    "type": "boolean"
                  },
                  "kibana.alert.job_id": {
                    "array": false,
                    "required": true,
                    "type": "keyword"
                  },
                  "kibana.alert.top_influencers": {
                    "array": true,
                    "dynamic": false,
                    "properties": {
                      "influencer_field_name": {
                        "type": "keyword"
                      },
                      "influencer_field_value": {
                        "type": "keyword"
                      },
                      "influencer_score": {
                        "type": "double"
                      },
                      "initial_influencer_score": {
                        "type": "double"
                      },
                      "is_interim": {
                        "type": "boolean"
                      },
                      "job_id": {
                        "type": "keyword"
                      },
                      "timestamp": {
                        "type": "date"
                      }
                    },
                    "required": false,
                    "type": "object"
                  },
                  "kibana.alert.top_records": {
                    "array": true,
                    "dynamic": false,
                    "properties": {
                      "actual": {
                        "type": "double"
                      },
                      "by_field_name": {
                        "type": "keyword"
                      },
                      "by_field_value": {
                        "type": "keyword"
                      },
                      "detector_index": {
                        "type": "integer"
                      },
                      "field_name": {
                        "type": "keyword"
                      },
                      "function": {
                        "type": "keyword"
                      },
                      "initial_record_score": {
                        "type": "double"
                      },
                      "is_interim": {
                        "type": "boolean"
                      },
                      "job_id": {
                        "type": "keyword"
                      },
                      "over_field_name": {
                        "type": "keyword"
                      },
                      "over_field_value": {
                        "type": "keyword"
                      },
                      "partition_field_name": {
                        "type": "keyword"
                      },
                      "partition_field_value": {
                        "type": "keyword"
                      },
                      "record_score": {
                        "type": "double"
                      },
                      "timestamp": {
                        "type": "date"
                      },
                      "typical": {
                        "type": "double"
                      }
                    },
                    "required": false,
                    "type": "object"
                  }
                }
              },
              "shouldWrite": true
            },
            "authorized_consumers": {
              "alerts": {
                "all": true,
                "read": true
              },
              "apm": {
                "all": true,
                "read": true
              },
              "discover": {
                "all": true,
                "read": true
              },
              "infrastructure": {
                "all": true,
                "read": true
              },
              "logs": {
                "all": true,
                "read": true
              },
              "ml": {
                "all": true,
                "read": true
              },
              "monitoring": {
                "all": true,
                "read": true
              },
              "siem": {
                "all": true,
                "read": true
              },
              "slo": {
                "all": true,
                "read": true
              },
              "stackAlerts": {
                "all": true,
                "read": true
              },
              "uptime": {
                "all": true,
                "read": true
              }
            },
            "category": "management",
            "default_action_group_id": "anomaly_score_match",
            "does_set_recovery_context": true,
            "enabled_in_license": true,
            "has_alerts_mappings": true,
            "has_fields_for_a_a_d": false,
            "id": "xpack.ml.anomaly_detection_alert",
            "is_exportable": true,
            "minimum_license_required": "platinum",
            "name": "Anomaly detection alert",
            "producer": "ml",
            "recovery_action_group": {
              "id": "recovered",
              "name": "Recovered"
            },
            "rule_task_timeout": "5m"
          },
          {
            "action_groups": [
              {
                "id": "anomaly_detection_realtime_issue",
                "name": "Issue detected"
              },
              {
                "id": "recovered",
                "name": "Recovered"
              }
            ],
            "action_variables": {
              "context": [
                {
                  "description": "Results of the rule execution",
                  "name": "results"
                },
                {
                  "description": "Alert info message",
                  "name": "message"
                }
              ],
              "params": [],
              "state": []
            },
            "authorized_consumers": {
              "alerts": {
                "all": true,
                "read": true
              },
              "apm": {
                "all": true,
                "read": true
              },
              "discover": {
                "all": true,
                "read": true
              },
              "infrastructure": {
                "all": true,
                "read": true
              },
              "logs": {
                "all": true,
                "read": true
              },
              "ml": {
                "all": true,
                "read": true
              },
              "monitoring": {
                "all": true,
                "read": true
              },
              "siem": {
                "all": true,
                "read": true
              },
              "slo": {
                "all": true,
                "read": true
              },
              "stackAlerts": {
                "all": true,
                "read": true
              },
              "uptime": {
                "all": true,
                "read": true
              }
            },
            "category": "management",
            "default_action_group_id": "anomaly_detection_realtime_issue",
            "does_set_recovery_context": true,
            "enabled_in_license": true,
            "has_alerts_mappings": false,
            "has_fields_for_a_a_d": false,
            "id": "xpack.ml.anomaly_detection_jobs_health",
            "is_exportable": true,
            "minimum_license_required": "platinum",
            "name": "Anomaly detection jobs health",
            "producer": "ml",
            "recovery_action_group": {
              "id": "recovered",
              "name": "Recovered"
            },
            "rule_task_timeout": "5m"
          }
        ]
      },
      "get_runtime_field_response": {
        "summary": "The get runtime field API returns a JSON object that contains information about the runtime field (`hour_of_day`) and the data view (`d3d7af60-4c81-11e8-b3d7-01146121b73d`).",
        "value": {
          "data_view": {
            "allowNoIndex": false,
            "fieldAttrs": {},
            "fieldFormats": {
              "AvgTicketPrice": {
                "id": "number",
                "params": {
                  "pattern": "$0,0.[00]"
                }
              },
              "hour_of_day": {
                "id": "number",
                "params": {
                  "pattern": "00"
                }
              }
            },
            "fields": {
              "AvgTicketPrice": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "float"
                ],
                "format": {
                  "id": "number",
                  "params": {
                    "pattern": "$0,0.[00]"
                  }
                },
                "isMapped": true,
                "name": "AvgTicketPrice",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "Cancelled": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "boolean"
                ],
                "format": {
                  "id": "boolean"
                },
                "isMapped": true,
                "name": "Cancelled",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "boolean"
              },
              "Carrier": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "Carrier",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "Dest": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "Dest",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "DestAirportID": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "DestAirportID",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "DestCityName": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "DestCityName",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "DestCountry": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "DestCountry",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "DestLocation": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "geo_point"
                ],
                "format": {
                  "id": "geo_point",
                  "params": {
                    "transform": "wkt"
                  }
                },
                "isMapped": true,
                "name": "DestLocation",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "geo_point"
              },
              "DestRegion": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "DestRegion",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "DestWeather": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "DestWeather",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "DistanceKilometers": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "float"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "DistanceKilometers",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "DistanceMiles": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "float"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "DistanceMiles",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "FlightDelay": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "boolean"
                ],
                "format": {
                  "id": "boolean"
                },
                "isMapped": true,
                "name": "FlightDelay",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "boolean"
              },
              "FlightDelayMin": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "integer"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "FlightDelayMin",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "FlightDelayType": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "FlightDelayType",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "FlightNum": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "FlightNum",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "FlightTimeHour": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "FlightTimeHour",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "FlightTimeMin": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "float"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "FlightTimeMin",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "Origin": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "Origin",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "OriginAirportID": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "OriginAirportID",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "OriginCityName": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "OriginCityName",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "OriginCountry": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "OriginCountry",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "OriginLocation": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "geo_point"
                ],
                "format": {
                  "id": "geo_point",
                  "params": {
                    "transform": "wkt"
                  }
                },
                "isMapped": true,
                "name": "OriginLocation",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "geo_point"
              },
              "OriginRegion": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "OriginRegion",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "OriginWeather": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "keyword"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "OriginWeather",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "_id": {
                "aggregatable": false,
                "count": 0,
                "esTypes": [
                  "_id"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "_id",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "_index": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "_index"
                ],
                "format": {
                  "id": "string"
                },
                "isMapped": true,
                "name": "_index",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "string"
              },
              "_score": {
                "aggregatable": false,
                "count": 0,
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "_score",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": false,
                "shortDotsEnable": false,
                "type": "number"
              },
              "_source": {
                "aggregatable": false,
                "count": 0,
                "esTypes": [
                  "_source"
                ],
                "format": {
                  "id": "_source"
                },
                "isMapped": true,
                "name": "_source",
                "readFromDocValues": false,
                "scripted": false,
                "searchable": false,
                "shortDotsEnable": false,
                "type": "_source"
              },
              "dayOfWeek": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "integer"
                ],
                "format": {
                  "id": "number"
                },
                "isMapped": true,
                "name": "dayOfWeek",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "hour_of_day": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "long"
                ],
                "format": {
                  "id": "number",
                  "params": {
                    "pattern": "00"
                  }
                },
                "name": "hour_of_day",
                "readFromDocValues": false,
                "runtimeField": {
                  "script": {
                    "source": "emit(doc['timestamp'].value.getHour());"
                  },
                  "type": "long"
                },
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "number"
              },
              "timestamp": {
                "aggregatable": true,
                "count": 0,
                "esTypes": [
                  "date"
                ],
                "format": {
                  "id": "date"
                },
                "isMapped": true,
                "name": "timestamp",
                "readFromDocValues": true,
                "scripted": false,
                "searchable": true,
                "shortDotsEnable": false,
                "type": "date"
              }
            },
            "id": "d3d7af60-4c81-11e8-b3d7-01146121b73d",
            "name": "Kibana Sample Data Flights",
            "runtimeFieldMap": {
              "hour_of_day": {
                "script": {
                  "source": "emit(doc['timestamp'].value.getHour());"
                },
                "type": "long"
              }
            },
            "sourceFilters": [],
            "timeFieldName": "timestamp",
            "title": "kibana_sample_data_flights",
            "version": "WzM2LDJd"
          },
          "fields": [
            {
              "aggregatable": true,
              "count": 0,
              "esTypes": [
                "long"
              ],
              "name": "hour_of_day",
              "readFromDocValues": false,
              "runtimeField": {
                "script": {
                  "source": "emit(doc['timestamp'].value.getHour());"
                },
                "type": "long"
              },
              "scripted": false,
              "searchable": true,
              "shortDotsEnable": false,
              "type": "number"
            }
          ]
        }
      },
      "import_objects_request": {
        "value": {
          "file": "file.ndjson"
        }
      },
      "import_objects_response": {
        "summary": "The import objects API response indicates a successful import and the objects are created. Since these objects are created as new copies, each entry in the successResults array includes a destinationId attribute.",
        "value": {
          "success": true,
          "successCount": 1,
          "successResults": [
            {
              "destinationId": "82d2760c-468f-49cf-83aa-b9a35b6a8943",
              "id": "90943e30-9a47-11e8-b64d-95841ca0b247",
              "managed": false,
              "meta": {
                "icon": "indexPatternApp",
                "title": "Kibana Sample Data Logs"
              },
              "type": "index-pattern"
            }
          ]
        }
      },
      "key_rotation_response": {
        "summary": "Encryption key rotation using default parameters.",
        "value": {
          "failed": 0,
          "successful": 300,
          "total": 1000
        }
      },
      "preview_swap_data_view_request": {
        "summary": "Preview swapping references from data view ID \"abcd-efg\" to \"xyz-123\".",
        "value": {
          "fromId": "abcd-efg",
          "toId": "xyz-123"
        }
      },
      "resolve_missing_reference_request": {
        "value": {
          "file": "file.ndjson",
          "retries": [
            {
              "id": "my-pattern",
              "overwrite": true,
              "type": "index-pattern"
            },
            {
              "destinationId": "another-vis",
              "id": "my-vis",
              "overwrite": true,
              "type": "visualization"
            },
            {
              "destinationId": "yet-another-canvas",
              "id": "my-canvas",
              "overwrite": true,
              "type": "canvas"
            },
            {
              "id": "my-dashboard",
              "type": "dashboard"
            }
          ]
        }
      },
      "resolve_missing_reference_response": {
        "summary": "Resolve missing reference errors.",
        "value": {
          "success": true,
          "successCount": 3,
          "successResults": [
            {
              "id": "my-vis",
              "meta": {
                "icon": "visualizeApp",
                "title": "Look at my visualization"
              },
              "type": "visualization"
            },
            {
              "id": "my-search",
              "meta": {
                "icon": "searchApp",
                "title": "Look at my search"
              },
              "type": "search"
            },
            {
              "id": "my-dashboard",
              "meta": {
                "icon": "dashboardApp",
                "title": "Look at my dashboard"
              },
              "type": "dashboard"
            }
          ]
        }
      },
      "set_default_data_view_request": {
        "summary": "Set the default data view identifier.",
        "value": {
          "data_view_id": "ff959d40-b880-11e8-a6d9-e546fe2bba5f",
          "force": true
        }
      },
      "swap_data_view_request": {
        "summary": "Swap references from data view ID \"abcd-efg\" to \"xyz-123\" and remove the data view that is no longer referenced.",
        "value": {
          "delete": true,
          "fromId": "abcd-efg",
          "toId": "xyz-123"
        }
      },
      "update_data_view_request": {
        "summary": "Update some properties for a data view.",
        "value": {
          "data_view": {
            "allowNoIndex": false,
            "name": "Kibana Sample Data eCommerce",
            "timeFieldName": "order_date",
            "title": "kibana_sample_data_ecommerce"
          },
          "refresh_fields": true
        }
      },
      "update_field_metadata_request": {
        "summary": "Update metadata for multiple fields.",
        "value": {
          "fields": {
            "field1": {
              "count": 123,
              "customLabel": "Field 1 label"
            },
            "field2": {
              "customDescription": "Field 2 description",
              "customLabel": "Field 2 label"
            }
          }
        }
      },
      "update_rule_request": {
        "summary": "Update an index threshold rule.",
        "value": {
          "actions": [
            {
              "frequency": {
                "notify_when": "onActionGroupChange",
                "summary": false
              },
              "group": "threshold met",
              "id": "96b668d0-a1b6-11ed-afdf-d39a49596974",
              "params": {
                "level": "info",
                "message": "Rule {{rule.name}} is active for group {{context.group}}:\n\n- Value: {{context.value}}\n- Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}\n- Timestamp: {{context.date}}"
              }
            }
          ],
          "name": "new name",
          "params": {
            "aggField": "sheet.version",
            "aggType": "avg",
            "groupBy": "top",
            "index": [
              ".updated-index"
            ],
            "termField": "name.keyword",
            "termSize": 6,
            "threshold": [
              1000
            ],
            "thresholdComparator": "\u003e",
            "timeField": "@timestamp",
            "timeWindowSize": 5,
            "timeWindowUnit": "m"
          },
          "schedule": {
            "interval": "1m"
          },
          "tags": []
        }
      },
      "update_rule_response": {
        "summary": "The update rule API returns a JSON object that contains details about the rule.",
        "value": {
          "actions": [
            {
              "connector_type_id": ".server-log",
              "frequency": {
                "notify_when": "onActionGroupChange",
                "summary": false,
                "throttle": null
              },
              "group": "threshold met",
              "id": "96b668d0-a1b6-11ed-afdf-d39a49596974",
              "params": {
                "level": "info",
                "message": "Rule {{rule.name}} is active for group {{context.group}}:\n\n- Value: {{context.value}}\n- Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}\n- Timestamp: {{context.date}"
              },
              "uuid": "07aef2a0-9eed-4ef9-94ec-39ba58eb609d"
            }
          ],
          "api_key_created_by_user": false,
          "api_key_owner": "elastic",
          "consumer": "alerts",
          "created_at": "2024-03-26T23:13:20.985Z",
          "created_by": "elastic",
          "enabled": true,
          "execution_status": {
            "last_duration": 52,
            "last_execution_date": "2024-03-26T23:22:51.390Z",
            "status": "ok"
          },
          "id": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
          "last_run": {
            "alerts_count": {
              "active": 0,
              "ignored": 0,
              "new": 0,
              "recovered": 0
            },
            "outcome": "succeeded",
            "outcome_msg": null,
            "warning": null
          },
          "mute_all": false,
          "muted_alert_ids": [],
          "name": "new name",
          "next_run": "2024-03-26T23:23:51.316Z",
          "params": {
            "aggField": "sheet.version",
            "aggType": "avg",
            "groupBy": "top",
            "index": [
              ".updated-index"
            ],
            "termField": "name.keyword",
            "termSize": 6,
            "threshold": [
              1000
            ],
            "thresholdComparator": "\u003e",
            "timeField": "@timestamp",
            "timeWindowSize": 5,
            "timeWindowUnit": "m"
          },
          "revision": 1,
          "rule_type_id": ".index-threshold",
          "running": false,
          "schedule": {
            "interval": "1m"
          },
          "scheduled_task_id": "4c5eda00-e74f-11ec-b72f-5b18752ff9ea",
          "tags": [],
          "throttle": null,
          "updated_at": "2024-03-26T23:22:59.949Z",
          "updated_by": "elastic"
        }
      },
      "update_runtime_field_request": {
        "summary": "Update an existing runtime field on a data view.",
        "value": {
          "runtimeField": {
            "script": {
              "source": "emit(doc[\"bar\"].value)"
            }
          }
        }
      }
    },
    "parameters": {
      "alert_id": {
        "description": "An identifier for the alert. The identifier is generated by the rule and might be any arbitrary string.",
        "in": "path",
        "name": "alertId",
        "required": true,
        "schema": {
          "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
          "type": "string"
        }
      },
      "field_name": {
        "description": "The name of the runtime field.",
        "in": "path",
        "name": "fieldName",
        "required": true,
        "schema": {
          "example": "hour_of_day",
          "type": "string"
        }
      },
      "format": {
        "description": "Simplified or legacy format for package inputs",
        "in": "query",
        "name": "format",
        "required": false,
        "schema": {
          "enum": [
            "simplified",
            "legacy"
          ],
          "type": "string"
        }
      },
      "kbn_xsrf": {
        "description": "Cross-site request forgery protection",
        "in": "header",
        "name": "kbn-xsrf",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "kuery": {
        "in": "query",
        "name": "kuery",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "page_index": {
        "in": "query",
        "name": "page",
        "required": false,
        "schema": {
          "default": 1,
          "type": "integer"
        }
      },
      "page_size": {
        "description": "The number of items to return",
        "in": "query",
        "name": "perPage",
        "required": false,
        "schema": {
          "default": 20,
          "type": "integer"
        }
      },
      "rule_id": {
        "description": "An identifier for the rule.",
        "in": "path",
        "name": "ruleId",
        "required": true,
        "schema": {
          "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
          "type": "string"
        }
      },
      "saved_object_id": {
        "description": "An identifier for the saved object.",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "saved_object_type": {
        "description": "Valid options include `visualization`, `dashboard`, `search`, `index-pattern`, `config`.",
        "in": "path",
        "name": "type",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "show_inactive": {
        "in": "query",
        "name": "showInactive",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "show_upgradeable": {
        "in": "query",
        "name": "showUpgradeable",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "slo_id": {
        "description": "An identifier for the slo.",
        "in": "path",
        "name": "sloId",
        "required": true,
        "schema": {
          "example": "9c235211-6834-11ea-a78c-6feb38a34414",
          "type": "string"
        }
      },
      "sort_field": {
        "in": "query",
        "name": "sortField",
        "required": false,
        "schema": {
          "deprecated": true,
          "type": "string"
        }
      },
      "sort_order": {
        "in": "query",
        "name": "sortOrder",
        "required": false,
        "schema": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        }
      },
      "space_id": {
        "description": "An identifier for the space. If `/s/` and the identifier are omitted from the path, the default space is used.",
        "in": "path",
        "name": "spaceId",
        "required": true,
        "schema": {
          "example": "default",
          "type": "string"
        }
      },
      "view_id": {
        "description": "An identifier for the data view.",
        "in": "path",
        "name": "viewId",
        "required": true,
        "schema": {
          "example": "ff959d40-b880-11e8-a6d9-e546fe2bba5f",
          "type": "string"
        }
      },
      "with_metrics": {
        "description": "Return agent metrics, false by default",
        "in": "query",
        "name": "withMetrics",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      }
    },
    "responses": {
      "error": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "statusCode": {
                  "type": "number"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "Generic Error"
      }
    },
    "schemas": {
      "400_response": {
        "properties": {
          "error": {
            "example": "Bad Request",
            "type": "string"
          },
          "message": {
            "example": "Invalid value 'foo' supplied to: [...]",
            "type": "string"
          },
          "statusCode": {
            "example": 400,
            "type": "number"
          }
        },
        "required": [
          "statusCode",
          "error",
          "message"
        ],
        "title": "Bad request",
        "type": "object"
      },
      "401_response": {
        "properties": {
          "error": {
            "example": "Unauthorized",
            "type": "string"
          },
          "message": {
            "example": "[security_exception\n\tRoot causes:\n\t\tsecurity_exception: unable to authenticate user [elastics] for REST request [/_security/_authenticate]]: unable to authenticate user [elastics] for REST request [/_security/_authenticate]",
            "type": "string"
          },
          "statusCode": {
            "example": 401,
            "type": "number"
          }
        },
        "required": [
          "statusCode",
          "error",
          "message"
        ],
        "title": "Unauthorized",
        "type": "object"
      },
      "403_response": {
        "properties": {
          "error": {
            "example": "Unauthorized",
            "type": "string"
          },
          "message": {
            "example": "[security_exception\n\tRoot causes:\n\t\tsecurity_exception: unable to authenticate user [elastics] for REST request [/_security/_authenticate]]: unable to authenticate user [elastics] for REST request [/_security/_authenticate]",
            "type": "string"
          },
          "statusCode": {
            "example": 403,
            "type": "number"
          }
        },
        "required": [
          "statusCode",
          "error",
          "message"
        ],
        "title": "Unauthorized",
        "type": "object"
      },
      "404_response": {
        "properties": {
          "error": {
            "example": "Not Found",
            "type": "string"
          },
          "message": {
            "example": "SLO [3749f390-03a3-11ee-8139-c7ff60a1692d] not found",
            "type": "string"
          },
          "statusCode": {
            "example": 404,
            "type": "number"
          }
        },
        "required": [
          "statusCode",
          "error",
          "message"
        ],
        "title": "Not found",
        "type": "object"
      },
      "409_response": {
        "properties": {
          "error": {
            "example": "Conflict",
            "type": "string"
          },
          "message": {
            "example": "SLO [d077e940-1515-11ee-9c50-9d096392f520] already exists",
            "type": "string"
          },
          "statusCode": {
            "example": 409,
            "type": "number"
          }
        },
        "required": [
          "statusCode",
          "error",
          "message"
        ],
        "title": "Conflict",
        "type": "object"
      },
      "actions": {
        "default": [],
        "items": {
          "description": "An action that runs under defined conditions.\n",
          "properties": {
            "alerts_filter": {
              "description": "Conditions that affect whether the action runs. If you specify multiple conditions, all conditions must be met for the action to run. For example, if an alert occurs within the specified time frame and matches the query, the action runs.\n",
              "properties": {
                "query": {
                  "description": "Defines a query filter that determines whether the action runs.",
                  "properties": {
                    "filters": {
                      "items": {
                        "$ref": "#/components/schemas/filter"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "kql": {
                      "description": "A filter written in Kibana Query Language (KQL).",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "timeframe": {
                  "description": "Defines a period that limits whether the action runs.",
                  "properties": {
                    "days": {
                      "description": "Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.",
                      "example": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ],
                      "items": {
                        "type": "integer"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "hours": {
                      "description": "Defines the range of time in a day that the action can run. If the `start` value is `00:00` and the `end` value is `24:00`, actions be generated all day.\n",
                      "properties": {
                        "end": {
                          "description": "The end of the time frame in 24-hour notation (`hh:mm`).",
                          "example": "17:00",
                          "type": "string"
                        },
                        "start": {
                          "description": "The start of the time frame in 24-hour notation (`hh:mm`).",
                          "example": "08:00",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "timezone": {
                      "description": "The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.\n",
                      "example": "Europe/Madrid",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "connector_type_id": {
              "description": "The type of connector. This property appears in responses but cannot be set in requests.",
              "example": ".server-log",
              "readOnly": true,
              "type": "string"
            },
            "frequency": {
              "description": "The properties that affect how often actions are generated. If the rule type supports setting `summary` to `true`, the action can be a summary of alerts at the specified notification interval. Otherwise, an action runs for each alert at the specified notification interval. NOTE: You cannot specify these parameters when `notify_when` or `throttle` are defined at the rule level.\n",
              "properties": {
                "notify_when": {
                  "$ref": "#/components/schemas/notify_when_action"
                },
                "summary": {
                  "description": "Indicates whether the action is a summary.",
                  "type": "boolean"
                },
                "throttle": {
                  "$ref": "#/components/schemas/throttle_action"
                }
              },
              "required": [
                "notify_when",
                "summary"
              ],
              "type": "object"
            },
            "group": {
              "description": "The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.\n",
              "example": "default",
              "type": "string"
            },
            "id": {
              "description": "The identifier for the connector saved object.",
              "example": "9dca3e00-74f5-11ed-9801-35303b735aef",
              "type": "string"
            },
            "params": {
              "additionalProperties": true,
              "description": "The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.",
              "type": "object",
              "x-go-type-skip-optional-pointer": true
            },
            "uuid": {
              "description": "A universally unique identifier (UUID) for the action.",
              "example": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61",
              "type": "string"
            }
          },
          "required": [
            "group",
            "id",
            "params"
          ],
          "type": "object"
        },
        "nullable": true,
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "agent": {
        "properties": {
          "access_api_key": {
            "type": "string"
          },
          "access_api_key_id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "components": {
            "items": {
              "$ref": "#/components/schemas/agent_component"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "default_api_key": {
            "type": "string"
          },
          "default_api_key_id": {
            "type": "string"
          },
          "enrolled_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "last_checkin": {
            "type": "string"
          },
          "local_metadata": {
            "$ref": "#/components/schemas/agent_metadata"
          },
          "metrics": {
            "properties": {
              "cpu_avg": {
                "description": "Average agent CPU usage during the last 5 minutes, number between 0-1",
                "type": "number"
              },
              "memory_size_byte_avg": {
                "description": "Average agent memory consumption during the last 5 minutes",
                "type": "number"
              }
            },
            "type": "object"
          },
          "policy_id": {
            "type": "string"
          },
          "policy_revision": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/agent_status"
          },
          "type": {
            "$ref": "#/components/schemas/agent_type"
          },
          "unenrolled_at": {
            "type": "string"
          },
          "unenrollment_started_at": {
            "type": "string"
          },
          "user_provided_metadata": {
            "$ref": "#/components/schemas/agent_metadata"
          }
        },
        "required": [
          "type",
          "active",
          "enrolled_at",
          "id",
          "status"
        ],
        "title": "Agent",
        "type": "object"
      },
      "agent_action": {
        "oneOf": [
          {
            "properties": {
              "ack_data": {
                "type": "string"
              },
              "data": {
                "type": "string"
              },
              "type": {
                "enum": [
                  "UNENROLL",
                  "UPGRADE",
                  "POLICY_REASSIGN"
                ],
                "type": "string"
              }
            }
          },
          {
            "properties": {
              "data": {
                "properties": {
                  "log_level": {
                    "enum": [
                      "debug",
                      "info",
                      "warning",
                      "error"
                    ],
                    "nullable": true,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": {
                "type": "string"
              }
            }
          }
        ],
        "title": "Agent action"
      },
      "agent_component": {
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/agent_component_status"
          },
          "type": {
            "type": "string"
          },
          "units": {
            "items": {
              "$ref": "#/components/schemas/agent_component_unit"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "title": "Agent component",
        "type": "object"
      },
      "agent_component_status": {
        "enum": [
          "starting",
          "configuring",
          "healthy",
          "degraded",
          "failed",
          "stopping",
          "stopped"
        ],
        "title": "Agent component status",
        "type": "string"
      },
      "agent_component_unit": {
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "status": {
            "$ref": "#/components/schemas/agent_component_status"
          },
          "type": {
            "$ref": "#/components/schemas/agent_component_unit_type"
          }
        },
        "title": "Agent component unit",
        "type": "object"
      },
      "agent_component_unit_type": {
        "enum": [
          "input",
          "output"
        ],
        "title": "Agent component unit type",
        "type": "string"
      },
      "agent_diagnostics": {
        "properties": {
          "actionId": {
            "type": "string"
          },
          "createTime": {
            "type": "string"
          },
          "filePath": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "enum": [
              "READY",
              "AWAITING_UPLOAD",
              "DELETED",
              "IN_PROGRESS"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "createTime",
          "filePath",
          "actionId",
          "status"
        ],
        "title": "Agent diagnostics",
        "type": "object"
      },
      "agent_get_by_actions": {
        "items": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-go-type-skip-optional-pointer": true
        },
        "title": "Agents get by action ids",
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "agent_metadata": {
        "title": "Agent metadata",
        "type": "object",
        "x-go-type-skip-optional-pointer": true
      },
      "agent_policy": {
        "properties": {
          "advanced_settings": {
            "description": "Advanced settings stored in the agent policy, e.g. agent_limits_go_max_procs",
            "nullable": true,
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "agent_features": {
            "items": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "enabled"
              ],
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "agents": {
            "type": "number"
          },
          "data_output_id": {
            "nullable": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "download_source_id": {
            "nullable": true,
            "type": "string"
          },
          "fleet_server_host_id": {
            "nullable": true,
            "type": "string"
          },
          "global_data_tags": {
            "items": {
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "description": "User defined data tags that are added to all of the inputs. The values can be strings or numbers.",
              "type": "object",
              "x-go-type-skip-optional-pointer": true
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "inactivity_timeout": {
            "type": "integer"
          },
          "is_protected": {
            "description": "Indicates whether the agent policy has tamper protection enabled. Default false.",
            "type": "boolean"
          },
          "keep_monitoring_alive": {
            "description": "When set to true, monitoring will be enabled but logs/metrics collection will be disabled",
            "nullable": true,
            "type": "boolean"
          },
          "monitoring_enabled": {
            "items": {
              "enum": [
                "metrics",
                "logs"
              ],
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "monitoring_output_id": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "overrides": {
            "description": "Override settings that are defined in the agent policy. Input settings cannot be overridden. The override option should be used only in unusual circumstances and not as a routine procedure.",
            "nullable": true,
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "package_policies": {
            "description": "This field is present only when retrieving a single agent policy, or when retrieving a list of agent policies with the ?full=true parameter",
            "items": {
              "$ref": "#/components/schemas/package_policy"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "revision": {
            "type": "number"
          },
          "supports_agentless": {
            "description": "Indicates whether the agent policy supports agentless integrations. Only allowed in a serverless environment.",
            "type": "boolean"
          },
          "unenroll_timeout": {
            "type": "integer"
          },
          "unprivileged_agents": {
            "type": "number"
          },
          "updated_by": {
            "type": "string"
          },
          "updated_on": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "status",
          "name",
          "namespace"
        ],
        "title": "Agent Policy",
        "type": "object"
      },
      "agent_policy_create_request": {
        "properties": {
          "agent_features": {
            "items": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "enabled"
              ],
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "data_output_id": {
            "nullable": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "download_source_id": {
            "nullable": true,
            "type": "string"
          },
          "fleet_server_host_id": {
            "nullable": true,
            "type": "string"
          },
          "force": {
            "description": "Force agent policy creation even if packages are not verified.",
            "type": "boolean"
          },
          "global_data_tags": {
            "items": {
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "description": "User defined data tags that are added to all of the inputs. The values can be strings or numbers.",
              "type": "object",
              "x-go-type-skip-optional-pointer": true
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "inactivity_timeout": {
            "type": "integer"
          },
          "is_protected": {
            "type": "boolean"
          },
          "monitoring_enabled": {
            "items": {
              "enum": [
                "metrics",
                "logs"
              ],
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "monitoring_output_id": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "unenroll_timeout": {
            "type": "integer"
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "title": "Create agent policy request",
        "type": "object"
      },
      "agent_policy_full": {
        "oneOf": [
          {
            "properties": {
              "item": {
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "item": {
                "$ref": "#/components/schemas/full_agent_policy"
              }
            },
            "type": "object"
          }
        ],
        "title": "Agent policy full response",
        "type": "object",
        "x-go-type-skip-optional-pointer": true
      },
      "agent_policy_update_request": {
        "properties": {
          "agent_features": {
            "items": {
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "enabled"
              ],
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "data_output_id": {
            "nullable": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "download_source_id": {
            "nullable": true,
            "type": "string"
          },
          "fleet_server_host_id": {
            "nullable": true,
            "type": "string"
          },
          "force": {
            "description": "Force agent policy creation even if packages are not verified.",
            "type": "boolean"
          },
          "inactivity_timeout": {
            "type": "integer"
          },
          "is_protected": {
            "type": "boolean"
          },
          "monitoring_enabled": {
            "items": {
              "enum": [
                "metrics",
                "logs"
              ],
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "monitoring_output_id": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "unenroll_timeout": {
            "type": "integer"
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "title": "Update agent policy request",
        "type": "object"
      },
      "agent_status": {
        "enum": [
          "offline",
          "error",
          "online",
          "inactive",
          "warning"
        ],
        "title": "Elastic Agent status",
        "type": "string"
      },
      "agent_type": {
        "enum": [
          "PERMANENT",
          "EPHEMERAL",
          "TEMPORARY"
        ],
        "title": "Agent type",
        "type": "string"
      },
      "aggfield": {
        "description": "The name of the numeric field that is used in the aggregation. This property is required when `aggType` is `avg`, `max`, `min` or `sum`.\n",
        "type": "string"
      },
      "aggtype": {
        "default": "count",
        "description": "The type of aggregation to perform.",
        "enum": [
          "avg",
          "count",
          "max",
          "min",
          "sum"
        ],
        "type": "string"
      },
      "alert_delay": {
        "description": "Indicates that an alert occurs only when the specified number of consecutive runs met the rule conditions.",
        "properties": {
          "active": {
            "description": "The number of consecutive runs that must meet the rule conditions.",
            "example": 3,
            "type": "number"
          }
        },
        "required": [
          "active"
        ],
        "type": "object"
      },
      "alert_response_properties": {
        "properties": {
          "actions": {
            "items": {
              "type": "object",
              "x-go-type-skip-optional-pointer": true
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "alertTypeId": {
            "example": ".index-threshold",
            "type": "string"
          },
          "apiKeyOwner": {
            "example": "elastic",
            "nullable": true,
            "type": "string"
          },
          "createdAt": {
            "description": "The date and time that the alert was created.",
            "example": "2022-12-05T23:36:58.284Z",
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "description": "The identifier for the user that created the alert.",
            "example": "elastic",
            "type": "string"
          },
          "enabled": {
            "description": "Indicates whether the alert is currently enabled.",
            "example": true,
            "type": "boolean"
          },
          "executionStatus": {
            "properties": {
              "lastExecutionDate": {
                "example": "2022-12-06T00:13:43.890Z",
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "example": "ok",
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "The identifier for the alert.",
            "example": "b530fed0-74f5-11ed-9801-35303b735aef",
            "type": "string"
          },
          "muteAll": {
            "example": false,
            "type": "boolean"
          },
          "mutedInstanceIds": {
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "description": "The name of the alert.",
            "example": "my alert",
            "type": "string"
          },
          "notifyWhen": {
            "example": "onActionGroupChange",
            "type": "string"
          },
          "params": {
            "additionalProperties": true,
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "schedule": {
            "properties": {
              "interval": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "scheduledTaskId": {
            "example": "b530fed0-74f5-11ed-9801-35303b735aef",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "throttle": {
            "nullable": true,
            "type": "string"
          },
          "updatedAt": {
            "example": "2022-12-05T23:36:58.284Z",
            "type": "string"
          },
          "updatedBy": {
            "description": "The identifier for the user that updated this alert most recently.",
            "example": "elastic",
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Legacy alert response properties",
        "type": "object"
      },
      "allownoindex": {
        "description": "Allows the data view saved object to exist before the data is available.",
        "type": "boolean"
      },
      "attributes": {
        "description": "The data that you want to create. WARNING: When you create saved objects, attributes are not validated, which allows you to pass arbitrary and ill-formed data into the API that can break Kibana. Make sure any data that you send to the API is properly formed.\n",
        "type": "object",
        "x-go-type-skip-optional-pointer": true
      },
      "budgeting_method": {
        "description": "The budgeting method to use when computing the rollup data.",
        "enum": [
          "occurrences",
          "timeslices"
        ],
        "example": "occurrences",
        "title": "Budgeting method",
        "type": "string"
      },
      "bulk_install_packages_response": {
        "properties": {
          "items": {
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "response": {
            "deprecated": true,
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "items"
        ],
        "title": "Bulk install packages response",
        "type": "object"
      },
      "bulk_upgrade_agents": {
        "properties": {
          "agents": {
            "oneOf": [
              {
                "description": "KQL query string, leave empty to action all agents",
                "type": "string"
              },
              {
                "description": "list of agent IDs",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              }
            ]
          },
          "force": {
            "description": "Force upgrade, skipping validation (should be used with caution)",
            "type": "boolean"
          },
          "rollout_duration_seconds": {
            "description": "rolling upgrade window duration in seconds",
            "type": "number"
          },
          "skipRateLimitCheck": {
            "description": "Skip rate limit check for upgrade",
            "type": "boolean"
          },
          "source_uri": {
            "description": "alternative upgrade binary download url",
            "type": "string"
          },
          "start_time": {
            "description": "start time of upgrade in ISO 8601 format",
            "type": "string"
          },
          "version": {
            "description": "version to upgrade to",
            "type": "string"
          }
        },
        "required": [
          "agents",
          "version"
        ],
        "title": "Bulk upgrade agents",
        "type": "object"
      },
      "consumer": {
        "description": "The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.\n",
        "type": "string"
      },
      "core_status_redactedResponse": {
        "additionalProperties": false,
        "description": "A minimal representation of Kibana's operational status.",
        "properties": {
          "status": {
            "additionalProperties": false,
            "properties": {
              "overall": {
                "additionalProperties": false,
                "properties": {
                  "level": {
                    "anyOf": [
                      {
                        "enum": [
                          "available"
                        ],
                        "type": "string"
                      },
                      {
                        "enum": [
                          "degraded"
                        ],
                        "type": "string"
                      },
                      {
                        "enum": [
                          "unavailable"
                        ],
                        "type": "string"
                      },
                      {
                        "enum": [
                          "critical"
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Service status levels as human and machine readable values."
                  }
                },
                "required": [
                  "level"
                ],
                "type": "object"
              }
            },
            "required": [
              "overall"
            ],
            "type": "object"
          }
        },
        "required": [
          "status"
        ],
        "type": "object"
      },
      "core_status_response": {
        "additionalProperties": false,
        "description": "Kibana's operational status as well as a detailed breakdown of plugin statuses indication of various loads (like event loop utilization and network traffic) at time of request.",
        "properties": {
          "metrics": {
            "additionalProperties": false,
            "description": "Metric groups collected by Kibana.",
            "properties": {
              "collection_interval_in_millis": {
                "description": "The interval at which metrics should be collected.",
                "type": "number"
              },
              "elasticsearch_client": {
                "additionalProperties": false,
                "description": "Current network metrics of Kibana's Elasticsearch client.",
                "properties": {
                  "totalActiveSockets": {
                    "description": "Count of network sockets currently in use.",
                    "type": "number"
                  },
                  "totalIdleSockets": {
                    "description": "Count of network sockets currently idle.",
                    "type": "number"
                  },
                  "totalQueuedRequests": {
                    "description": "Count of requests not yet assigned to sockets.",
                    "type": "number"
                  }
                },
                "required": [
                  "totalActiveSockets",
                  "totalIdleSockets",
                  "totalQueuedRequests"
                ],
                "type": "object"
              },
              "last_updated": {
                "description": "The time metrics were collected.",
                "type": "string"
              }
            },
            "required": [
              "elasticsearch_client",
              "last_updated",
              "collection_interval_in_millis"
            ],
            "type": "object"
          },
          "name": {
            "description": "Kibana instance name.",
            "type": "string"
          },
          "status": {
            "additionalProperties": false,
            "properties": {
              "core": {
                "additionalProperties": false,
                "description": "Statuses of core Kibana services.",
                "properties": {
                  "elasticsearch": {
                    "additionalProperties": false,
                    "properties": {
                      "detail": {
                        "description": "Human readable detail of the service status.",
                        "type": "string"
                      },
                      "documentationUrl": {
                        "description": "A URL to further documentation regarding this service.",
                        "type": "string"
                      },
                      "level": {
                        "anyOf": [
                          {
                            "enum": [
                              "available"
                            ],
                            "type": "string"
                          },
                          {
                            "enum": [
                              "degraded"
                            ],
                            "type": "string"
                          },
                          {
                            "enum": [
                              "unavailable"
                            ],
                            "type": "string"
                          },
                          {
                            "enum": [
                              "critical"
                            ],
                            "type": "string"
                          }
                        ],
                        "description": "Service status levels as human and machine readable values."
                      },
                      "meta": {
                        "additionalProperties": {},
                        "description": "An unstructured set of extra metadata about this service.",
                        "type": "object"
                      },
                      "summary": {
                        "description": "A human readable summary of the service status.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "level",
                      "summary",
                      "meta"
                    ],
                    "type": "object"
                  },
                  "savedObjects": {
                    "additionalProperties": false,
                    "properties": {
                      "detail": {
                        "description": "Human readable detail of the service status.",
                        "type": "string"
                      },
                      "documentationUrl": {
                        "description": "A URL to further documentation regarding this service.",
                        "type": "string"
                      },
                      "level": {
                        "anyOf": [
                          {
                            "enum": [
                              "available"
                            ],
                            "type": "string"
                          },
                          {
                            "enum": [
                              "degraded"
                            ],
                            "type": "string"
                          },
                          {
                            "enum": [
                              "unavailable"
                            ],
                            "type": "string"
                          },
                          {
                            "enum": [
                              "critical"
                            ],
                            "type": "string"
                          }
                        ],
                        "description": "Service status levels as human and machine readable values."
                      },
                      "meta": {
                        "additionalProperties": {},
                        "description": "An unstructured set of extra metadata about this service.",
                        "type": "object"
                      },
                      "summary": {
                        "description": "A human readable summary of the service status.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "level",
                      "summary",
                      "meta"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "elasticsearch",
                  "savedObjects"
                ],
                "type": "object"
              },
              "overall": {
                "additionalProperties": false,
                "properties": {
                  "detail": {
                    "description": "Human readable detail of the service status.",
                    "type": "string"
                  },
                  "documentationUrl": {
                    "description": "A URL to further documentation regarding this service.",
                    "type": "string"
                  },
                  "level": {
                    "anyOf": [
                      {
                        "enum": [
                          "available"
                        ],
                        "type": "string"
                      },
                      {
                        "enum": [
                          "degraded"
                        ],
                        "type": "string"
                      },
                      {
                        "enum": [
                          "unavailable"
                        ],
                        "type": "string"
                      },
                      {
                        "enum": [
                          "critical"
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Service status levels as human and machine readable values."
                  },
                  "meta": {
                    "additionalProperties": {},
                    "description": "An unstructured set of extra metadata about this service.",
                    "type": "object"
                  },
                  "summary": {
                    "description": "A human readable summary of the service status.",
                    "type": "string"
                  }
                },
                "required": [
                  "level",
                  "summary",
                  "meta"
                ],
                "type": "object"
              },
              "plugins": {
                "additionalProperties": {
                  "additionalProperties": false,
                  "properties": {
                    "detail": {
                      "description": "Human readable detail of the service status.",
                      "type": "string"
                    },
                    "documentationUrl": {
                      "description": "A URL to further documentation regarding this service.",
                      "type": "string"
                    },
                    "level": {
                      "anyOf": [
                        {
                          "enum": [
                            "available"
                          ],
                          "type": "string"
                        },
                        {
                          "enum": [
                            "degraded"
                          ],
                          "type": "string"
                        },
                        {
                          "enum": [
                            "unavailable"
                          ],
                          "type": "string"
                        },
                        {
                          "enum": [
                            "critical"
                          ],
                          "type": "string"
                        }
                      ],
                      "description": "Service status levels as human and machine readable values."
                    },
                    "meta": {
                      "additionalProperties": {},
                      "description": "An unstructured set of extra metadata about this service.",
                      "type": "object"
                    },
                    "summary": {
                      "description": "A human readable summary of the service status.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "level",
                    "summary",
                    "meta"
                  ],
                  "type": "object"
                },
                "description": "A dynamic mapping of plugin ID to plugin status.",
                "type": "object"
              }
            },
            "required": [
              "overall",
              "core",
              "plugins"
            ],
            "type": "object"
          },
          "uuid": {
            "description": "Unique, generated Kibana instance UUID. This UUID should persist even if the Kibana process restarts.",
            "type": "string"
          },
          "version": {
            "additionalProperties": false,
            "properties": {
              "build_date": {
                "description": "The date and time of this build.",
                "type": "string"
              },
              "build_flavor": {
                "anyOf": [
                  {
                    "enum": [
                      "serverless"
                    ],
                    "type": "string"
                  },
                  {
                    "enum": [
                      "traditional"
                    ],
                    "type": "string"
                  }
                ],
                "description": "The build flavour determines configuration and behavior of Kibana. On premise users will almost always run the \"traditional\" flavour, while other flavours are reserved for Elastic-specific use cases."
              },
              "build_hash": {
                "description": "A unique hash value representing the git commit of this Kibana build.",
                "type": "string"
              },
              "build_number": {
                "description": "A monotonically increasing number, each subsequent build will have a higher number.",
                "type": "number"
              },
              "build_snapshot": {
                "description": "Whether this build is a snapshot build.",
                "type": "boolean"
              },
              "number": {
                "description": "A semantic version number.",
                "type": "string"
              }
            },
            "required": [
              "number",
              "build_hash",
              "build_number",
              "build_snapshot",
              "build_flavor",
              "build_date"
            ],
            "type": "object"
          }
        },
        "required": [
          "name",
          "uuid",
          "version",
          "status",
          "metrics"
        ],
        "type": "object"
      },
      "create_anomaly_detection_alert_rule_request": {
        "description": "A rule that checks if the anomaly detection job results contain anomalies that match the rule conditions. \n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for an anomaly detection rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "xpack.ml.anomaly_detection_alert"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create anomaly detection rule request",
        "type": "object"
      },
      "create_anomaly_detection_jobs_health_rule_request": {
        "description": "An rule that monitors job health and alerts if an operational issue occurred that may prevent the job from detecting anomalies.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for an anomaly detection jobs health rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "xpack.ml.anomaly_detection_jobs_health"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create anomaly detection jobs health rule request",
        "type": "object"
      },
      "create_apm_anomaly_rule_request": {
        "description": "A rule that detects when either the latency, throughput, or failed transaction rate of a service is anomalous.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "$ref": "#/components/schemas/params_property_apm_anomaly"
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "apm.anomaly"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create APM anomaly rule rule request",
        "type": "object"
      },
      "create_apm_error_count_rule_request": {
        "description": "A rule that detects when the number of errors in a service exceeds a defined threshold.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "$ref": "#/components/schemas/params_property_apm_error_count"
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "apm.error_rate"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create APM error count rule request",
        "type": "object"
      },
      "create_apm_transaction_duration_rule_request": {
        "description": "A rule that detects when the latency of a specific transaction type in a service exceeds a threshold.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "$ref": "#/components/schemas/params_property_apm_transaction_duration"
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "apm.transaction_duration"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create latency threshold rule request",
        "type": "object"
      },
      "create_apm_transaction_error_rate_rule_request": {
        "description": "A rule that sends notifications when the rate of transaction errors in a service exceeds a threshold.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "$ref": "#/components/schemas/params_property_apm_transaction_error_rate"
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "apm.transaction_error_rate"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create APM transaction error rate rule request",
        "type": "object"
      },
      "create_data_view_request_object": {
        "properties": {
          "data_view": {
            "description": "The data view object.",
            "properties": {
              "allowNoIndex": {
                "$ref": "#/components/schemas/allownoindex"
              },
              "fieldAttrs": {
                "additionalProperties": {
                  "$ref": "#/components/schemas/fieldattrs"
                },
                "type": "object",
                "x-go-type-skip-optional-pointer": true
              },
              "fieldFormats": {
                "$ref": "#/components/schemas/fieldformats"
              },
              "fields": {
                "type": "object",
                "x-go-type-skip-optional-pointer": true
              },
              "id": {
                "type": "string"
              },
              "name": {
                "description": "The data view name.",
                "type": "string"
              },
              "namespaces": {
                "$ref": "#/components/schemas/namespaces"
              },
              "runtimeFieldMap": {
                "additionalProperties": {
                  "$ref": "#/components/schemas/runtimefieldmap"
                },
                "type": "object",
                "x-go-type-skip-optional-pointer": true
              },
              "sourceFilters": {
                "$ref": "#/components/schemas/sourcefilters"
              },
              "timeFieldName": {
                "$ref": "#/components/schemas/timefieldname"
              },
              "title": {
                "$ref": "#/components/schemas/title"
              },
              "type": {
                "$ref": "#/components/schemas/type"
              },
              "typeMeta": {
                "$ref": "#/components/schemas/typemeta"
              },
              "version": {
                "type": "string"
              }
            },
            "required": [
              "title"
            ],
            "type": "object"
          },
          "override": {
            "default": false,
            "description": "Override an existing data view if a data view with the provided title already exists.",
            "type": "boolean"
          }
        },
        "required": [
          "data_view"
        ],
        "title": "Create data view request",
        "type": "object"
      },
      "create_es_query_rule_request": {
        "description": "A rule that runs a user-configured query, compares the number of matches to a configured threshold, and schedules actions to run when the threshold condition is met.  \n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "$ref": "#/components/schemas/params_es_query_rule"
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              ".es-query"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create Elasticsearch query rule request",
        "type": "object"
      },
      "create_geo_containment_rule_request": {
        "description": "A rule that runs an Elasticsearch query over indices to determine whether any documents are currently contained within any boundaries from the specified boundary index. In the event that an entity is contained within a boundary, an alert may be generated.  \n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for an tracking containment rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              ".geo-containment"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create tracking containment rule request",
        "type": "object"
      },
      "create_index_threshold_rule_request": {
        "description": "A rule that runs an Elasticsearch query, aggregates field values from documents, compares them to threshold values, and schedules actions to run when the thresholds are met.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "$ref": "#/components/schemas/params_index_threshold_rule"
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              ".index-threshold"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create index threshold rule request",
        "type": "object"
      },
      "create_infra_inventory_rule_request": {
        "description": "A rule that sends notifications when a metric has reached or exceeded a value for a specific resource or a group of resources within your infrastructure.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "$ref": "#/components/schemas/params_property_infra_inventory"
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "metrics.alert.inventory.threshold"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create infra inventory rule request",
        "type": "object"
      },
      "create_infra_metric_anomaly_rule_request": {
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for an infrastructure anomaly rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "metrics.alert.anomaly"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create infrastructure anomaly rule request",
        "type": "object"
      },
      "create_infra_metric_threshold_rule_request": {
        "description": "A rule that sends notifications when a metric has reached or exceeded a value for a specific time period.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "$ref": "#/components/schemas/params_property_infra_metric_threshold"
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "metrics.alert.threshold"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create infra metric threshold rule request",
        "type": "object"
      },
      "create_log_threshold_rule_request": {
        "description": "A rule that detects when a log aggregation exceeds a threshold.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "$ref": "#/components/schemas/params_property_log_threshold"
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "logs.alert.document.count"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create log threshold rule request",
        "type": "object"
      },
      "create_monitoring_ccr_exceptions_rule_request": {
        "description": "A rule that detects cross-cluster replication (CCR) read exceptions.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a CCR read exceptions rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_ccr_read_exceptions"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create CCR read exceptions rule request",
        "type": "object"
      },
      "create_monitoring_cluster_health_rule_request": {
        "description": "A rule that detects when the health of the cluster changes.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a cluster health rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_alert_cluster_health"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create cluster health rule request",
        "type": "object"
      },
      "create_monitoring_cpu_usage_rule_request": {
        "description": "A rule that detects when the CPU load for a node is consistently high.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a CPU usage rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_alert_cpu_usage"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create CPU usage rule request",
        "type": "object"
      },
      "create_monitoring_disk_usage_rule_request": {
        "description": "A rule that detects when the disk usage for a node is consistently high.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a disk usage rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_alert_disk_usage"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create disk usage rule request",
        "type": "object"
      },
      "create_monitoring_elasticsearch_version_mismatch_rule_request": {
        "description": "A rule that detects when the cluster has multipe versions of Elasticsearch.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a Elasticsearch version mismatch rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_alert_elasticsearch_version_mismatch"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create Elasticsearch version mismatch rule request",
        "type": "object"
      },
      "create_monitoring_jvm_memory_usage_rule_request": {
        "description": "A rule that detects when a node reports high memory usage.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a JVM memory usage rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_alert_jvm_memory_usage"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create JVM memory usage rule request",
        "type": "object"
      },
      "create_monitoring_kibana_version_mismatch_rule_request": {
        "description": "A rule that detects when the cluster has multiple versions of Kibana.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a Kibana version mismatch rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_alert_kibana_version_mismatch"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create Kibana version mismatch rule request",
        "type": "object"
      },
      "create_monitoring_license_expiration_rule_request": {
        "description": "A rule that detects when the cluster license is about to expire.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a license expiration rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_alert_license_expiration"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create license expiration rule request",
        "type": "object"
      },
      "create_monitoring_logstash_version_mismatch_rule_request": {
        "description": "A rule that detects when the cluster has multiple versions of Logstash.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a Logstash version mismatch rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_alert_logstash_version_mismatch"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create Logstash version mismatch rule request",
        "type": "object"
      },
      "create_monitoring_missing_data_rule_request": {
        "description": "A rule that detects when monitoring data is missing.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a missing monitoring data rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_alert_missing_monitoring_data"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create missing monitoring data rule request",
        "type": "object"
      },
      "create_monitoring_nodes_changed_rule_request": {
        "description": "A rule that detects when nodes are added, removed, or restarted.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a nodes changed rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_alert_nodes_changed"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create nodes changed rule request",
        "type": "object"
      },
      "create_monitoring_shard_size_rule_request": {
        "description": "A rule that detects when the average shard size is larger than a threshold.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a shard size rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_shard_size"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create shard size rule request",
        "type": "object"
      },
      "create_monitoring_thread_pool_search_rejections_rule_request": {
        "description": "A rule that detects when the number of rejections in the thread pool exceeds a threshold.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a thread pool search rejections rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_alert_thread_pool_search_rejections"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create thread pool search rejections rule request",
        "type": "object"
      },
      "create_monitoring_thread_pool_write_rejections_rule_request": {
        "description": "A rule that detects when the number of rejections in the write thread pool exceeds a threshold.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a thread pool write rejections rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "monitoring_alert_thread_pool_write_rejections"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create thread pool write rejections rule request",
        "type": "object"
      },
      "create_rule_request": {
        "description": "The properties vary depending on the rule type.",
        "discriminator": {
          "mapping": {
            ".es-query": "#/components/schemas/create_es_query_rule_request",
            ".geo-containment": "#/components/schemas/create_geo_containment_rule_request",
            ".index-threshold": "#/components/schemas/create_index_threshold_rule_request",
            "apm.anomaly": "#/components/schemas/create_apm_anomaly_rule_request",
            "apm.error_rate": "#/components/schemas/create_apm_error_count_rule_request",
            "apm.transaction_duration": "#/components/schemas/create_apm_transaction_duration_rule_request",
            "apm.transaction_error_rate": "#/components/schemas/create_apm_transaction_error_rate_rule_request",
            "logs.alert.document.count": "#/components/schemas/create_log_threshold_rule_request",
            "metrics.alert.anomaly": "#/components/schemas/create_infra_metric_anomaly_rule_request",
            "metrics.alert.inventory.threshold": "#/components/schemas/create_infra_inventory_rule_request",
            "metrics.alert.threshold": "#/components/schemas/create_infra_metric_threshold_rule_request",
            "monitoring_alert_cluster_health": "#/components/schemas/create_monitoring_cluster_health_rule_request",
            "monitoring_alert_cpu_usage": "#/components/schemas/create_monitoring_cpu_usage_rule_request",
            "monitoring_alert_disk_usage": "#/components/schemas/create_monitoring_disk_usage_rule_request",
            "monitoring_alert_elasticsearch_version_mismatch": "#/components/schemas/create_monitoring_elasticsearch_version_mismatch_rule_request",
            "monitoring_alert_jvm_memory_usage": "#/components/schemas/create_monitoring_jvm_memory_usage_rule_request",
            "monitoring_alert_kibana_version_mismatch": "#/components/schemas/create_monitoring_kibana_version_mismatch_rule_request",
            "monitoring_alert_license_expiration": "#/components/schemas/create_monitoring_license_expiration_rule_request",
            "monitoring_alert_logstash_version_mismatch": "#/components/schemas/create_monitoring_logstash_version_mismatch_rule_request",
            "monitoring_alert_missing_monitoring_data": "#/components/schemas/create_monitoring_missing_data_rule_request",
            "monitoring_alert_nodes_changed": "#/components/schemas/create_monitoring_nodes_changed_rule_request",
            "monitoring_alert_thread_pool_search_rejections": "#/components/schemas/create_monitoring_thread_pool_search_rejections_rule_request",
            "monitoring_alert_thread_pool_write_rejections": "#/components/schemas/create_monitoring_thread_pool_write_rejections_rule_request",
            "monitoring_ccr_read_exceptions": "#/components/schemas/create_monitoring_ccr_exceptions_rule_request",
            "monitoring_shard_size": "#/components/schemas/create_monitoring_shard_size_rule_request",
            "siem.eqlRule": "#/components/schemas/create_siem_eql_rule_request",
            "siem.indicatorRule": "#/components/schemas/create_siem_indicator_rule_request",
            "siem.mlRule": "#/components/schemas/create_siem_ml_rule_request",
            "siem.newTermsRule": "#/components/schemas/create_siem_new_terms_rule_request",
            "siem.notifications": "#/components/schemas/create_siem_notifications_rule_request",
            "siem.queryRule": "#/components/schemas/create_siem_query_rule_request",
            "siem.savedQueryRule": "#/components/schemas/create_siem_saved_query_rule_request",
            "siem.thresholdRule": "#/components/schemas/create_siem_threshold_rule_request",
            "slo.rules.burnRate": "#/components/schemas/create_slo_burn_rate_rule_request",
            "transform_health": "#/components/schemas/create_transform_health_rule_request",
            "xpack.ml.anomaly_detection_alert": "#/components/schemas/create_anomaly_detection_alert_rule_request",
            "xpack.ml.anomaly_detection_jobs_health": "#/components/schemas/create_anomaly_detection_jobs_health_rule_request",
            "xpack.synthetics.alerts.monitorStatus": "#/components/schemas/create_synthetics_monitor_status_rule_request",
            "xpack.uptime.alerts.durationAnomaly": "#/components/schemas/create_synthetics_uptime_duration_anomaly_rule_request",
            "xpack.uptime.alerts.monitorStatus": "#/components/schemas/create_uptime_monitor_status_rule_request",
            "xpack.uptime.alerts.tls": "#/components/schemas/create_synthetics_uptime_tls_rule_request",
            "xpack.uptime.alerts.tlsCertificate": "#/components/schemas/create_synthetics_uptime_tls_certificate_rule_request"
          },
          "propertyName": "rule_type_id"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/create_anomaly_detection_alert_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_anomaly_detection_jobs_health_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_apm_anomaly_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_apm_error_count_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_apm_transaction_duration_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_apm_transaction_error_rate_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_es_query_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_geo_containment_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_index_threshold_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_infra_inventory_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_infra_metric_anomaly_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_infra_metric_threshold_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_jvm_memory_usage_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_log_threshold_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_ccr_exceptions_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_cluster_health_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_cpu_usage_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_disk_usage_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_elasticsearch_version_mismatch_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_license_expiration_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_kibana_version_mismatch_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_logstash_version_mismatch_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_missing_data_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_nodes_changed_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_shard_size_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_thread_pool_search_rejections_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_monitoring_thread_pool_write_rejections_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_siem_eql_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_siem_indicator_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_siem_ml_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_siem_new_terms_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_siem_notifications_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_siem_query_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_siem_saved_query_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_siem_threshold_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_slo_burn_rate_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_synthetics_monitor_status_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_synthetics_uptime_duration_anomaly_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_synthetics_uptime_tls_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_synthetics_uptime_tls_certificate_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_transform_health_rule_request"
          },
          {
            "$ref": "#/components/schemas/create_uptime_monitor_status_rule_request"
          }
        ],
        "title": "Create rule request body properties"
      },
      "create_siem_eql_rule_request": {
        "description": "A rule that uses Event Query Language (EQL) to match events, generate sequences, and stack data.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for an event correlation rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "siem.eqlRule"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create event correlation rule request",
        "type": "object"
      },
      "create_siem_indicator_rule_request": {
        "description": "A rule that uses indicators from intelligence sources to detect matching events and alerts.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for an indicator match rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "siem.indicatorRule"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create indicator match rule request",
        "type": "object"
      },
      "create_siem_ml_rule_request": {
        "description": "A rule that detects when a machine learning job discovers an anomaly above the defined threshold.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a machine learning rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "siem.mlRule"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create machine learning rule request",
        "type": "object"
      },
      "create_siem_new_terms_rule_request": {
        "description": "A rule that finds documents with values that appear for the first time.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a new terms rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "siem.newTermsRule"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create new terms rule request",
        "type": "object"
      },
      "create_siem_notifications_rule_request": {
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a notification rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "siem.notifications"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create security solution notification (legacy) rule request",
        "type": "object"
      },
      "create_siem_query_rule_request": {
        "description": "A rule that uses KQL or Lucene to detect issues across indices.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a custom query rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "siem.queryRule"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create custom query rule request",
        "type": "object"
      },
      "create_siem_saved_query_rule_request": {
        "description": "A rule that searches the defined indices and creates an alert when a document matches the saved search.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a saved query rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "siem.savedQueryRule"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create saved query rule request",
        "type": "object"
      },
      "create_siem_threshold_rule_request": {
        "description": "A rule that aggregates query results to detect when the number of matches exceeds a threshold.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a threshold rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "siem.thresholdRule"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create threshold rule request",
        "type": "object"
      },
      "create_slo_burn_rate_rule_request": {
        "description": "A rule that detects when the burn rate is above a defined threshold for two different lookback periods. The two periods are a long period and a short period that is 1/12th of the long period. For each lookback period, the burn rate is computed as the error rate divided by the error budget. When the burn rates for both periods surpass the threshold, an alert occurs.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "$ref": "#/components/schemas/params_property_slo_burn_rate"
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "slo.rules.burnRate"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create slo burn rate rule request",
        "type": "object"
      },
      "create_slo_request": {
        "description": "The create SLO API request body varies depending on the type of indicator, time window and budgeting method.\n",
        "properties": {
          "budgetingMethod": {
            "$ref": "#/components/schemas/budgeting_method"
          },
          "description": {
            "description": "A description for the SLO.",
            "type": "string"
          },
          "groupBy": {
            "description": "optional group by field to use to generate an SLO per distinct value",
            "example": "some.field",
            "type": "string"
          },
          "id": {
            "description": "A optional and unique identifier for the SLO. Must be between 8 and 36 chars",
            "example": "my-super-slo-id",
            "type": "string"
          },
          "indicator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/indicator_properties_custom_kql"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_availability"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_latency"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_custom_metric"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_histogram"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_timeslice_metric"
              }
            ]
          },
          "name": {
            "description": "A name for the SLO.",
            "type": "string"
          },
          "objective": {
            "$ref": "#/components/schemas/objective"
          },
          "settings": {
            "$ref": "#/components/schemas/settings"
          },
          "tags": {
            "description": "List of tags",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "timeWindow": {
            "$ref": "#/components/schemas/time_window"
          }
        },
        "required": [
          "name",
          "description",
          "indicator",
          "timeWindow",
          "budgetingMethod",
          "objective"
        ],
        "title": "Create SLO request",
        "type": "object"
      },
      "create_slo_response": {
        "properties": {
          "id": {
            "example": "8853df00-ae2e-11ed-90af-09bb6422b258",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "title": "Create SLO response",
        "type": "object"
      },
      "create_synthetics_monitor_status_rule_request": {
        "description": "A rule that detects when a monitor is down or an availability threshold is breached.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for the synthetics monitor status rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "xpack.synthetics.alerts.monitorStatus"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create synthetics monitor status rule request",
        "type": "object"
      },
      "create_synthetics_uptime_duration_anomaly_rule_request": {
        "description": "A rule that detects response durations for all of the geographic locations of each monitor. When a monitor runs for an unusual amount of time, at a particular time, an anomaly is recorded.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for the uptime duration anomaly rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "xpack.uptime.alerts.durationAnomaly"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create synthetics uptime duration anomaly rule request",
        "type": "object"
      },
      "create_synthetics_uptime_tls_certificate_rule_request": {
        "description": "A rule that detects when a monitor has a TLS certificate expiring or when it exceeds an age limit.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a TLS certificate rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "xpack.uptime.alerts.tlsCertificate"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create TLS certificate rule request",
        "type": "object"
      },
      "create_synthetics_uptime_tls_rule_request": {
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "$ref": "#/components/schemas/params_property_synthetics_uptime_tls"
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "xpack.uptime.alerts.tls"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create synthetics uptime TLS rule request",
        "type": "object"
      },
      "create_transform_health_rule_request": {
        "description": "A rule that monitors transforms health and alerts if an operational issue occurred.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for a transform health rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "transform_health"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create transform health rule request",
        "type": "object"
      },
      "create_uptime_monitor_status_rule_request": {
        "description": "A rule that detects monitor errors and outages.",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "consumer": {
            "$ref": "#/components/schemas/consumer"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled_rule"
          },
          "name": {
            "$ref": "#/components/schemas/name_rule"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "$ref": "#/components/schemas/params_property_synthetics_monitor_status"
          },
          "rule_type_id": {
            "description": "The ID of the rule type that you want to call when the rule is scheduled to run.",
            "enum": [
              "xpack.uptime.alerts.monitorStatus"
            ],
            "type": "string"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "consumer",
          "name",
          "params",
          "rule_type_id",
          "schedule"
        ],
        "title": "Create uptime monitor status rule request",
        "type": "object"
      },
      "data_stream": {
        "properties": {
          "dashboard": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "dataset": {
            "type": "string"
          },
          "index": {
            "type": "string"
          },
          "last_activity_ms": {
            "type": "number"
          },
          "namespace": {
            "type": "string"
          },
          "package": {
            "type": "string"
          },
          "package_version": {
            "type": "string"
          },
          "size_in_bytes": {
            "type": "number"
          },
          "size_in_bytes_formatted": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "title": "Data stream",
        "type": "object"
      },
      "data_view_response_object": {
        "properties": {
          "data_view": {
            "properties": {
              "allowNoIndex": {
                "$ref": "#/components/schemas/allownoindex"
              },
              "fieldAttrs": {
                "additionalProperties": {
                  "$ref": "#/components/schemas/fieldattrs"
                },
                "type": "object",
                "x-go-type-skip-optional-pointer": true
              },
              "fieldFormats": {
                "$ref": "#/components/schemas/fieldformats"
              },
              "fields": {
                "type": "object",
                "x-go-type-skip-optional-pointer": true
              },
              "id": {
                "example": "ff959d40-b880-11e8-a6d9-e546fe2bba5f",
                "type": "string"
              },
              "name": {
                "description": "The data view name.",
                "type": "string"
              },
              "namespaces": {
                "$ref": "#/components/schemas/namespaces"
              },
              "runtimeFieldMap": {
                "additionalProperties": {
                  "$ref": "#/components/schemas/runtimefieldmap"
                },
                "type": "object",
                "x-go-type-skip-optional-pointer": true
              },
              "sourceFilters": {
                "$ref": "#/components/schemas/sourcefilters"
              },
              "timeFieldName": {
                "$ref": "#/components/schemas/timefieldname"
              },
              "title": {
                "$ref": "#/components/schemas/title"
              },
              "typeMeta": {
                "$ref": "#/components/schemas/typemeta_response"
              },
              "version": {
                "example": "WzQ2LDJd",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "title": "Data view response properties",
        "type": "object"
      },
      "delete_slo_instances_request": {
        "description": "The delete SLO instances request takes a list of SLO id and instance id, then delete the rollup and summary data. This API can be used to remove the staled data of an instance SLO that no longer get updated.\n",
        "properties": {
          "list": {
            "description": "An array of slo id and instance id",
            "items": {
              "properties": {
                "instanceId": {
                  "description": "The SLO instance identifier",
                  "example": "8853df00-ae2e-11ed-90af-09bb6422b258",
                  "type": "string"
                },
                "sloId": {
                  "description": "The SLO unique identifier",
                  "example": "8853df00-ae2e-11ed-90af-09bb6422b258",
                  "type": "string"
                }
              },
              "required": [
                "sloId",
                "instanceId"
              ],
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "list"
        ],
        "title": "Delete SLO instances request",
        "type": "object"
      },
      "download_sources": {
        "properties": {
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "proxy_id": {
            "description": "The ID of the proxy to use for this download source. See the proxies API for more information.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "is_default",
          "name",
          "host"
        ],
        "title": "Download Source",
        "type": "object"
      },
      "elasticsearch_asset_type": {
        "enum": [
          "component_template",
          "ingest_pipeline",
          "index_template",
          "ilm_policy",
          "transform",
          "data_stream_ilm_policy"
        ],
        "title": "Elasticsearch asset type",
        "type": "string"
      },
      "enabled_rule": {
        "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
        "type": "boolean"
      },
      "enrollment_api_key": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "api_key": {
            "type": "string"
          },
          "api_key_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "policy_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "api_key_id",
          "api_key",
          "active",
          "created_at"
        ],
        "title": "Enrollment API key",
        "type": "object"
      },
      "error_budget": {
        "properties": {
          "consumed": {
            "description": "The error budget consummed, as a percentage of the initial value.",
            "example": 0.8,
            "type": "number"
          },
          "initial": {
            "description": "The initial error budget, as 1 - objective",
            "example": 0.02,
            "type": "number"
          },
          "isEstimated": {
            "description": "Only for SLO defined with occurrences budgeting method and calendar aligned time window.",
            "example": true,
            "type": "boolean"
          },
          "remaining": {
            "description": "The error budget remaining, as a percentage of the initial value.",
            "example": 0.2,
            "type": "number"
          }
        },
        "required": [
          "initial",
          "consumed",
          "remaining",
          "isEstimated"
        ],
        "title": "Error budget",
        "type": "object"
      },
      "excludehitsfrompreviousrun": {
        "description": "Indicates whether to exclude matches from previous runs. If `true`, you can avoid alert duplication by excluding documents that have already been detected by the previous rule run. This option is not available when a grouping field is specified.\n",
        "type": "boolean"
      },
      "fieldattrs": {
        "description": "A map of field attributes by field name.",
        "properties": {
          "count": {
            "description": "Popularity count for the field.",
            "type": "integer"
          },
          "customDescription": {
            "description": "Custom description for the field.",
            "maxLength": 300,
            "type": "string"
          },
          "customLabel": {
            "description": "Custom label for the field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "fieldformats": {
        "description": "A map of field formats by field name.",
        "type": "object",
        "x-go-type-skip-optional-pointer": true
      },
      "fieldmap_properties": {
        "properties": {
          "array": {
            "description": "Indicates whether the field is an array.",
            "type": "boolean"
          },
          "dynamic": {
            "description": "Indicates whether it is a dynamic field mapping.",
            "type": "boolean"
          },
          "format": {
            "description": "Indicates the format of the field. For example, if the `type` is `date_range`, the `format` can be `epoch_millis||strict_date_optional_time`.\n",
            "type": "string"
          },
          "ignore_above": {
            "description": "Specifies the maximum length of a string field. Longer strings are not indexed or stored.",
            "type": "integer"
          },
          "index": {
            "description": "Indicates whether field values are indexed.",
            "type": "boolean"
          },
          "path": {
            "description": "TBD",
            "type": "string"
          },
          "properties": {
            "additionalProperties": {
              "properties": {
                "type": {
                  "description": "The data type for each object property.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "Details about the object properties. This property is applicable when `type` is `object`.\n",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "required": {
            "description": "Indicates whether the field is required.",
            "type": "boolean"
          },
          "scaling_factor": {
            "description": "The scaling factor to use when encoding values. This property is applicable when `type` is `scaled_float`. Values will be multiplied by this factor at index time and rounded to the closest long value. \n",
            "type": "integer"
          },
          "type": {
            "description": "Specifies the data type for the field.",
            "example": "scaled_float",
            "type": "string"
          }
        },
        "title": "Field map objects in the get rule types response",
        "type": "object"
      },
      "filter": {
        "description": "Defines properties for a filter",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/filter_meta"
          },
          "query": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "title": "Filter",
        "type": "object"
      },
      "filter_meta": {
        "description": "Defines properties for a filter",
        "properties": {
          "alias": {
            "nullable": true,
            "type": "string"
          },
          "controlledBy": {
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "field": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "index": {
            "type": "string"
          },
          "isMultiIndex": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "negate": {
            "type": "boolean"
          },
          "params": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "title": "FilterMeta",
        "type": "object"
      },
      "find_slo_response": {
        "description": "A paginated response of SLOs matching the query.\n",
        "properties": {
          "page": {
            "example": 1,
            "type": "number"
          },
          "perPage": {
            "example": 25,
            "type": "number"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/slo_with_summary_response"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "total": {
            "example": 34,
            "type": "number"
          }
        },
        "title": "Find SLO response",
        "type": "object"
      },
      "fleet_server_host": {
        "properties": {
          "host_urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "is_preconfigured": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          }
        },
        "required": [
          "fleet_server_hosts",
          "id",
          "is_default",
          "is_preconfigured",
          "host_urls"
        ],
        "title": "Fleet Server Host",
        "type": "object"
      },
      "fleet_settings_enrollment_response": {
        "properties": {
          "download_source": {
            "$ref": "#/components/schemas/download_sources"
          },
          "fleet_server": {
            "properties": {
              "has_active": {
                "type": "boolean"
              },
              "host": {
                "$ref": "#/components/schemas/fleet_server_host"
              },
              "host_proxy": {
                "$ref": "#/components/schemas/proxies"
              },
              "policies": {
                "items": {
                  "properties": {
                    "download_source_id": {
                      "type": "string"
                    },
                    "fleet_server_host_id": {
                      "type": "string"
                    },
                    "has_fleet_server": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "is_default_fleet_server": {
                      "type": "boolean"
                    },
                    "is_managed": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "is_managed"
                  ],
                  "type": "object"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              }
            },
            "required": [
              "agent_policies",
              "has_active"
            ],
            "type": "object"
          }
        },
        "required": [
          "fleet_server"
        ],
        "title": "Fleet settings response",
        "type": "object"
      },
      "fleet_settings_response": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/settings"
          }
        },
        "required": [
          "item"
        ],
        "title": "Fleet settings response",
        "type": "object"
      },
      "fleet_setup_response": {
        "properties": {
          "isInitialized": {
            "type": "boolean"
          },
          "nonFatalErrors": {
            "items": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "message"
              ],
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "isInitialized",
          "nonFatalErrors"
        ],
        "title": "Fleet Setup response",
        "type": "object"
      },
      "fleet_status_response": {
        "properties": {
          "isReady": {
            "type": "boolean"
          },
          "missing_optional_features": {
            "items": {
              "enum": [
                "encrypted_saved_object_encryption_key_required"
              ],
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "missing_requirements": {
            "items": {
              "enum": [
                "tls_required",
                "api_keys",
                "fleet_admin_user",
                "fleet_server"
              ],
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "package_verification_key_id": {
            "type": "string"
          }
        },
        "required": [
          "isReady",
          "missing_requirements",
          "missing_optional_features"
        ],
        "title": "Fleet status response",
        "type": "object"
      },
      "full_agent_policy": {
        "properties": {
          "agent": {
            "nullable": true,
            "type": "string"
          },
          "fleet": {
            "oneOf": [
              {
                "properties": {
                  "hosts": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "proxy_headers": {},
                  "proxy_url": {
                    "type": "string"
                  },
                  "ssl": {
                    "properties": {
                      "certificate": {
                        "type": "string"
                      },
                      "certificate_authorities": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "x-go-type-skip-optional-pointer": true
                      },
                      "key": {
                        "type": "string"
                      },
                      "renegotiation": {
                        "type": "string"
                      },
                      "verification_mode": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              {
                "properties": {
                  "kibana": {
                    "properties": {
                      "hosts": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "x-go-type-skip-optional-pointer": true
                      },
                      "path": {
                        "type": "string"
                      },
                      "protocol": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          },
          "id": {
            "type": "string"
          },
          "inputs": {
            "type": "string"
          },
          "output_permissions": {
            "additionalProperties": {
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/full_agent_policy_output_permissions"
                },
                "output": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "outputs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/full_agent_policy_output"
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "revision": {
            "type": "number"
          },
          "secret_references": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "id",
          "outputs",
          "inputs"
        ],
        "title": "Full agent policy",
        "type": "object"
      },
      "full_agent_policy_input": {
        "allOf": [
          {
            "additionalProperties": true,
            "properties": {
              "data_stream": {
                "properties": {
                  "namespace": {
                    "type": "string"
                  }
                },
                "required": [
                  "namespace"
                ],
                "type": "object"
              },
              "id": {
                "type": "string"
              },
              "meta": {
                "additionalProperties": true,
                "properties": {
                  "package": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "version"
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "name": {
                "type": "string"
              },
              "revision": {
                "type": "number"
              },
              "streams": {
                "$ref": "#/components/schemas/full_agent_policy_input_stream"
              },
              "type": {
                "type": "string"
              },
              "use_output": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "revision",
              "type",
              "data_stream",
              "use_output"
            ],
            "type": "object"
          }
        ],
        "title": "Full agent policy input"
      },
      "full_agent_policy_input_stream": {
        "allOf": [
          {
            "additionalProperties": true,
            "properties": {
              "data_stream": {
                "properties": {
                  "dataset": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "dataset",
                  "type"
                ],
                "type": "object"
              },
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "data_stream"
            ],
            "type": "object"
          }
        ],
        "title": "Full agent policy input stream"
      },
      "full_agent_policy_output": {
        "properties": {
          "additionalProperties": {
            "properties": {
              "text": {}
            },
            "type": "object"
          },
          "ca_sha256": {
            "nullable": true,
            "type": "string"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "proxy_headers": {},
          "proxy_url": {
            "type": "string"
          },
          "type": {}
        },
        "required": [
          "type",
          "hosts",
          "ca_sha256"
        ],
        "title": "Full agent policy",
        "type": "object"
      },
      "full_agent_policy_output_permissions": {
        "additionalProperties": {
          "properties": {
            "data": {
              "properties": {
                "cluster": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-go-type-skip-optional-pointer": true
                },
                "indices": {
                  "items": {
                    "properties": {
                      "names": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "x-go-type-skip-optional-pointer": true
                      },
                      "privileges": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "x-go-type-skip-optional-pointer": true
                      }
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "x-go-type-skip-optional-pointer": true
                }
              },
              "type": "object"
            },
            "packagePolicyName": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "title": "Full agent policy output permissions"
      },
      "get_agent_tags_response": {
        "properties": {
          "items": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "title": "Get Agent Tags response",
        "type": "object"
      },
      "get_agents_response": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/agent"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "list": {
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/agent"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "page": {
            "type": "number"
          },
          "perPage": {
            "type": "number"
          },
          "statusSummary": {
            "properties": {
              "degraded'": {
                "type": "number"
              },
              "enrolling": {
                "type": "number"
              },
              "error": {
                "type": "number"
              },
              "inactive": {
                "type": "number"
              },
              "offline": {
                "type": "number"
              },
              "online": {
                "type": "number"
              },
              "unenrolled": {
                "type": "number"
              },
              "unenrolling": {
                "type": "number"
              },
              "updating": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "total": {
            "type": "number"
          }
        },
        "required": [
          "items",
          "total",
          "page",
          "perPage"
        ],
        "title": "Get Agent response",
        "type": "object"
      },
      "get_bulk_assets_response": {
        "deprecated": true,
        "properties": {
          "items": {
            "items": {
              "properties": {
                "appLink": {
                  "type": "string"
                },
                "attributes": {
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "id": {
                  "type": "string"
                },
                "type": {
                  "$ref": "#/components/schemas/saved_object_type"
                },
                "updatedAt": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "items"
        ],
        "title": "Bulk get assets response",
        "type": "object"
      },
      "get_categories_response": {
        "properties": {
          "items": {
            "items": {
              "properties": {
                "count": {
                  "type": "number"
                },
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "title",
                "count"
              ],
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "response": {
            "items": {
              "deprecated": true,
              "properties": {
                "count": {
                  "type": "number"
                },
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "title",
                "count"
              ],
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "items"
        ],
        "title": "Get categories response",
        "type": "object"
      },
      "get_packages_response": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/search_result"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "response": {
            "deprecated": true,
            "items": {
              "$ref": "#/components/schemas/search_result"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "items"
        ],
        "title": "Get Packages response",
        "type": "object"
      },
      "groupby": {
        "default": "all",
        "description": "Indicates whether the aggregation is applied over all documents (`all`) or split into groups (`top`) using a grouping field (`termField`). If grouping is used, an alert will be created for each group when it exceeds the threshold; only the top groups (up to `termSize` number of groups) are checked.\n",
        "enum": [
          "all",
          "top"
        ],
        "type": "string"
      },
      "indicator_properties_apm_availability": {
        "description": "Defines properties for the APM availability indicator type",
        "properties": {
          "params": {
            "description": "An object containing the indicator parameters.",
            "nullable": false,
            "properties": {
              "environment": {
                "description": "The APM service environment or \"*\"",
                "example": "production",
                "type": "string"
              },
              "filter": {
                "description": "KQL query used for filtering the data",
                "example": "service.foo : \"bar\"",
                "type": "string"
              },
              "index": {
                "description": "The index used by APM metrics",
                "example": "metrics-apm*,apm*",
                "type": "string"
              },
              "service": {
                "description": "The APM service name",
                "example": "o11y-app",
                "type": "string"
              },
              "transactionName": {
                "description": "The APM transaction name or \"*\"",
                "example": "GET /my/api",
                "type": "string"
              },
              "transactionType": {
                "description": "The APM transaction type or \"*\"",
                "example": "request",
                "type": "string"
              }
            },
            "required": [
              "service",
              "environment",
              "transactionType",
              "transactionName",
              "index"
            ],
            "type": "object"
          },
          "type": {
            "description": "The type of indicator.",
            "example": "sli.apm.transactionDuration",
            "type": "string"
          }
        },
        "required": [
          "type",
          "params"
        ],
        "title": "APM availability",
        "type": "object"
      },
      "indicator_properties_apm_latency": {
        "description": "Defines properties for the APM latency indicator type",
        "properties": {
          "params": {
            "description": "An object containing the indicator parameters.",
            "nullable": false,
            "properties": {
              "environment": {
                "description": "The APM service environment or \"*\"",
                "example": "production",
                "type": "string"
              },
              "filter": {
                "description": "KQL query used for filtering the data",
                "example": "service.foo : \"bar\"",
                "type": "string"
              },
              "index": {
                "description": "The index used by APM metrics",
                "example": "metrics-apm*,apm*",
                "type": "string"
              },
              "service": {
                "description": "The APM service name",
                "example": "o11y-app",
                "type": "string"
              },
              "threshold": {
                "description": "The latency threshold in milliseconds",
                "example": 250,
                "type": "number"
              },
              "transactionName": {
                "description": "The APM transaction name or \"*\"",
                "example": "GET /my/api",
                "type": "string"
              },
              "transactionType": {
                "description": "The APM transaction type or \"*\"",
                "example": "request",
                "type": "string"
              }
            },
            "required": [
              "service",
              "environment",
              "transactionType",
              "transactionName",
              "index",
              "threshold"
            ],
            "type": "object"
          },
          "type": {
            "description": "The type of indicator.",
            "example": "sli.apm.transactionDuration",
            "type": "string"
          }
        },
        "required": [
          "type",
          "params"
        ],
        "title": "APM latency",
        "type": "object"
      },
      "indicator_properties_custom_kql": {
        "description": "Defines properties for a custom query indicator type",
        "properties": {
          "params": {
            "description": "An object containing the indicator parameters.",
            "nullable": false,
            "properties": {
              "dataViewId": {
                "description": "The kibana data view id to use, primarily used to include data view runtime mappings. Make sure to save SLO again if you add/update run time fields to the data view and if those fields are being used in slo queries.",
                "example": "03b80ab3-003d-498b-881c-3beedbaf1162",
                "type": "string"
              },
              "filter": {
                "$ref": "#/components/schemas/kql_with_filters"
              },
              "good": {
                "$ref": "#/components/schemas/kql_with_filters_good"
              },
              "index": {
                "description": "The index or index pattern to use",
                "example": "my-service-*",
                "type": "string"
              },
              "timestampField": {
                "description": "The timestamp field used in the source indice.\n",
                "example": "timestamp",
                "type": "string"
              },
              "total": {
                "$ref": "#/components/schemas/kql_with_filters_total"
              }
            },
            "required": [
              "index",
              "timestampField",
              "good",
              "total"
            ],
            "type": "object"
          },
          "type": {
            "description": "The type of indicator.",
            "example": "sli.kql.custom",
            "type": "string"
          }
        },
        "required": [
          "type",
          "params"
        ],
        "title": "Custom Query",
        "type": "object"
      },
      "indicator_properties_custom_metric": {
        "description": "Defines properties for a custom metric indicator type",
        "properties": {
          "params": {
            "description": "An object containing the indicator parameters.",
            "nullable": false,
            "properties": {
              "dataViewId": {
                "description": "The kibana data view id to use, primarily used to include data view runtime mappings. Make sure to save SLO again if you add/update run time fields to the data view and if those fields are being used in slo queries.",
                "example": "03b80ab3-003d-498b-881c-3beedbaf1162",
                "type": "string"
              },
              "filter": {
                "description": "the KQL query to filter the documents with.",
                "example": "field.environment : \"production\" and service.name : \"my-service\"",
                "type": "string"
              },
              "good": {
                "description": "An object defining the \"good\" metrics and equation\n",
                "properties": {
                  "equation": {
                    "description": "The equation to calculate the \"good\" metric.",
                    "example": "A",
                    "type": "string"
                  },
                  "metrics": {
                    "description": "List of metrics with their name, aggregation type, and field.",
                    "items": {
                      "properties": {
                        "aggregation": {
                          "description": "The aggregation type of the metric. Only valid option is \"sum\"",
                          "enum": [
                            "sum"
                          ],
                          "example": "sum",
                          "type": "string"
                        },
                        "field": {
                          "description": "The field of the metric.",
                          "example": "processor.processed",
                          "type": "string"
                        },
                        "filter": {
                          "description": "The filter to apply to the metric.",
                          "example": "processor.outcome: \"success\"",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the metric. Only valid options are A-Z",
                          "example": "A",
                          "pattern": "^[A-Z]$",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "aggregation",
                        "field"
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  }
                },
                "required": [
                  "metrics",
                  "equation"
                ],
                "type": "object"
              },
              "index": {
                "description": "The index or index pattern to use",
                "example": "my-service-*",
                "type": "string"
              },
              "timestampField": {
                "description": "The timestamp field used in the source indice.\n",
                "example": "timestamp",
                "type": "string"
              },
              "total": {
                "description": "An object defining the \"total\" metrics and equation\n",
                "properties": {
                  "equation": {
                    "description": "The equation to calculate the \"total\" metric.",
                    "example": "A",
                    "type": "string"
                  },
                  "metrics": {
                    "description": "List of metrics with their name, aggregation type, and field.",
                    "items": {
                      "properties": {
                        "aggregation": {
                          "description": "The aggregation type of the metric. Only valid option is \"sum\"",
                          "enum": [
                            "sum"
                          ],
                          "example": "sum",
                          "type": "string"
                        },
                        "field": {
                          "description": "The field of the metric.",
                          "example": "processor.processed",
                          "type": "string"
                        },
                        "filter": {
                          "description": "The filter to apply to the metric.",
                          "example": "processor.outcome: *",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the metric. Only valid options are A-Z",
                          "example": "A",
                          "pattern": "^[A-Z]$",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "aggregation",
                        "field"
                      ],
                      "type": "object"
                    },
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  }
                },
                "required": [
                  "metrics",
                  "equation"
                ],
                "type": "object"
              }
            },
            "required": [
              "index",
              "timestampField",
              "good",
              "total"
            ],
            "type": "object"
          },
          "type": {
            "description": "The type of indicator.",
            "example": "sli.metric.custom",
            "type": "string"
          }
        },
        "required": [
          "type",
          "params"
        ],
        "title": "Custom metric",
        "type": "object"
      },
      "indicator_properties_histogram": {
        "description": "Defines properties for a histogram indicator type",
        "properties": {
          "params": {
            "description": "An object containing the indicator parameters.",
            "nullable": false,
            "properties": {
              "dataViewId": {
                "description": "The kibana data view id to use, primarily used to include data view runtime mappings. Make sure to save SLO again if you add/update run time fields to the data view and if those fields are being used in slo queries.",
                "example": "03b80ab3-003d-498b-881c-3beedbaf1162",
                "type": "string"
              },
              "filter": {
                "description": "the KQL query to filter the documents with.",
                "example": "field.environment : \"production\" and service.name : \"my-service\"",
                "type": "string"
              },
              "good": {
                "description": "An object defining the \"good\" events\n",
                "properties": {
                  "aggregation": {
                    "description": "The type of aggregation to use.",
                    "enum": [
                      "value_count",
                      "range"
                    ],
                    "example": "value_count",
                    "type": "string"
                  },
                  "field": {
                    "description": "The field use to aggregate the good events.",
                    "example": "processor.latency",
                    "type": "string"
                  },
                  "filter": {
                    "description": "The filter for good events.",
                    "example": "processor.outcome: \"success\"",
                    "type": "string"
                  },
                  "from": {
                    "description": "The starting value of the range. Only required for \"range\" aggregations.",
                    "example": 0,
                    "type": "number"
                  },
                  "to": {
                    "description": "The ending value of the range. Only required for \"range\" aggregations.",
                    "example": 100,
                    "type": "number"
                  }
                },
                "required": [
                  "aggregation",
                  "field"
                ],
                "type": "object"
              },
              "index": {
                "description": "The index or index pattern to use",
                "example": "my-service-*",
                "type": "string"
              },
              "timestampField": {
                "description": "The timestamp field used in the source indice.\n",
                "example": "timestamp",
                "type": "string"
              },
              "total": {
                "description": "An object defining the \"total\" events\n",
                "properties": {
                  "aggregation": {
                    "description": "The type of aggregation to use.",
                    "enum": [
                      "value_count",
                      "range"
                    ],
                    "example": "value_count",
                    "type": "string"
                  },
                  "field": {
                    "description": "The field use to aggregate the good events.",
                    "example": "processor.latency",
                    "type": "string"
                  },
                  "filter": {
                    "description": "The filter for total events.",
                    "example": "processor.outcome : *",
                    "type": "string"
                  },
                  "from": {
                    "description": "The starting value of the range. Only required for \"range\" aggregations.",
                    "example": 0,
                    "type": "number"
                  },
                  "to": {
                    "description": "The ending value of the range. Only required for \"range\" aggregations.",
                    "example": 100,
                    "type": "number"
                  }
                },
                "required": [
                  "aggregation",
                  "field"
                ],
                "type": "object"
              }
            },
            "required": [
              "index",
              "timestampField",
              "good",
              "total"
            ],
            "type": "object"
          },
          "type": {
            "description": "The type of indicator.",
            "example": "sli.histogram.custom",
            "type": "string"
          }
        },
        "required": [
          "type",
          "params"
        ],
        "title": "Histogram indicator",
        "type": "object"
      },
      "indicator_properties_timeslice_metric": {
        "description": "Defines properties for a timeslice metric indicator type",
        "properties": {
          "params": {
            "description": "An object containing the indicator parameters.",
            "nullable": false,
            "properties": {
              "dataViewId": {
                "description": "The kibana data view id to use, primarily used to include data view runtime mappings. Make sure to save SLO again if you add/update run time fields to the data view and if those fields are being used in slo queries.",
                "example": "03b80ab3-003d-498b-881c-3beedbaf1162",
                "type": "string"
              },
              "filter": {
                "description": "the KQL query to filter the documents with.",
                "example": "field.environment : \"production\" and service.name : \"my-service\"",
                "type": "string"
              },
              "index": {
                "description": "The index or index pattern to use",
                "example": "my-service-*",
                "type": "string"
              },
              "metric": {
                "description": "An object defining the metrics, equation, and threshold to determine if it's a good slice or not\n",
                "properties": {
                  "comparator": {
                    "description": "The comparator to use to compare the equation to the threshold.",
                    "enum": [
                      "GT",
                      "GTE",
                      "LT",
                      "LTE"
                    ],
                    "example": "GT",
                    "type": "string"
                  },
                  "equation": {
                    "description": "The equation to calculate the metric.",
                    "example": "A",
                    "type": "string"
                  },
                  "metrics": {
                    "description": "List of metrics with their name, aggregation type, and field.",
                    "items": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/timeslice_metric_basic_metric_with_field"
                        },
                        {
                          "$ref": "#/components/schemas/timeslice_metric_percentile_metric"
                        },
                        {
                          "$ref": "#/components/schemas/timeslice_metric_doc_count_metric"
                        }
                      ]
                    },
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "threshold": {
                    "description": "The threshold used to determine if the metric is a good slice or not.",
                    "example": 100,
                    "type": "number"
                  }
                },
                "required": [
                  "metrics",
                  "equation",
                  "comparator",
                  "threshold"
                ],
                "type": "object"
              },
              "timestampField": {
                "description": "The timestamp field used in the source indice.\n",
                "example": "timestamp",
                "type": "string"
              }
            },
            "required": [
              "index",
              "timestampField",
              "metric"
            ],
            "type": "object"
          },
          "type": {
            "description": "The type of indicator.",
            "example": "sli.metric.timeslice",
            "type": "string"
          }
        },
        "required": [
          "type",
          "params"
        ],
        "title": "Timeslice metric",
        "type": "object"
      },
      "initial_namespaces": {
        "description": "Identifiers for the spaces in which this object is created. If this is provided, the object is created only in the explicitly defined spaces. If this is not provided, the object is created in the current space (default behavior). For shareable object types (registered with `namespaceType: 'multiple'`), this option can be used to specify one or more spaces, including the \"All spaces\" identifier ('*'). For isolated object types (registered with `namespaceType: 'single'` or `namespaceType: 'multiple-isolated'`), this option can only be used to specify a single space, and the \"All spaces\" identifier ('*') is not allowed. For global object types (`registered with `namespaceType: agnostic`), this option cannot be used.\n",
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "installation_info": {
        "properties": {
          "created_at": {
            "type": "string"
          },
          "experimental_data_stream_features": {
            "properties": {
              "data_stream": {
                "type": "string"
              },
              "features": {
                "properties": {
                  "doc_value_only_numeric": {
                    "nullable": true,
                    "type": "boolean"
                  },
                  "doc_value_only_other": {
                    "nullable": true,
                    "type": "boolean"
                  },
                  "synthetic_source": {
                    "nullable": true,
                    "type": "boolean"
                  },
                  "tsdb": {
                    "nullable": true,
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "install_format_schema_version": {
            "type": "string"
          },
          "install_kibana_space_id": {
            "type": "string"
          },
          "install_source": {
            "enum": [
              "registry",
              "upload",
              "bundled"
            ],
            "type": "string"
          },
          "install_status": {
            "enum": [
              "installed",
              "installing",
              "install_failed"
            ],
            "type": "string"
          },
          "installed_es": {
            "properties": {
              "deferred": {
                "type": "boolean"
              },
              "id": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/elasticsearch_asset_type"
              }
            },
            "type": "object"
          },
          "installed_kibana": {
            "properties": {
              "id": {
                "type": "string"
              },
              "type": {
                "$ref": "#/components/schemas/kibana_saved_object_type"
              }
            },
            "type": "object"
          },
          "latest_executed_state": {
            "description": "Latest successfully executed state in package install state machine",
            "properties": {
              "error": {
                "type": "string"
              },
              "name": {
                "enum": [
                  "create_restart_installation",
                  "install_kibana_assets",
                  "install_ilm_policies",
                  "install_ml_model",
                  "install_index_template_pipelines",
                  "remove_legacy_templates",
                  "update_current_write_indices",
                  "install_transforms",
                  "delete_previous_pipelines",
                  "save_archive_entries_from_assets_map",
                  "update_so"
                ],
                "type": "string"
              },
              "started_at": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "latest_install_failed_attempts": {
            "description": "Latest failed install errors",
            "items": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "error": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "stack": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "target_version": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "type": "string"
          },
          "namespaces": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "verification_key_id": {
            "nullable": true,
            "type": "string"
          },
          "verification_status": {
            "enum": [
              "verified",
              "unverified",
              "unknown"
            ],
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "installed_kibana",
          "installed_es",
          "name",
          "version",
          "install_status",
          "install_version",
          "install_started_at",
          "install_source",
          "verification_status",
          "latest_install_failed_attempts"
        ],
        "title": "Installation info object",
        "type": "object"
      },
      "kibana_saved_object_type": {
        "enum": [
          "dashboard",
          "visualization",
          "search",
          "index-pattern",
          "map",
          "lens",
          "ml-module",
          "security-rule",
          "csp_rule_template"
        ],
        "title": "Kibana saved object asset type",
        "type": "string"
      },
      "kql_with_filters": {
        "description": "Defines properties for a filter",
        "oneOf": [
          {
            "description": "the KQL query to filter the documents with.",
            "example": "field.environment : \"production\" and service.name : \"my-service\"",
            "type": "string"
          },
          {
            "properties": {
              "filters": {
                "items": {
                  "$ref": "#/components/schemas/filter"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "kqlQuery": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "title": "KQL with filters"
      },
      "kql_with_filters_good": {
        "description": "The KQL query used to define the good events.",
        "oneOf": [
          {
            "description": "the KQL query to filter the documents with.",
            "example": "request.latency \u003c= 150 and request.status_code : \"2xx\"",
            "type": "string"
          },
          {
            "properties": {
              "filters": {
                "items": {
                  "$ref": "#/components/schemas/filter"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "kqlQuery": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "title": "KQL query for good events"
      },
      "kql_with_filters_total": {
        "description": "The KQL query used to define all events.",
        "oneOf": [
          {
            "description": "the KQL query to filter the documents with.",
            "example": "field.environment : \"production\" and service.name : \"my-service\"",
            "type": "string"
          },
          {
            "properties": {
              "filters": {
                "items": {
                  "$ref": "#/components/schemas/filter"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "kqlQuery": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "title": "KQL query for all events"
      },
      "name_rule": {
        "description": "The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.\n",
        "type": "string"
      },
      "namespaces": {
        "description": "An array of space identifiers for sharing the data view between multiple spaces.",
        "items": {
          "default": "default",
          "type": "string"
        },
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "new_package_policy": {
        "description": "",
        "properties": {
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "inputs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/new_package_policy_input"
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "output_id": {
            "deprecated": true,
            "type": "string"
          },
          "overrides": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "package": {
            "$ref": "#/components/schemas/package_policy_package_info"
          },
          "policy_id": {
            "deprecated": true,
            "type": "string"
          },
          "policy_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "secret_references": {
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "vars": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "inputs",
          "name"
        ],
        "title": "New package policy",
        "type": "object"
      },
      "new_package_policy_input": {
        "properties": {
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "enabled": {
            "type": "boolean"
          },
          "processors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "streams": {
            "additionalProperties": {
              "$ref": "#/components/schemas/new_package_policy_input_stream"
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "type": {
            "type": "string"
          },
          "vars": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "type",
          "enabled"
        ],
        "type": "object"
      },
      "new_package_policy_input_stream": {
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "vars": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        }
      },
      "notify_when": {
        "deprecated": true,
        "description": "Deprecated in 8.13.0. Use the `notify_when` property in the action `frequency` object instead. Indicates how often alerts generate actions. NOTE: You cannot specify `notify_when` at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.\n",
        "enum": [
          "onActionGroupChange",
          "onActiveAlert",
          "onThrottleInterval"
        ],
        "example": "onActiveAlert",
        "type": "string"
      },
      "notify_when_action": {
        "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.\n",
        "enum": [
          "onActionGroupChange",
          "onActiveAlert",
          "onThrottleInterval"
        ],
        "example": "onActiveAlert",
        "type": "string"
      },
      "objective": {
        "description": "Defines properties for the SLO objective",
        "properties": {
          "target": {
            "description": "the target objective between 0 and 1 excluded",
            "example": 0.99,
            "exclusiveMaximum": true,
            "exclusiveMinimum": true,
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          },
          "timesliceTarget": {
            "description": "the target objective for each slice when using a timeslices budgeting method",
            "example": 0.995,
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          },
          "timesliceWindow": {
            "description": "the duration of each slice when using a timeslices budgeting method, as {duraton}{unit}",
            "example": "5m",
            "type": "string"
          }
        },
        "required": [
          "target"
        ],
        "title": "Objective",
        "type": "object"
      },
      "output_create_request": {
        "discriminator": {
          "mapping": {
            "elasticsearch": "#/components/schemas/output_create_request_elasticsearch",
            "kafka": "#/components/schemas/output_create_request_kafka",
            "logstash": "#/components/schemas/output_create_request_logstash",
            "remote_elasticsearch": "#/components/schemas/output_create_request_remote_elasticsearch"
          },
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/output_create_request_elasticsearch"
          },
          {
            "$ref": "#/components/schemas/output_create_request_kafka"
          },
          {
            "$ref": "#/components/schemas/output_create_request_logstash"
          },
          {
            "$ref": "#/components/schemas/output_create_request_remote_elasticsearch"
          }
        ],
        "title": "Output"
      },
      "output_create_request_elasticsearch": {
        "properties": {
          "ca_sha256": {
            "type": "string"
          },
          "ca_trusted_fingerprint": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "config_yaml": {
            "type": "string"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "preset": {
            "enum": [
              "balanced",
              "custom",
              "throughput",
              "scale",
              "latency"
            ],
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          },
          "shipper": {
            "properties": {
              "compression_level": {
                "type": "number"
              },
              "disk_queue_compression_enabled": {
                "type": "boolean"
              },
              "disk_queue_enabled": {
                "type": "boolean"
              },
              "disk_queue_encryption_enabled": {
                "type": "boolean"
              },
              "disk_queue_max_size": {
                "type": "number"
              },
              "disk_queue_path": {
                "type": "string"
              },
              "loadbalance": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "ssl": {
            "properties": {
              "certificate": {
                "type": "string"
              },
              "certificate_authorities": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "key": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": {
            "enum": [
              "elasticsearch"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "elasticsearch",
        "type": "object"
      },
      "output_create_request_kafka": {
        "properties": {
          "auth_type": {
            "type": "string"
          },
          "broker_timeout": {
            "type": "number"
          },
          "ca_sha256": {
            "type": "string"
          },
          "ca_trusted_fingerprint": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "compression": {
            "type": "string"
          },
          "compression_level": {
            "type": "number"
          },
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "config_yaml": {
            "type": "string"
          },
          "connection_type": {
            "enum": [
              "plaintext",
              "encryption"
            ],
            "type": "string"
          },
          "headers": {
            "items": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "partition": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          },
          "random": {
            "properties": {
              "group_events": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "required_acks": {
            "type": "number"
          },
          "round_robin": {
            "properties": {
              "group_events": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "sasl": {
            "properties": {
              "mechanism": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "secrets": {
            "properties": {
              "password": {
                "type": "string"
              },
              "ssl": {
                "properties": {
                  "key": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "shipper": {
            "properties": {
              "compression_level": {
                "type": "number"
              },
              "disk_queue_compression_enabled": {
                "type": "boolean"
              },
              "disk_queue_enabled": {
                "type": "boolean"
              },
              "disk_queue_encryption_enabled": {
                "type": "boolean"
              },
              "disk_queue_max_size": {
                "type": "number"
              },
              "disk_queue_path": {
                "type": "string"
              },
              "loadbalance": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "ssl": {
            "properties": {
              "certificate": {
                "type": "string"
              },
              "certificate_authorities": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "key": {
                "type": "string"
              },
              "verification_mode": {
                "enum": [
                  "none",
                  "full",
                  "certificate",
                  "strict"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "timeout": {
            "type": "number"
          },
          "topic": {
            "type": "string"
          },
          "topics": {
            "deprecated": true,
            "description": "Use topic instead.",
            "items": {
              "properties": {
                "topic": {
                  "type": "string"
                },
                "when": {
                  "deprecated": true,
                  "description": "Deprecated, kafka output do not support conditionnal topics anymore.",
                  "properties": {
                    "condition": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "type": {
            "enum": [
              "kafka"
            ],
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type",
          "topics",
          "auth_type",
          "hosts"
        ],
        "title": "kafka",
        "type": "object"
      },
      "output_create_request_logstash": {
        "properties": {
          "ca_sha256": {
            "type": "string"
          },
          "ca_trusted_fingerprint": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "config_yaml": {
            "type": "string"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          },
          "secrets": {
            "properties": {
              "ssl": {
                "properties": {
                  "key": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "shipper": {
            "properties": {
              "compression_level": {
                "type": "number"
              },
              "disk_queue_compression_enabled": {
                "type": "boolean"
              },
              "disk_queue_enabled": {
                "type": "boolean"
              },
              "disk_queue_encryption_enabled": {
                "type": "boolean"
              },
              "disk_queue_max_size": {
                "type": "number"
              },
              "disk_queue_path": {
                "type": "string"
              },
              "loadbalance": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "ssl": {
            "properties": {
              "certificate": {
                "type": "string"
              },
              "certificate_authorities": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "key": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": {
            "enum": [
              "logstash"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "hosts",
          "type"
        ],
        "title": "logstash",
        "type": "object"
      },
      "output_create_request_remote_elasticsearch": {
        "properties": {
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "secrets": {
            "properties": {
              "service_token": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "service_token": {
            "type": "string"
          },
          "type": {
            "enum": [
              "remote_elasticsearch"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "remote_elasticsearch",
        "type": "object"
      },
      "output_update_request": {
        "discriminator": {
          "mapping": {
            "elasticsearch": "#/components/schemas/output_update_request_elasticsearch",
            "kafka": "#/components/schemas/output_update_request_kafka",
            "logstash": "#/components/schemas/output_update_request_logstash"
          },
          "propertyName": "type"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/output_update_request_elasticsearch"
          },
          {
            "$ref": "#/components/schemas/output_update_request_kafka"
          },
          {
            "$ref": "#/components/schemas/output_update_request_logstash"
          }
        ],
        "title": "Output"
      },
      "output_update_request_elasticsearch": {
        "properties": {
          "ca_sha256": {
            "type": "string"
          },
          "ca_trusted_fingerprint": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "config_yaml": {
            "type": "string"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "preset": {
            "enum": [
              "balanced",
              "custom",
              "throughput",
              "scale",
              "latency"
            ],
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          },
          "shipper": {
            "properties": {
              "compression_level": {
                "type": "number"
              },
              "disk_queue_compression_enabled": {
                "type": "boolean"
              },
              "disk_queue_enabled": {
                "type": "boolean"
              },
              "disk_queue_encryption_enabled": {
                "type": "boolean"
              },
              "disk_queue_max_size": {
                "type": "number"
              },
              "disk_queue_path": {
                "type": "string"
              },
              "loadbalance": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "ssl": {
            "properties": {
              "certificate": {
                "type": "string"
              },
              "certificate_authorities": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "key": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": {
            "enum": [
              "elasticsearch"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "hosts",
          "type"
        ],
        "title": "elasticsearch",
        "type": "object"
      },
      "output_update_request_kafka": {
        "properties": {
          "auth_type": {
            "type": "string"
          },
          "broker_timeout": {
            "type": "number"
          },
          "ca_sha256": {
            "type": "string"
          },
          "ca_trusted_fingerprint": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "compression": {
            "type": "string"
          },
          "compression_level": {
            "type": "number"
          },
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "config_yaml": {
            "type": "string"
          },
          "connection_type": {
            "enum": [
              "plaintext",
              "encryption"
            ],
            "type": "string"
          },
          "headers": {
            "items": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "partition": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          },
          "random": {
            "properties": {
              "group_events": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "required_acks": {
            "type": "number"
          },
          "round_robin": {
            "properties": {
              "group_events": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "sasl": {
            "properties": {
              "mechanism": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "shipper": {
            "properties": {
              "compression_level": {
                "type": "number"
              },
              "disk_queue_compression_enabled": {
                "type": "boolean"
              },
              "disk_queue_enabled": {
                "type": "boolean"
              },
              "disk_queue_encryption_enabled": {
                "type": "boolean"
              },
              "disk_queue_max_size": {
                "type": "number"
              },
              "disk_queue_path": {
                "type": "string"
              },
              "loadbalance": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "ssl": {
            "properties": {
              "certificate": {
                "type": "string"
              },
              "certificate_authorities": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "key": {
                "type": "string"
              },
              "verification_mode": {
                "enum": [
                  "none",
                  "full",
                  "certificate",
                  "strict"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "timeout": {
            "type": "number"
          },
          "topic": {
            "type": "string"
          },
          "topics": {
            "deprecated": true,
            "description": "Use topic instead.",
            "items": {
              "properties": {
                "topic": {
                  "type": "string"
                },
                "when": {
                  "deprecated": true,
                  "description": "Deprecated, kafka output do not support conditionnal topics anymore.",
                  "properties": {
                    "condition": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "type": {
            "enum": [
              "kafka"
            ],
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "kafka",
        "type": "object"
      },
      "output_update_request_logstash": {
        "properties": {
          "ca_sha256": {
            "type": "string"
          },
          "ca_trusted_fingerprint": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "config_yaml": {
            "type": "string"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "id": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "is_default_monitoring": {
            "type": "boolean"
          },
          "is_internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "proxy_id": {
            "type": "string"
          },
          "shipper": {
            "properties": {
              "compression_level": {
                "type": "number"
              },
              "disk_queue_compression_enabled": {
                "type": "boolean"
              },
              "disk_queue_enabled": {
                "type": "boolean"
              },
              "disk_queue_encryption_enabled": {
                "type": "boolean"
              },
              "disk_queue_max_size": {
                "type": "number"
              },
              "disk_queue_path": {
                "type": "string"
              },
              "loadbalance": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "ssl": {
            "properties": {
              "certificate": {
                "type": "string"
              },
              "certificate_authorities": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "key": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": {
            "enum": [
              "logstash"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "logstash",
        "type": "object"
      },
      "package_info": {
        "properties": {
          "assets": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "conditions": {
            "properties": {
              "elasticsearch": {
                "properties": {
                  "subscription": {
                    "enum": [
                      "basic",
                      "gold",
                      "platinum",
                      "enterprise"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "kibana": {
                "properties": {
                  "versions": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "data_streams": {
            "items": {
              "properties": {
                "ingeset_pipeline": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "package": {
                  "type": "string"
                },
                "release": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "vars": {
                  "items": {
                    "properties": {
                      "default": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "default"
                    ],
                    "type": "object"
                  },
                  "type": "array",
                  "x-go-type-skip-optional-pointer": true
                }
              },
              "required": [
                "title",
                "name",
                "release",
                "ingeset_pipeline",
                "type",
                "package"
              ],
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "description": {
            "type": "string"
          },
          "download": {
            "type": "string"
          },
          "elasticsearch": {
            "properties": {
              "privileges": {
                "properties": {
                  "cluster": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "format_version": {
            "type": "string"
          },
          "icons": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "internal": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "readme": {
            "type": "string"
          },
          "release": {
            "deprecated": true,
            "description": "release label is deprecated, derive from the version instead (packages follow semver)",
            "enum": [
              "experimental",
              "beta",
              "ga"
            ],
            "type": "string"
          },
          "screenshots": {
            "items": {
              "properties": {
                "path": {
                  "type": "string"
                },
                "size": {
                  "type": "string"
                },
                "src": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "src",
                "path"
              ],
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "source": {
            "properties": {
              "license": {
                "enum": [
                  "Apache-2.0",
                  "Elastic-2.0"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "title",
          "version",
          "description",
          "type",
          "categories",
          "conditions",
          "assets",
          "format_version",
          "download",
          "path"
        ],
        "title": "Package information",
        "type": "object"
      },
      "package_install_source": {
        "enum": [
          "upload",
          "registry",
          "bundled"
        ],
        "type": "string"
      },
      "package_item": {
        "items": {
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "$ref": "#/components/schemas/package_item_type"
            }
          },
          "required": [
            "id",
            "type"
          ],
          "type": "object"
        },
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "package_item_type": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/kibana_saved_object_type"
          },
          {
            "$ref": "#/components/schemas/elasticsearch_asset_type"
          }
        ]
      },
      "package_policy": {
        "allOf": [
          {
            "properties": {
              "id": {
                "type": "string"
              },
              "inputs": {
                "oneOf": [
                  {
                    "items": {},
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  },
                  {
                    "type": "object",
                    "x-go-type-skip-optional-pointer": true
                  }
                ]
              },
              "revision": {
                "type": "number"
              }
            },
            "required": [
              "id",
              "revision"
            ],
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/new_package_policy"
          }
        ],
        "title": "Package policy"
      },
      "package_policy_package_info": {
        "properties": {
          "name": {
            "type": "string"
          },
          "requires_root": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "version"
        ],
        "type": "object"
      },
      "package_policy_request": {
        "properties": {
          "description": {
            "description": "Package policy description",
            "example": "my description",
            "type": "string"
          },
          "force": {
            "description": "Force package policy creation even if package is not verified, or if the agent policy is managed.",
            "type": "boolean"
          },
          "id": {
            "description": "Package policy unique identifier",
            "type": "string"
          },
          "inputs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/package_policy_request_input"
            },
            "description": "Package policy inputs (see integration documentation to know what inputs are available)",
            "example": {
              "nginx-logfile": {
                "enabled": true,
                "streams": {
                  "nginx.access": {
                    "enabled": true,
                    "vars": {
                      "ignore_older": "72h",
                      "paths": [
                        "/var/log/nginx/access.log*"
                      ],
                      "preserve_original_event": false,
                      "tags": [
                        "nginx-access"
                      ]
                    }
                  }
                }
              }
            },
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "description": "Package policy name (should be unique)",
            "example": "nginx-123",
            "type": "string"
          },
          "namespace": {
            "description": "The package policy namespace. Leave blank to inherit the agent policy's namespace.",
            "example": "customnamespace",
            "type": "string"
          },
          "overrides": {
            "description": "Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.",
            "nullable": true,
            "properties": {
              "inputs": {
                "type": "object",
                "x-go-type-skip-optional-pointer": true
              }
            },
            "type": "object"
          },
          "package": {
            "properties": {
              "name": {
                "description": "Package name",
                "example": "nginx",
                "type": "string"
              },
              "version": {
                "description": "Package version",
                "example": "1.6.0",
                "type": "string"
              }
            },
            "required": [
              "name",
              "version"
            ],
            "type": "object"
          },
          "policy_id": {
            "deprecated": true,
            "description": "Agent policy ID where that package policy will be added",
            "example": "agent-policy-id",
            "type": "string"
          },
          "policy_ids": {
            "description": "Agent policy IDs where that package policy will be added",
            "example": [
              "agent-policy-id"
            ],
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "vars": {
            "description": "Package root level variable (see integration documentation for more information)",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "name",
          "package"
        ],
        "title": "Package Policy Request",
        "type": "object"
      },
      "package_policy_request_input": {
        "properties": {
          "enabled": {
            "description": "enable or disable that input, (default to true)",
            "type": "boolean"
          },
          "streams": {
            "additionalProperties": {
              "$ref": "#/components/schemas/package_policy_request_input_stream"
            },
            "description": "Input streams (see integration documentation to know what streams are available)",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "vars": {
            "description": "Input level variable (see integration documentation for more information)",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "package_policy_request_input_stream": {
        "properties": {
          "enabled": {
            "description": "enable or disable that stream, (default to true)",
            "type": "boolean"
          },
          "vars": {
            "description": "Stream level variable (see integration documentation for more information)",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "package_status": {
        "enum": [
          "installed",
          "installing",
          "install_failed",
          "not_installed"
        ],
        "type": "string"
      },
      "package_usage_stats": {
        "properties": {
          "agent_policy_count": {
            "type": "integer"
          }
        },
        "required": [
          "agent_policy_count"
        ],
        "title": "Package usage stats",
        "type": "object"
      },
      "params_es_query_rule": {
        "oneOf": [
          {
            "description": "The parameters for an Elasticsearch query rule that uses ES|QL to define the query. This functionality is in technical pre view and may be changed or removed in a future release. Elastic will work to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.\n",
            "properties": {
              "aggField": {
                "$ref": "#/components/schemas/aggfield"
              },
              "aggType": {
                "$ref": "#/components/schemas/aggtype"
              },
              "esqlQuery": {
                "properties": {
                  "esql": {
                    "description": "The query definition, which uses Elasticsearch Query Language.",
                    "type": "string"
                  }
                },
                "required": [
                  "esql"
                ],
                "type": "object"
              },
              "excludeHitsFromPreviousRun": {
                "$ref": "#/components/schemas/excludehitsfrompreviousrun"
              },
              "groupBy": {
                "$ref": "#/components/schemas/groupby"
              },
              "searchType": {
                "description": "The type of query, in this case a query that uses Elasticsearch Query Language (ES|QL).",
                "enum": [
                  "esqlQuery"
                ],
                "example": "esqlQuery",
                "type": "string"
              },
              "size": {
                "description": "When `searchType` is `esqlQuery`, this property is required but it does not affect the rule behavior.\n",
                "example": 0,
                "type": "integer"
              },
              "termSize": {
                "$ref": "#/components/schemas/termsize"
              },
              "threshold": {
                "description": "The threshold value that is used with the `thresholdComparator`. When `searchType` is `esqlQuery`, this property is required and must be set to zero.\n",
                "items": {
                  "maximum": 0,
                  "minimum": 0,
                  "type": "integer"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "thresholdComparator": {
                "description": "The comparison function for the threshold. When `searchType` is `esqlQuery`, this property is required and must be set to \"\u003e\". Since the `threshold` value must be `0`, the result is that an alert occurs whenever the query returns results.\n",
                "enum": [
                  "\u003e"
                ],
                "example": "\u003e",
                "type": "string"
              },
              "timeField": {
                "$ref": "#/components/schemas/timefield"
              },
              "timeWindowSize": {
                "$ref": "#/components/schemas/timewindowsize"
              },
              "timeWindowUnit": {
                "$ref": "#/components/schemas/timewindowunit"
              }
            },
            "required": [
              "esqlQuery",
              "searchType",
              "size",
              "threshold",
              "thresholdComparator",
              "timeWindowSize",
              "timeWindowUnit"
            ],
            "type": "object",
            "x-technical-preview": true
          },
          {
            "description": "The parameters for an Elasticsearch query rule that uses KQL or Lucene to define the query.",
            "properties": {
              "aggField": {
                "$ref": "#/components/schemas/aggfield"
              },
              "aggType": {
                "$ref": "#/components/schemas/aggtype"
              },
              "excludeHitsFromPreviousRun": {
                "$ref": "#/components/schemas/excludehitsfrompreviousrun"
              },
              "groupBy": {
                "$ref": "#/components/schemas/groupby"
              },
              "searchConfiguration": {
                "description": "The query definition, which uses KQL or Lucene to fetch the documents from Elasticsearch.",
                "properties": {
                  "filter": {
                    "items": {
                      "$ref": "#/components/schemas/filter"
                    },
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "index": {
                    "description": "The indices to query.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "x-go-type-skip-optional-pointer": true
                      }
                    ]
                  },
                  "query": {
                    "properties": {
                      "language": {
                        "example": "kuery",
                        "type": "string"
                      },
                      "query": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "searchType": {
                "description": "The type of query, in this case a text-based query that uses KQL or Lucene.",
                "enum": [
                  "searchSource"
                ],
                "example": "searchSource",
                "type": "string"
              },
              "size": {
                "$ref": "#/components/schemas/size"
              },
              "termField": {
                "$ref": "#/components/schemas/termfield"
              },
              "termSize": {
                "$ref": "#/components/schemas/termsize"
              },
              "threshold": {
                "$ref": "#/components/schemas/threshold"
              },
              "thresholdComparator": {
                "$ref": "#/components/schemas/thresholdcomparator"
              },
              "timeField": {
                "$ref": "#/components/schemas/timefield"
              },
              "timeWindowSize": {
                "$ref": "#/components/schemas/timewindowsize"
              },
              "timeWindowUnit": {
                "$ref": "#/components/schemas/timewindowunit"
              }
            },
            "required": [
              "searchType",
              "size",
              "threshold",
              "thresholdComparator",
              "timeWindowSize",
              "timeWindowUnit"
            ],
            "type": "object"
          },
          {
            "description": "The parameters for an Elasticsearch query rule that uses Elasticsearch Query DSL to define the query.",
            "properties": {
              "aggField": {
                "$ref": "#/components/schemas/aggfield"
              },
              "aggType": {
                "$ref": "#/components/schemas/aggtype"
              },
              "esQuery": {
                "description": "The query definition, which uses Elasticsearch Query DSL.",
                "type": "string"
              },
              "excludeHitsFromPreviousRun": {
                "$ref": "#/components/schemas/excludehitsfrompreviousrun"
              },
              "groupBy": {
                "$ref": "#/components/schemas/groupby"
              },
              "index": {
                "description": "The indices to query.",
                "oneOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "searchType": {
                "default": "esQuery",
                "description": "The type of query, in this case a query that uses Elasticsearch Query DSL.",
                "enum": [
                  "esQuery"
                ],
                "example": "esQuery",
                "type": "string"
              },
              "size": {
                "$ref": "#/components/schemas/size"
              },
              "termField": {
                "$ref": "#/components/schemas/termfield"
              },
              "termSize": {
                "$ref": "#/components/schemas/termsize"
              },
              "threshold": {
                "$ref": "#/components/schemas/threshold"
              },
              "thresholdComparator": {
                "$ref": "#/components/schemas/thresholdcomparator"
              },
              "timeField": {
                "$ref": "#/components/schemas/timefield"
              },
              "timeWindowSize": {
                "$ref": "#/components/schemas/timewindowsize"
              },
              "timeWindowUnit": {
                "$ref": "#/components/schemas/timewindowunit"
              }
            },
            "required": [
              "esQuery",
              "index",
              "threshold",
              "thresholdComparator",
              "timeField",
              "timeWindowSize",
              "timeWindowUnit"
            ],
            "type": "object"
          }
        ]
      },
      "params_index_threshold_rule": {
        "description": "The parameters for an index threshold rule.",
        "properties": {
          "aggField": {
            "$ref": "#/components/schemas/aggfield"
          },
          "aggType": {
            "$ref": "#/components/schemas/aggtype"
          },
          "filterKuery": {
            "description": "A KQL expression thats limits the scope of alerts.",
            "type": "string"
          },
          "groupBy": {
            "$ref": "#/components/schemas/groupby"
          },
          "index": {
            "description": "The indices to query.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "termField": {
            "$ref": "#/components/schemas/termfield"
          },
          "termSize": {
            "$ref": "#/components/schemas/termsize"
          },
          "threshold": {
            "$ref": "#/components/schemas/threshold"
          },
          "thresholdComparator": {
            "$ref": "#/components/schemas/thresholdcomparator"
          },
          "timeField": {
            "$ref": "#/components/schemas/timefield"
          },
          "timeWindowSize": {
            "$ref": "#/components/schemas/timewindowsize"
          },
          "timeWindowUnit": {
            "$ref": "#/components/schemas/timewindowunit"
          }
        },
        "required": [
          "index",
          "threshold",
          "thresholdComparator",
          "timeField",
          "timeWindowSize",
          "timeWindowUnit"
        ],
        "type": "object"
      },
      "params_property_apm_anomaly": {
        "properties": {
          "anomalySeverityType": {
            "description": "The anomaly threshold value",
            "enum": [
              "critical",
              "major",
              "minor",
              "warning"
            ],
            "type": "string"
          },
          "environment": {
            "description": "The environment from APM",
            "type": "string"
          },
          "serviceName": {
            "description": "The service name from APM",
            "type": "string"
          },
          "transactionType": {
            "description": "The transaction type from APM",
            "type": "string"
          },
          "windowSize": {
            "description": "The window size",
            "example": 6,
            "type": "number"
          },
          "windowUnit": {
            "description": "The window size unit",
            "enum": [
              "m",
              "h",
              "d"
            ],
            "type": "string"
          }
        },
        "required": [
          "windowSize",
          "windowUnit",
          "environment",
          "anomalySeverityType"
        ]
      },
      "params_property_apm_error_count": {
        "properties": {
          "environment": {
            "description": "The environment from APM",
            "type": "string"
          },
          "errorGroupingKey": {
            "type": "string"
          },
          "groupBy": {
            "default": [
              "service.name",
              "service.environment"
            ],
            "items": {
              "enum": [
                "service.name",
                "service.environment",
                "transaction.name",
                "error.grouping_key"
              ],
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true,
            "x-go-type-skip-optional-pointer": true
          },
          "serviceName": {
            "description": "The service name from APM",
            "type": "string"
          },
          "threshold": {
            "description": "The error count threshold value",
            "type": "number"
          },
          "windowSize": {
            "description": "The window size",
            "example": 6,
            "type": "number"
          },
          "windowUnit": {
            "description": "The window size unit",
            "enum": [
              "m",
              "h",
              "d"
            ],
            "type": "string"
          }
        },
        "required": [
          "windowSize",
          "windowUnit",
          "threshold",
          "environment"
        ]
      },
      "params_property_apm_transaction_duration": {
        "properties": {
          "aggregationType": {
            "enum": [
              "avg",
              "95th",
              "99th"
            ],
            "type": "string"
          },
          "environment": {
            "type": "string"
          },
          "groupBy": {
            "default": [
              "service.name",
              "service.environment",
              "transaction.type"
            ],
            "items": {
              "enum": [
                "service.name",
                "service.environment",
                "transaction.type",
                "transaction.name"
              ],
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true,
            "x-go-type-skip-optional-pointer": true
          },
          "serviceName": {
            "description": "The service name from APM",
            "type": "string"
          },
          "threshold": {
            "description": "The latency threshold value",
            "type": "number"
          },
          "transactionName": {
            "description": "The transaction name from APM",
            "type": "string"
          },
          "transactionType": {
            "description": "The transaction type from APM",
            "type": "string"
          },
          "windowSize": {
            "description": "The window size",
            "example": 6,
            "type": "number"
          },
          "windowUnit": {
            "description": "ç",
            "enum": [
              "m",
              "h",
              "d"
            ],
            "type": "string"
          }
        },
        "required": [
          "windowSize",
          "windowUnit",
          "threshold",
          "environment",
          "aggregationType"
        ]
      },
      "params_property_apm_transaction_error_rate": {
        "properties": {
          "environment": {
            "description": "The environment from APM",
            "type": "string"
          },
          "groupBy": {
            "default": [
              "service.name",
              "service.environment",
              "transaction.type"
            ],
            "items": {
              "enum": [
                "service.name",
                "service.environment",
                "transaction.type",
                "transaction.name"
              ],
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true,
            "x-go-type-skip-optional-pointer": true
          },
          "serviceName": {
            "description": "The service name from APM",
            "type": "string"
          },
          "threshold": {
            "description": "The error rate threshold value",
            "type": "number"
          },
          "transactionName": {
            "description": "The transaction name from APM",
            "type": "string"
          },
          "transactionType": {
            "description": "The transaction type from APM",
            "type": "string"
          },
          "windowSize": {
            "description": "The window size",
            "example": 6,
            "type": "number"
          },
          "windowUnit": {
            "description": "The window size unit",
            "enum": [
              "m",
              "h",
              "d"
            ],
            "type": "string"
          }
        },
        "required": [
          "windowSize",
          "windowUnit",
          "threshold",
          "environment"
        ]
      },
      "params_property_infra_inventory": {
        "properties": {
          "alertOnNoData": {
            "type": "boolean"
          },
          "criteria": {
            "items": {
              "properties": {
                "comparator": {
                  "enum": [
                    "\u003c",
                    "\u003c=",
                    "\u003e",
                    "\u003e=",
                    "between",
                    "outside"
                  ],
                  "type": "string"
                },
                "customMetric": {
                  "properties": {
                    "aggregation": {
                      "enum": [
                        "avg",
                        "max",
                        "min",
                        "rate"
                      ],
                      "type": "string"
                    },
                    "field": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "custom"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "metric": {
                  "enum": [
                    "count",
                    "cpu",
                    "diskLatency",
                    "load",
                    "memory",
                    "memoryTotal",
                    "tx",
                    "rx",
                    "logRate",
                    "diskIOReadBytes",
                    "diskIOWriteBytes",
                    "s3TotalRequests",
                    "s3NumberOfObjects",
                    "s3BucketSize",
                    "s3DownloadBytes",
                    "s3UploadBytes",
                    "rdsConnections",
                    "rdsQueriesExecuted",
                    "rdsActiveTransactions",
                    "rdsLatency",
                    "sqsMessagesVisible",
                    "sqsMessagesDelayed",
                    "sqsMessagesSent",
                    "sqsMessagesEmpty",
                    "sqsOldestMessage",
                    "custom"
                  ],
                  "type": "string"
                },
                "sourceId": {
                  "type": "string"
                },
                "threshold": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array",
                  "x-go-type-skip-optional-pointer": true
                },
                "timeSize": {
                  "type": "number"
                },
                "timeUnit": {
                  "enum": [
                    "s",
                    "m",
                    "h",
                    "d"
                  ],
                  "type": "string"
                },
                "warningComparator": {
                  "enum": [
                    "\u003c",
                    "\u003c=",
                    "\u003e",
                    "\u003e=",
                    "between",
                    "outside"
                  ],
                  "type": "string"
                },
                "warningThreshold": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array",
                  "x-go-type-skip-optional-pointer": true
                }
              },
              "type": "object"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "filterQuery": {
            "type": "string"
          },
          "filterQueryText": {
            "type": "string"
          },
          "nodeType": {
            "enum": [
              "host",
              "pod",
              "container",
              "awsEC2",
              "awsS3",
              "awsSQS",
              "awsRDS"
            ],
            "type": "string"
          },
          "sourceId": {
            "type": "string"
          }
        }
      },
      "params_property_infra_metric_threshold": {
        "properties": {
          "alertOnGroupDisappear": {
            "type": "boolean"
          },
          "alertOnNoData": {
            "type": "boolean"
          },
          "criteria": {
            "items": {
              "oneOf": [
                {
                  "properties": {
                    "aggType": {
                      "enum": [
                        "avg",
                        "max",
                        "min",
                        "cardinality",
                        "rate",
                        "count",
                        "sum",
                        "p95",
                        "p99",
                        "custom"
                      ],
                      "type": "string"
                    },
                    "comparator": {
                      "enum": [
                        "\u003c",
                        "\u003c=",
                        "\u003e",
                        "\u003e=",
                        "between",
                        "outside"
                      ],
                      "type": "string"
                    },
                    "metric": {
                      "type": "string"
                    },
                    "threshold": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "timeSize": {
                      "type": "number"
                    },
                    "timeUnit": {
                      "type": "string"
                    },
                    "warningComparator": {
                      "enum": [
                        "\u003c",
                        "\u003c=",
                        "\u003e",
                        "\u003e=",
                        "between",
                        "outside"
                      ],
                      "type": "string"
                    },
                    "warningThreshold": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    }
                  },
                  "title": "non count criterion",
                  "type": "object"
                },
                {
                  "properties": {
                    "aggType": {
                      "enum": [
                        "count"
                      ],
                      "type": "string"
                    },
                    "comparator": {
                      "enum": [
                        "\u003c",
                        "\u003c=",
                        "\u003e",
                        "\u003e=",
                        "between",
                        "outside"
                      ],
                      "type": "string"
                    },
                    "threshold": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "timeSize": {
                      "type": "number"
                    },
                    "timeUnit": {
                      "type": "string"
                    },
                    "warningComparator": {
                      "enum": [
                        "\u003c",
                        "\u003c=",
                        "\u003e",
                        "\u003e=",
                        "between",
                        "outside"
                      ],
                      "type": "string"
                    },
                    "warningThreshold": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    }
                  },
                  "title": "count criterion",
                  "type": "object"
                },
                {
                  "properties": {
                    "aggType": {
                      "enum": [
                        "custom"
                      ],
                      "type": "string"
                    },
                    "comparator": {
                      "enum": [
                        "\u003c",
                        "\u003c=",
                        "\u003e",
                        "\u003e=",
                        "between",
                        "outside"
                      ],
                      "type": "string"
                    },
                    "customMetric": {
                      "items": {
                        "oneOf": [
                          {
                            "properties": {
                              "aggType": {
                                "enum": [
                                  "avg",
                                  "sum",
                                  "max",
                                  "min",
                                  "cardinality"
                                ],
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "properties": {
                              "aggType": {
                                "enum": [
                                  "count"
                                ],
                                "type": "string"
                              },
                              "filter": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "equation": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "threshold": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "timeSize": {
                      "type": "number"
                    },
                    "timeUnit": {
                      "type": "string"
                    },
                    "warningComparator": {
                      "enum": [
                        "\u003c",
                        "\u003c=",
                        "\u003e",
                        "\u003e=",
                        "between",
                        "outside"
                      ],
                      "type": "string"
                    },
                    "warningThreshold": {
                      "items": {
                        "type": "number"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    }
                  },
                  "title": "custom criterion",
                  "type": "object"
                }
              ]
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "filterQuery": {
            "type": "string"
          },
          "groupBy": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              }
            ]
          },
          "sourceId": {
            "type": "string"
          }
        }
      },
      "params_property_log_threshold": {
        "oneOf": [
          {
            "properties": {
              "count": {
                "properties": {
                  "comparator": {
                    "enum": [
                      "more than",
                      "more than or equals",
                      "less than",
                      "less than or equals",
                      "equals",
                      "does not equal",
                      "matches",
                      "does not match",
                      "matches phrase",
                      "does not match phrase"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "example": 100,
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "criteria": {
                "items": {
                  "properties": {
                    "comparator": {
                      "enum": [
                        "more than",
                        "more than or equals",
                        "less than",
                        "less than or equals",
                        "equals",
                        "does not equal",
                        "matches",
                        "does not match",
                        "matches phrase",
                        "does not match phrase"
                      ],
                      "type": "string"
                    },
                    "field": {
                      "example": "my.field",
                      "type": "string"
                    },
                    "value": {
                      "oneOf": [
                        {
                          "example": 42,
                          "type": "number"
                        },
                        {
                          "example": "value",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "groupBy": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "logView": {
                "properties": {
                  "logViewId": {
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "log-view-reference"
                    ],
                    "example": "log-view-reference",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "timeSize": {
                "example": 6,
                "type": "number"
              },
              "timeUnit": {
                "enum": [
                  "s",
                  "m",
                  "h",
                  "d"
                ],
                "type": "string"
              }
            },
            "required": [
              "count",
              "timeSize",
              "timeUnit",
              "logView"
            ],
            "title": "Count",
            "type": "object"
          },
          {
            "properties": {
              "count": {
                "properties": {
                  "comparator": {
                    "enum": [
                      "more than",
                      "more than or equals",
                      "less than",
                      "less than or equals",
                      "equals",
                      "does not equal",
                      "matches",
                      "does not match",
                      "matches phrase",
                      "does not match phrase"
                    ],
                    "type": "string"
                  },
                  "value": {
                    "example": 100,
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "criteria": {
                "items": {
                  "items": {
                    "properties": {
                      "comparator": {
                        "enum": [
                          "more than",
                          "more than or equals",
                          "less than",
                          "less than or equals",
                          "equals",
                          "does not equal",
                          "matches",
                          "does not match",
                          "matches phrase",
                          "does not match phrase"
                        ],
                        "type": "string"
                      },
                      "field": {
                        "example": "my.field",
                        "type": "string"
                      },
                      "value": {
                        "oneOf": [
                          {
                            "example": 42,
                            "type": "number"
                          },
                          {
                            "example": "value",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "type": "object"
                  },
                  "maxItems": 2,
                  "minItems": 2,
                  "type": "array",
                  "x-go-type-skip-optional-pointer": true
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "groupBy": {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "logView": {
                "properties": {
                  "logViewId": {
                    "type": "string"
                  },
                  "type": {
                    "enum": [
                      "log-view-reference"
                    ],
                    "example": "log-view-reference",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "timeSize": {
                "example": 6,
                "type": "number"
              },
              "timeUnit": {
                "enum": [
                  "s",
                  "m",
                  "h",
                  "d"
                ],
                "type": "string"
              }
            },
            "required": [
              "count",
              "timeSize",
              "timeUnit",
              "logView"
            ],
            "title": "Ratio",
            "type": "object"
          }
        ]
      },
      "params_property_slo_burn_rate": {
        "properties": {
          "burnRateThreshold": {
            "description": "The burn rate threshold used to trigger the alert",
            "example": 14.4,
            "type": "number"
          },
          "longWindow": {
            "description": "The duration of the long window used to compute the burn rate",
            "properties": {
              "unit": {
                "description": "The duration unit",
                "example": "h",
                "type": "string"
              },
              "value": {
                "description": "The duration value",
                "example": 6,
                "type": "number"
              }
            },
            "type": "object"
          },
          "maxBurnRateThreshold": {
            "description": "The maximum burn rate threshold value defined by the SLO error budget",
            "example": 168,
            "type": "number"
          },
          "shortWindow": {
            "description": "The duration of the short window used to compute the burn rate",
            "properties": {
              "unit": {
                "description": "The duration unit",
                "example": "m",
                "type": "string"
              },
              "value": {
                "description": "The duration value",
                "example": 30,
                "type": "number"
              }
            },
            "type": "object"
          },
          "sloId": {
            "description": "The SLO identifier used by the rule",
            "example": "8853df00-ae2e-11ed-90af-09bb6422b258",
            "type": "string"
          }
        }
      },
      "params_property_synthetics_monitor_status": {
        "properties": {
          "availability": {
            "properties": {
              "range": {
                "type": "number"
              },
              "rangeUnit": {
                "type": "string"
              },
              "threshold": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "filters": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "deprecated": true,
                "properties": {
                  "monitor.type": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "observer.geo.name": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "url.port": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  }
                },
                "type": "object"
              }
            ]
          },
          "isAutoGenerated": {
            "type": "boolean"
          },
          "locations": {
            "deprecated": true,
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "numTimes": {
            "type": "number"
          },
          "search": {
            "type": "string"
          },
          "shouldCheckAvailability": {
            "type": "boolean"
          },
          "shouldCheckStatus": {
            "type": "boolean"
          },
          "timerange": {
            "deprecated": true,
            "properties": {
              "from": {
                "type": "string"
              },
              "to": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "timerangeCount": {
            "type": "number"
          },
          "timerangeUnit": {
            "type": "string"
          },
          "version": {
            "type": "number"
          }
        },
        "required": [
          "numTimes",
          "shouldCheckStatus",
          "shouldCheckAvailability"
        ]
      },
      "params_property_synthetics_uptime_tls": {
        "properties": {
          "certAgeThreshold": {
            "type": "number"
          },
          "certExpirationThreshold": {
            "type": "number"
          },
          "search": {
            "type": "string"
          }
        }
      },
      "proxies": {
        "properties": {
          "certificate": {
            "type": "string"
          },
          "certificate_authorities": {
            "type": "string"
          },
          "certificate_key": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "proxy_headers": {
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "url"
        ],
        "title": "Fleet Proxy",
        "type": "object"
      },
      "references": {
        "description": "Objects with `name`, `id`, and `type` properties that describe the other saved objects that this object references. Use `name` in attributes to refer to the other saved object, but never the `id`, which can update automatically during migrations or import and export.\n",
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "rule_response_properties": {
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "api_key_created_by_user": {
            "description": "Indicates whether the API key that is associated with the rule was created by the user.",
            "example": false,
            "type": "boolean"
          },
          "api_key_owner": {
            "description": "The owner of the API key that is associated with the rule and used to run background tasks.\n",
            "example": "elastic",
            "nullable": true,
            "type": "string"
          },
          "consumer": {
            "description": "The application or feature that owns the rule. For example, `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.",
            "example": "alerts",
            "type": "string"
          },
          "created_at": {
            "description": "The date and time that the rule was created.",
            "example": "2022-12-05T23:36:58.284Z",
            "format": "date-time",
            "type": "string"
          },
          "created_by": {
            "description": "The identifier for the user that created the rule.",
            "example": "elastic",
            "nullable": true,
            "type": "string"
          },
          "enabled": {
            "description": "Indicates whether the rule is currently enabled.",
            "example": true,
            "type": "boolean"
          },
          "execution_status": {
            "properties": {
              "last_duration": {
                "example": 55,
                "type": "integer"
              },
              "last_execution_date": {
                "example": "2022-12-06T00:13:43.890Z",
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "example": "ok",
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "The identifier for the rule.",
            "example": "b530fed0-74f5-11ed-9801-35303b735aef",
            "type": "string"
          },
          "last_run": {
            "properties": {
              "alerts_count": {
                "properties": {
                  "active": {
                    "type": "integer"
                  },
                  "ignored": {
                    "type": "integer"
                  },
                  "new": {
                    "type": "integer"
                  },
                  "recovered": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "outcome": {
                "example": "succeeded",
                "type": "string"
              },
              "outcome_msg": {
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              },
              "outcome_order": {
                "type": "integer"
              },
              "warning": {
                "example": null,
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "mute_all": {
            "example": false,
            "type": "boolean"
          },
          "muted_alert_ids": {
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "name": {
            "description": "The name of the rule.",
            "example": "cluster_health_rule",
            "type": "string"
          },
          "next_run": {
            "example": "2022-12-06T00:14:43.818Z",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "notify_when": {
            "description": "Indicates how often alerts generate actions.",
            "nullable": true,
            "type": "string"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for the rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "revision": {
            "description": "The rule revision number.",
            "type": "integer"
          },
          "rule_type_id": {
            "description": "The identifier for the type of rule. For example, `.es-query`, `.index-threshold`, `logs.alert.document.count`, `monitoring_alert_cluster_health`, `siem.thresholdRule`, or `xpack.ml.anomaly_detection_alert`.\n",
            "example": "monitoring_alert_cluster_health",
            "type": "string"
          },
          "running": {
            "description": "Indicates whether the rule is running.",
            "type": "boolean"
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "scheduled_task_id": {
            "example": "b530fed0-74f5-11ed-9801-35303b735aef",
            "type": "string"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          },
          "updated_at": {
            "description": "The date and time that the rule was updated most recently.",
            "example": "2022-12-05T23:36:58.284Z",
            "type": "string"
          },
          "updated_by": {
            "description": "The identifier for the user that updated this rule most recently.",
            "example": "elastic",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "actions",
          "api_key_owner",
          "consumer",
          "created_at",
          "created_by",
          "enabled",
          "execution_status",
          "id",
          "mute_all",
          "muted_alert_ids",
          "name",
          "params",
          "rule_type_id",
          "schedule",
          "tags",
          "throttle",
          "updated_at",
          "updated_by"
        ],
        "title": "Rule response properties",
        "type": "object"
      },
      "runtimefieldmap": {
        "description": "A map of runtime field definitions by field name.",
        "properties": {
          "script": {
            "properties": {
              "source": {
                "description": "Script for the runtime field.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "Mapping type of the runtime field.",
            "type": "string"
          }
        },
        "required": [
          "script",
          "type"
        ],
        "type": "object"
      },
      "saved_object_type": {
        "oneOf": [
          {
            "enum": [
              "dashboard",
              "visualization",
              "search",
              "index_pattern",
              "map",
              "lens",
              "security_rule",
              "csp_rule_template",
              "ml_module",
              "tag",
              "osquery_pack_asset",
              "osquery_saved_query"
            ],
            "type": "string"
          },
          {
            "enum": [
              "index",
              "component_template",
              "ingest_pipeline",
              "index_template",
              "ilm_policy",
              "transform",
              "data_stream_ilm_policy",
              "ml_model"
            ],
            "type": "string"
          }
        ],
        "title": "Saved Object type"
      },
      "schedule": {
        "description": "The check interval, which specifies how frequently the rule conditions are checked. The interval is specified in seconds, minutes, hours, or days.",
        "properties": {
          "interval": {
            "example": "1m",
            "type": "string"
          }
        },
        "type": "object"
      },
      "search_result": {
        "properties": {
          "description": {
            "type": "string"
          },
          "download": {
            "type": "string"
          },
          "icons": {
            "type": "string"
          },
          "installationInfo": {
            "$ref": "#/components/schemas/installation_info"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "savedObject": {
            "deprecated": true,
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "download",
          "icons",
          "name",
          "path",
          "title",
          "type",
          "version",
          "status"
        ],
        "title": "Search result",
        "type": "object"
      },
      "settings": {
        "description": "Defines properties for SLO settings.",
        "properties": {
          "frequency": {
            "default": "1m",
            "description": "Configure how often the transform runs, default 1m",
            "example": "5m",
            "type": "string"
          },
          "preventInitialBackfill": {
            "default": false,
            "description": "Prevents the transform from backfilling data when it starts.",
            "example": true,
            "type": "boolean"
          },
          "syncDelay": {
            "default": "1m",
            "description": "The synch delay to apply to the transform. Default 1m",
            "example": "5m",
            "type": "string"
          }
        },
        "title": "Settings",
        "type": "object"
      },
      "size": {
        "description": "The number of documents to pass to the configured actions when the threshold condition is met.\n",
        "type": "integer"
      },
      "slo_definition_response": {
        "properties": {
          "budgetingMethod": {
            "$ref": "#/components/schemas/budgeting_method"
          },
          "createdAt": {
            "description": "The creation date",
            "example": "2023-01-12T10:03:19.000Z",
            "type": "string"
          },
          "description": {
            "description": "The description of the SLO.",
            "example": "My SLO description",
            "type": "string"
          },
          "enabled": {
            "description": "Indicate if the SLO is enabled",
            "example": true,
            "type": "boolean"
          },
          "groupBy": {
            "description": "optional group by field to use to generate an SLO per distinct value",
            "example": "some.field",
            "type": "string"
          },
          "id": {
            "description": "The identifier of the SLO.",
            "example": "8853df00-ae2e-11ed-90af-09bb6422b258",
            "type": "string"
          },
          "indicator": {
            "discriminator": {
              "mapping": {
                "sli.apm.transactionDuration": "#/components/schemas/indicator_properties_apm_latency",
                "sli.apm.transactionErrorRate": "#/components/schemas/indicator_properties_apm_availability",
                "sli.histogram.custom": "#/components/schemas/indicator_properties_histogram",
                "sli.kql.custom": "#/components/schemas/indicator_properties_custom_kql",
                "sli.metric.custom": "#/components/schemas/indicator_properties_custom_metric",
                "sli.metric.timeslice": "#/components/schemas/indicator_properties_timeslice_metric"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/indicator_properties_custom_kql"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_availability"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_latency"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_custom_metric"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_histogram"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_timeslice_metric"
              }
            ]
          },
          "name": {
            "description": "The name of the SLO.",
            "example": "My Service SLO",
            "type": "string"
          },
          "objective": {
            "$ref": "#/components/schemas/objective"
          },
          "revision": {
            "description": "The SLO revision",
            "example": 2,
            "type": "number"
          },
          "settings": {
            "$ref": "#/components/schemas/settings"
          },
          "tags": {
            "description": "List of tags",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "timeWindow": {
            "$ref": "#/components/schemas/time_window"
          },
          "updatedAt": {
            "description": "The last update date",
            "example": "2023-01-12T10:03:19.000Z",
            "type": "string"
          },
          "version": {
            "description": "The internal SLO version",
            "example": 2,
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "indicator",
          "timeWindow",
          "budgetingMethod",
          "objective",
          "settings",
          "revision",
          "enabled",
          "groupBy",
          "tags",
          "createdAt",
          "updatedAt",
          "version"
        ],
        "title": "SLO definition response",
        "type": "object"
      },
      "slo_with_summary_response": {
        "properties": {
          "budgetingMethod": {
            "$ref": "#/components/schemas/budgeting_method"
          },
          "createdAt": {
            "description": "The creation date",
            "example": "2023-01-12T10:03:19.000Z",
            "type": "string"
          },
          "description": {
            "description": "The description of the SLO.",
            "example": "My SLO description",
            "type": "string"
          },
          "enabled": {
            "description": "Indicate if the SLO is enabled",
            "example": true,
            "type": "boolean"
          },
          "groupBy": {
            "description": "optional group by field to use to generate an SLO per distinct value",
            "example": "some.field",
            "type": "string"
          },
          "id": {
            "description": "The identifier of the SLO.",
            "example": "8853df00-ae2e-11ed-90af-09bb6422b258",
            "type": "string"
          },
          "indicator": {
            "discriminator": {
              "mapping": {
                "sli.apm.transactionDuration": "#/components/schemas/indicator_properties_apm_latency",
                "sli.apm.transactionErrorRate": "#/components/schemas/indicator_properties_apm_availability",
                "sli.histogram.custom": "#/components/schemas/indicator_properties_histogram",
                "sli.kql.custom": "#/components/schemas/indicator_properties_custom_kql",
                "sli.metric.custom": "#/components/schemas/indicator_properties_custom_metric",
                "sli.metric.timeslice": "#/components/schemas/indicator_properties_timeslice_metric"
              },
              "propertyName": "type"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/indicator_properties_custom_kql"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_availability"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_latency"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_custom_metric"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_histogram"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_timeslice_metric"
              }
            ]
          },
          "instanceId": {
            "description": "the value derived from the groupBy field, if present, otherwise '*'",
            "example": "host-abcde",
            "type": "string"
          },
          "name": {
            "description": "The name of the SLO.",
            "example": "My Service SLO",
            "type": "string"
          },
          "objective": {
            "$ref": "#/components/schemas/objective"
          },
          "revision": {
            "description": "The SLO revision",
            "example": 2,
            "type": "number"
          },
          "settings": {
            "$ref": "#/components/schemas/settings"
          },
          "summary": {
            "$ref": "#/components/schemas/summary"
          },
          "tags": {
            "description": "List of tags",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "timeWindow": {
            "$ref": "#/components/schemas/time_window"
          },
          "updatedAt": {
            "description": "The last update date",
            "example": "2023-01-12T10:03:19.000Z",
            "type": "string"
          },
          "version": {
            "description": "The internal SLO version",
            "example": 2,
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "indicator",
          "timeWindow",
          "budgetingMethod",
          "objective",
          "settings",
          "revision",
          "summary",
          "enabled",
          "groupBy",
          "instanceId",
          "tags",
          "createdAt",
          "updatedAt",
          "version"
        ],
        "title": "SLO response",
        "type": "object"
      },
      "sourcefilters": {
        "description": "The array of field names you want to filter out in Discover.",
        "items": {
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "required": [
            "value"
          ],
          "type": "object"
        },
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "summary": {
        "description": "The SLO computed data",
        "properties": {
          "errorBudget": {
            "$ref": "#/components/schemas/error_budget"
          },
          "sliValue": {
            "example": 0.9836,
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/summary_status"
          }
        },
        "required": [
          "status",
          "sliValue",
          "errorBudget"
        ],
        "title": "Summary",
        "type": "object"
      },
      "summary_status": {
        "enum": [
          "NO_DATA",
          "HEALTHY",
          "DEGRADING",
          "VIOLATED"
        ],
        "example": "HEALTHY",
        "title": "summary status",
        "type": "string"
      },
      "swap_data_view_request_object": {
        "properties": {
          "delete": {
            "description": "Deletes referenced saved object if all references are removed.",
            "type": "boolean"
          },
          "forId": {
            "description": "Limit the affected saved objects to one or more by identifier.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-go-type-skip-optional-pointer": true
              }
            ]
          },
          "forType": {
            "description": "Limit the affected saved objects by type.",
            "type": "string"
          },
          "fromId": {
            "description": "The saved object reference to change.",
            "type": "string"
          },
          "fromType": {
            "description": "Specify the type of the saved object reference to alter. The default value is `index-pattern` for data views.\n",
            "type": "string"
          },
          "toId": {
            "description": "New saved object reference value to replace the old value.",
            "type": "string"
          }
        },
        "required": [
          "fromId",
          "toId"
        ],
        "title": "Data view reference swap request",
        "type": "object"
      },
      "tags": {
        "default": [],
        "description": "The tags for the rule.",
        "items": {
          "type": "string"
        },
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "termfield": {
        "description": "The names of up to four fields that are used for grouping the aggregation. This property is required when `groupBy` is `top`.\n",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          }
        ]
      },
      "termsize": {
        "description": "This property is required when `groupBy` is `top`. It specifies the number of groups to check against the threshold and therefore limits the number of alerts on high cardinality fields.\n",
        "type": "integer"
      },
      "threshold": {
        "description": "The threshold value that is used with the `thresholdComparator`. If the `thresholdComparator` is `between` or `notBetween`, you must specify the boundary values.\n",
        "items": {
          "example": 4000,
          "type": "integer"
        },
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "thresholdcomparator": {
        "description": "The comparison function for the threshold. For example, \"is above\", \"is above or equals\", \"is below\", \"is below or equals\", \"is between\", and \"is not between\".",
        "enum": [
          "\u003e",
          "\u003e=",
          "\u003c",
          "\u003c=",
          "between",
          "notBetween"
        ],
        "example": "\u003e",
        "type": "string"
      },
      "throttle": {
        "default": null,
        "deprecated": true,
        "description": "Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.\n",
        "example": "10m",
        "nullable": true,
        "type": "string"
      },
      "throttle_action": {
        "default": null,
        "description": "The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if `notify_when` is set to `onThrottleInterval`. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.\n",
        "example": "10m",
        "nullable": true,
        "type": "string"
      },
      "time_window": {
        "description": "Defines properties for the SLO time window",
        "properties": {
          "duration": {
            "description": "the duration formatted as {duration}{unit}. Accepted values for rolling: 7d, 30d, 90d. Accepted values for calendar aligned: 1w (weekly) or 1M (monthly)",
            "example": "30d",
            "type": "string"
          },
          "type": {
            "description": "Indicates weither the time window is a rolling or a calendar aligned time window.",
            "enum": [
              "rolling",
              "calendarAligned"
            ],
            "example": "rolling",
            "type": "string"
          }
        },
        "required": [
          "duration",
          "type"
        ],
        "title": "Time window",
        "type": "object"
      },
      "timefield": {
        "description": "The field that is used to calculate the time window.",
        "type": "string"
      },
      "timefieldname": {
        "description": "The timestamp field name, which you use for time-based data views.",
        "type": "string"
      },
      "timeslice_metric_basic_metric_with_field": {
        "properties": {
          "aggregation": {
            "description": "The aggregation type of the metric.",
            "enum": [
              "sum",
              "avg",
              "min",
              "max",
              "std_deviation",
              "last_value",
              "cardinality"
            ],
            "example": "sum",
            "type": "string"
          },
          "field": {
            "description": "The field of the metric.",
            "example": "processor.processed",
            "type": "string"
          },
          "filter": {
            "description": "The filter to apply to the metric.",
            "example": "processor.outcome: \"success\"",
            "type": "string"
          },
          "name": {
            "description": "The name of the metric. Only valid options are A-Z",
            "example": "A",
            "pattern": "^[A-Z]$",
            "type": "string"
          }
        },
        "required": [
          "name",
          "aggregation",
          "field"
        ],
        "title": "Timeslice Metric Basic Metric with Field",
        "type": "object"
      },
      "timeslice_metric_doc_count_metric": {
        "properties": {
          "aggregation": {
            "description": "The aggregation type of the metric. Only valid option is \"doc_count\"",
            "enum": [
              "doc_count"
            ],
            "example": "doc_count",
            "type": "string"
          },
          "filter": {
            "description": "The filter to apply to the metric.",
            "example": "processor.outcome: \"success\"",
            "type": "string"
          },
          "name": {
            "description": "The name of the metric. Only valid options are A-Z",
            "example": "A",
            "pattern": "^[A-Z]$",
            "type": "string"
          }
        },
        "required": [
          "name",
          "aggregation"
        ],
        "title": "Timeslice Metric Doc Count Metric",
        "type": "object"
      },
      "timeslice_metric_percentile_metric": {
        "properties": {
          "aggregation": {
            "description": "The aggregation type of the metric. Only valid option is \"percentile\"",
            "enum": [
              "percentile"
            ],
            "example": "percentile",
            "type": "string"
          },
          "field": {
            "description": "The field of the metric.",
            "example": "processor.processed",
            "type": "string"
          },
          "filter": {
            "description": "The filter to apply to the metric.",
            "example": "processor.outcome: \"success\"",
            "type": "string"
          },
          "name": {
            "description": "The name of the metric. Only valid options are A-Z",
            "example": "A",
            "pattern": "^[A-Z]$",
            "type": "string"
          },
          "percentile": {
            "description": "The percentile value.",
            "example": 95,
            "type": "number"
          }
        },
        "required": [
          "name",
          "aggregation",
          "field",
          "percentile"
        ],
        "title": "Timeslice Metric Percentile Metric",
        "type": "object"
      },
      "timewindowsize": {
        "description": "The size of the time window (in `timeWindowUnit` units), which determines how far back to search for documents. Generally it should be a value higher than the rule check interval to avoid gaps in detection.\n",
        "example": 5,
        "type": "integer"
      },
      "timewindowunit": {
        "description": "The type of units for the time window: seconds, minutes, hours, or days.\n",
        "enum": [
          "s",
          "m",
          "h",
          "d"
        ],
        "example": "m",
        "type": "string"
      },
      "title": {
        "description": "Comma-separated list of data streams, indices, and aliases that you want to search. Supports wildcards (`*`).",
        "type": "string"
      },
      "type": {
        "description": "When set to `rollup`, identifies the rollup data views.",
        "type": "string"
      },
      "typemeta": {
        "description": "When you use rollup indices, contains the field list for the rollup data view API endpoints.",
        "properties": {
          "aggs": {
            "description": "A map of rollup restrictions by aggregation type and field name.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "params": {
            "description": "Properties for retrieving rollup fields.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "required": [
          "aggs",
          "params"
        ],
        "type": "object"
      },
      "typemeta_response": {
        "description": "When you use rollup indices, contains the field list for the rollup data view API endpoints.",
        "nullable": true,
        "properties": {
          "aggs": {
            "description": "A map of rollup restrictions by aggregation type and field name.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "params": {
            "description": "Properties for retrieving rollup fields.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          }
        },
        "type": "object"
      },
      "update_data_view_request_object": {
        "properties": {
          "data_view": {
            "description": "The data view properties you want to update. Only the specified properties are updated in the data view. Unspecified fields stay as they are persisted.\n",
            "properties": {
              "allowNoIndex": {
                "$ref": "#/components/schemas/allownoindex"
              },
              "fieldFormats": {
                "$ref": "#/components/schemas/fieldformats"
              },
              "fields": {
                "type": "object",
                "x-go-type-skip-optional-pointer": true
              },
              "name": {
                "type": "string"
              },
              "runtimeFieldMap": {
                "additionalProperties": {
                  "$ref": "#/components/schemas/runtimefieldmap"
                },
                "type": "object",
                "x-go-type-skip-optional-pointer": true
              },
              "sourceFilters": {
                "$ref": "#/components/schemas/sourcefilters"
              },
              "timeFieldName": {
                "$ref": "#/components/schemas/timefieldname"
              },
              "title": {
                "$ref": "#/components/schemas/title"
              },
              "type": {
                "$ref": "#/components/schemas/type"
              },
              "typeMeta": {
                "$ref": "#/components/schemas/typemeta"
              }
            },
            "type": "object"
          },
          "refresh_fields": {
            "default": false,
            "description": "Reloads the data view fields after the data view is updated.",
            "type": "boolean"
          }
        },
        "required": [
          "data_view"
        ],
        "title": "Update data view request",
        "type": "object"
      },
      "update_rule_request": {
        "description": "The update rule API request body varies depending on the type of rule and actions.\n",
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/actions"
          },
          "alert_delay": {
            "$ref": "#/components/schemas/alert_delay"
          },
          "name": {
            "description": "The name of the rule.",
            "example": "cluster_health_rule",
            "type": "string"
          },
          "notify_when": {
            "$ref": "#/components/schemas/notify_when"
          },
          "params": {
            "additionalProperties": true,
            "description": "The parameters for the rule.",
            "type": "object",
            "x-go-type-skip-optional-pointer": true
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "throttle": {
            "$ref": "#/components/schemas/throttle"
          }
        },
        "required": [
          "name",
          "params",
          "schedule"
        ],
        "title": "Update rule request",
        "type": "object"
      },
      "update_slo_request": {
        "description": "The update SLO API request body varies depending on the type of indicator, time window and budgeting method. Partial update is handled.\n",
        "properties": {
          "budgetingMethod": {
            "$ref": "#/components/schemas/budgeting_method"
          },
          "description": {
            "description": "A description for the SLO.",
            "type": "string"
          },
          "indicator": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/indicator_properties_custom_kql"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_availability"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_apm_latency"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_custom_metric"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_histogram"
              },
              {
                "$ref": "#/components/schemas/indicator_properties_timeslice_metric"
              }
            ]
          },
          "name": {
            "description": "A name for the SLO.",
            "type": "string"
          },
          "objective": {
            "$ref": "#/components/schemas/objective"
          },
          "settings": {
            "$ref": "#/components/schemas/settings"
          },
          "tags": {
            "description": "List of tags",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-go-type-skip-optional-pointer": true
          },
          "timeWindow": {
            "$ref": "#/components/schemas/time_window"
          }
        },
        "title": "Update SLO request",
        "type": "object"
      },
      "upgrade_agent": {
        "properties": {
          "force": {
            "description": "Force upgrade, skipping validation (should be used with caution)",
            "type": "boolean"
          },
          "skipRateLimitCheck": {
            "description": "Skip rate limit check for upgrade",
            "type": "boolean"
          },
          "source_uri": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "version"
        ],
        "title": "Upgrade agent",
        "type": "object"
      },
      "upgrade_agent_diff": {
        "items": {
          "items": {
            "$ref": "#/components/schemas/full_agent_policy_input"
          },
          "type": "array",
          "x-go-type-skip-optional-pointer": true
        },
        "title": "Package policy Upgrade dryrun",
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      },
      "upgrade_diff": {
        "items": {
          "allOf": [
            {
              "$ref": "#/components/schemas/package_policy"
            },
            {
              "allOf": [
                {
                  "$ref": "#/components/schemas/new_package_policy"
                },
                {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "missingVars": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "object",
              "x-go-type-skip-optional-pointer": true
            }
          ]
        },
        "title": "Package policy Upgrade dryrun",
        "type": "array",
        "x-go-type-skip-optional-pointer": true
      }
    },
    "securitySchemes": {
      "Access_API_Key": {
        "description": "e.g. Authorization: ApiKey base64AccessApiKey",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "Enrollment_API_Key": {
        "description": "e.g. Authorization: ApiKey base64EnrollmentApiKey",
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "apiKeyAuth": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Kibana HTTP APIs",
    "version": "0.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/agent_policies": {
      "get": {
        "description": "",
        "operationId": "agent-policy-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/page_size"
          },
          {
            "$ref": "#/components/parameters/page_index"
          },
          {
            "$ref": "#/components/parameters/kuery"
          },
          {
            "description": "When set to true, retrieve the related package policies for each agent policy.",
            "in": "query",
            "name": "full",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "When set to true, do not count how many agents are in the agent policy, this can improve performance if you are searching over a large number of agent policies. The \"agents\" property will always be 0 if set to true.",
            "in": "query",
            "name": "noAgentCount",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/agent_policy"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "page": {
                      "type": "number"
                    },
                    "perPage": {
                      "type": "number"
                    },
                    "total": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items",
                    "total",
                    "page",
                    "perPage"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "List agent policies",
        "tags": [
          "Elastic Agent policies"
        ]
      },
      "post": {
        "operationId": "create-agent-policy",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agent_policy_create_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/agent_policy"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [],
        "summary": "Create agent policy",
        "tags": [
          "Elastic Agent policies"
        ]
      }
    },
    "/agent_policies/delete": {
      "post": {
        "operationId": "delete-agent-policy",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "agentPolicyId": {
                    "type": "string"
                  },
                  "force": {
                    "description": "bypass validation checks that can prevent agent policy deletion",
                    "type": "boolean"
                  }
                },
                "required": [
                  "agentPolicyId"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "success"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Delete agent policy by ID",
        "tags": [
          "Elastic Agent policies"
        ]
      }
    },
    "/agent_policies/{agentPolicyId}": {
      "parameters": [
        {
          "in": "path",
          "name": "agentPolicyId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "description": "Get one agent policy",
        "operationId": "agent-policy-info",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/agent_policy"
                    }
                  },
                  "required": [
                    "item"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Get agent policy by ID",
        "tags": [
          "Elastic Agent policies"
        ]
      },
      "put": {
        "operationId": "update-agent-policy",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agent_policy_update_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/agent_policy"
                    }
                  },
                  "required": [
                    "item"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Update agent policy by ID",
        "tags": [
          "Elastic Agent policies"
        ]
      }
    },
    "/api/alerting/rule": {
      "post": {
        "description": "To create a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule you're creating. For example, you must have privileges for the **Management \u003e Stack rules** feature, **Analytics \u003e Discover** and **Machine Learning** features, **Observability** features, or **Security** features. If the rule has actions, you must also have `read` privileges for the **Management \u003e Actions and Connectors** feature. This API supports both key- and token-based authentication. To use key-based authentication, create an API key in Kibana and use it in the header of the API call. To use token-based authentication, provide a username and password; an API key that matches the current privileges of the user is created automatically. In both cases, the API key is subsequently used for authorization when the rule runs.\n",
        "operationId": "createRule",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "createEsQueryEsqlRuleRequest": {
                  "$ref": "#/components/examples/create_es_query_esql_rule_request"
                },
                "createEsQueryKqlRuleRequest": {
                  "$ref": "#/components/examples/create_es_query_kql_rule_request"
                },
                "createEsQueryRuleRequest": {
                  "$ref": "#/components/examples/create_es_query_rule_request"
                },
                "createIndexThresholdRuleRequest": {
                  "$ref": "#/components/examples/create_index_threshold_rule_request"
                },
                "createTrackingContainmentRuleRequest": {
                  "$ref": "#/components/examples/create_tracking_containment_rule_request"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/create_rule_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "createEsQueryEsqlRuleResponse": {
                    "$ref": "#/components/examples/create_es_query_esql_rule_response"
                  },
                  "createEsQueryKqlRuleResponse": {
                    "$ref": "#/components/examples/create_es_query_kql_rule_response"
                  },
                  "createEsQueryRuleResponse": {
                    "$ref": "#/components/examples/create_es_query_rule_response"
                  },
                  "createIndexThresholdRuleResponse": {
                    "$ref": "#/components/examples/create_index_threshold_rule_response"
                  },
                  "createTrackingContainmentRuleResponse": {
                    "$ref": "#/components/examples/create_tracking_containment_rule_response"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/rule_response_properties"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401_response"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404_response"
                }
              }
            },
            "description": "Object is not found."
          }
        },
        "summary": "Create a rule with a random identifier",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/alerting/rule/{ruleId}": {
      "get": {
        "description": "You must have `read` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rules you're seeking. For example, the **Management \u003e Stack Rules** feature, **Analytics \u003e Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To get rules associated with the **Stack Monitoring** feature, use the `monitoring_user` built-in role.\n",
        "operationId": "getRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/rule_id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "getRuleResponse": {
                    "$ref": "#/components/examples/get_rule_response"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/rule_response_properties"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401_response"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404_response"
                }
              }
            },
            "description": "Object is not found."
          }
        },
        "summary": "Get rule details",
        "tags": [
          "alerting"
        ]
      },
      "post": {
        "description": "This API creates a rule with a specific rule identifier. If you omit the identifer, it is automatically generated. To create a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule you're creating. For example, you must have privileges for the **Management \u003e Stack rules** feature, **Analytics \u003e Discover** and **Machine Learning** features, **Observability** features, or **Security** features. If the rule has actions, you must also have `read` privileges for the **Management \u003e Actions and Connectors** feature. This API supports both key- and token-based authentication. To use key-based authentication, create an API key in Kibana and use it in the header of the API call. To use token-based authentication, provide a username and password; an API key that matches the current privileges of the user is created automatically. In both cases, the API key is subsequently used for authorization when the rule runs.\n",
        "operationId": "createRuleId",
        "parameters": [
          {
            "description": "An UUID v1 or v4 identifier for the rule. If you omit this parameter, an identifier is randomly generated.\n",
            "in": "path",
            "name": "ruleId",
            "required": true,
            "schema": {
              "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "createEsQueryEsqlRuleIdRequest": {
                  "$ref": "#/components/examples/create_es_query_esql_rule_request"
                },
                "createEsQueryKqlRuleIdRequest": {
                  "$ref": "#/components/examples/create_es_query_kql_rule_request"
                },
                "createEsQueryRuleIdRequest": {
                  "$ref": "#/components/examples/create_es_query_rule_request"
                },
                "createIndexThreholdRuleIdRequest": {
                  "$ref": "#/components/examples/create_index_threshold_rule_request"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/create_rule_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "createEsQueryEsqlRuleIdResponse": {
                    "$ref": "#/components/examples/create_es_query_esql_rule_response"
                  },
                  "createEsQueryKqlRuleIdResponse": {
                    "$ref": "#/components/examples/create_es_query_kql_rule_response"
                  },
                  "createEsQueryRuleIdResponse": {
                    "$ref": "#/components/examples/create_es_query_rule_response"
                  },
                  "createIndexThresholdRuleIdResponse": {
                    "$ref": "#/components/examples/create_index_threshold_rule_response"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/rule_response_properties"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401_response"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404_response"
                }
              }
            },
            "description": "Object is not found."
          }
        },
        "summary": "Create a rule",
        "tags": [
          "alerting"
        ]
      },
      "put": {
        "description": "To update a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule you're updating. For example, you must have privileges for the **Management \u003e Stack rules** feature, **Analytics \u003e Discover** and **Machine Learning** features, **Observability** features, or **Security** features. If the rule has actions, you must also have `read` privileges for the **Management \u003e Actions and Connectors** feature. This API supports both key- and token-based authentication. To use key-based authentication, create an API key in Kibana and use it in the header of the API call. To use token-based authentication, provide a username and password; an API key that matches the current privileges of the user is created automatically. In both cases, the API key is subsequently used for authorization when the rule runs. NOTE: If the API key has different privileges than the key that created or most recently updated the rule, the rule behavior might change. Though some properties are optional, when you update the rule the existing property values are overwritten with default values. Therefore, it is recommended to explicitly set all property values.\n",
        "operationId": "updateRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/rule_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "updateRuleRequest": {
                  "$ref": "#/components/examples/update_rule_request"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/update_rule_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "updateRuleResponse": {
                    "$ref": "#/components/examples/update_rule_response"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/rule_response_properties"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401_response"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404_response"
                }
              }
            },
            "description": "Object is not found."
          }
        },
        "summary": "Update a rule",
        "tags": [
          "alerting"
        ]
      },
      "delete": {
        "description": "To delete a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule you're deleting. For example, the **Management** \u003e **Stack Rules** feature, **Analytics** \u003e **Discover** or **Machine Learning** features, **Observability**, or **Security** features. WARNING: After you delete a rule, you cannot recover it. If the API key that is used by the rule was created automatically, it is deleted.\n",
        "operationId": "deleteRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/rule_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401_response"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404_response"
                }
              }
            },
            "description": "Object is not found."
          }
        },
        "summary": "Delete a rule",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/alerting/rules/_find": {
      "get": {
        "description": "You must have `read` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rules you're seeking. For example, you must have privileges for the **Management \u003e Stack rules** feature, **Analytics \u003e Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To find rules associated with the **Stack Monitoring** feature, use the `monitoring_user` built-in role.\n",
        "operationId": "findRules",
        "parameters": [
          {
            "description": "The default operator to use for the simple_query_string.",
            "example": "OR",
            "in": "query",
            "name": "default_search_operator",
            "schema": {
              "default": "OR",
              "type": "string"
            }
          },
          {
            "description": "The fields to return in the `attributes` key of the response.",
            "in": "query",
            "name": "fields",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "x-go-type-skip-optional-pointer": true
            }
          },
          {
            "description": "A KQL string that you filter with an attribute from your saved object. It should look like `savedObjectType.attributes.title: \"myTitle\"`. However, if you used a direct attribute of a saved object, such as `updatedAt`, you must define your filter, for example, `savedObjectType.updatedAt \u003e 2018-12-22`.\n",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters the rules that have a relation with the reference objects with a specific type and identifier.",
            "in": "query",
            "name": "has_reference",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "description": "The page number to return.",
            "example": 1,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of rules to return per page.",
            "example": 20,
            "in": "query",
            "name": "per_page",
            "schema": {
              "default": 20,
              "type": "integer"
            }
          },
          {
            "description": "An Elasticsearch simple_query_string query that filters the objects in the response.",
            "in": "query",
            "name": "search",
            "schema": {
              "example": "threshold +-test*",
              "type": "string"
            }
          },
          {
            "description": "The fields to perform the simple_query_string parsed query against.",
            "in": "query",
            "name": "search_fields",
            "schema": {
              "oneOf": [
                {
                  "example": "name",
                  "type": "string"
                },
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "x-go-type-skip-optional-pointer": true
                }
              ]
            }
          },
          {
            "description": "Determines which field is used to sort the results. The field must exist in the `attributes` key of the response.\n",
            "in": "query",
            "name": "sort_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Determines the sort order.",
            "example": "asc",
            "in": "query",
            "name": "sort_order",
            "schema": {
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "findConditionalActionRulesResponse": {
                    "$ref": "#/components/examples/find_rules_response_conditional_action"
                  },
                  "findRulesResponse": {
                    "$ref": "#/components/examples/find_rules_response"
                  }
                },
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/rule_response_properties"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "page": {
                      "type": "integer"
                    },
                    "per_page": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401_response"
                }
              }
            },
            "description": "Authorization information is missing or invalid."
          }
        },
        "summary": "Find rule information",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/data_views": {
      "get": {
        "operationId": "getAllDataViewsDefault",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "getAllDataViewsResponse": {
                    "$ref": "#/components/examples/get_data_views_response"
                  }
                },
                "schema": {
                  "properties": {
                    "data_view": {
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "namespaces": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array",
                            "x-go-type-skip-optional-pointer": true
                          },
                          "title": {
                            "type": "string"
                          },
                          "typeMeta": {
                            "type": "object",
                            "x-go-type-skip-optional-pointer": true
                          }
                        },
                        "type": "object"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400_response"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Get all data views",
        "tags": [
          "data views"
        ]
      }
    },
    "/api/data_views/data_view": {
      "post": {
        "operationId": "createDataViewDefaultw",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "createDataViewRequest": {
                  "$ref": "#/components/examples/create_data_view_request"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/create_data_view_request_object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_view_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400_response"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Create a data view",
        "tags": [
          "data views"
        ]
      }
    },
    "/api/data_views/data_view/{viewId}": {
      "get": {
        "operationId": "getDataViewDefault",
        "parameters": [
          {
            "$ref": "#/components/parameters/view_id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "getDataViewResponse": {
                    "$ref": "#/components/examples/get_data_view_response"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/data_view_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404_response"
                }
              }
            },
            "description": "Object is not found."
          }
        },
        "summary": "Get a data view",
        "tags": [
          "data views"
        ]
      },
      "post": {
        "operationId": "updateDataViewDefault",
        "parameters": [
          {
            "$ref": "#/components/parameters/view_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "updateDataViewRequest": {
                  "$ref": "#/components/examples/update_data_view_request"
                }
              },
              "schema": {
                "$ref": "#/components/schemas/update_data_view_request_object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_view_response_object"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400_response"
                }
              }
            },
            "description": "Bad request"
          }
        },
        "summary": "Update a data view",
        "tags": [
          "data views"
        ]
      },
      "delete": {
        "description": "WARNING: When you delete a data view, it cannot be recovered.\n",
        "operationId": "deleteDataViewDefault",
        "parameters": [
          {
            "$ref": "#/components/parameters/view_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404_response"
                }
              }
            },
            "description": "Object is not found."
          }
        },
        "summary": "Delete a data view",
        "tags": [
          "data views"
        ]
      }
    },
    "/api/saved_objects/_import": {
      "post": {
        "description": "Create sets of Kibana saved objects from a file created by the export API.\nSaved objects can be imported only into the same version, a newer minor on the same major, or the next major. Exported saved objects are not backwards compatible and cannot be imported into an older version of Kibana.\n\nThis functionality is in technical preview and may be changed or removed in a future release. Elastic will work to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.\n",
        "operationId": "importSavedObjectsDefault",
        "parameters": [
          {
            "description": "Creates copies of saved objects, regenerates each object ID, and resets the origin. When used, potential conflict errors are avoided. NOTE: This option cannot be used with the `overwrite` and `compatibilityMode` options.\n",
            "in": "query",
            "name": "createNewCopies",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Overwrites saved objects when they already exist. When used, potential conflict errors are automatically resolved by overwriting the destination object. NOTE: This option cannot be used with the `createNewCopies` option.\n",
            "in": "query",
            "name": "overwrite",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Applies various adjustments to the saved objects that are being imported to maintain compatibility between different Kibana versions. Use this option only if you encounter issues with imported saved objects. NOTE: This option cannot be used with the `createNewCopies` option.\n",
            "in": "query",
            "name": "compatibilityMode",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "examples": {
                "importObjectsRequest": {
                  "$ref": "#/components/examples/import_objects_request"
                }
              },
              "schema": {
                "properties": {
                  "file": {
                    "description": "A file exported using the export API. NOTE: The `savedObjects.maxImportExportSize` configuration setting limits the number of saved objects which may be included in this file. Similarly, the `savedObjects.maxImportPayloadBytes` setting limits the overall size of the file that can be imported.\n"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "importObjectsResponse": {
                    "$ref": "#/components/examples/import_objects_response"
                  }
                },
                "schema": {
                  "properties": {
                    "errors": {
                      "description": "Indicates the import was unsuccessful and specifies the objects that failed to import.\n\nNOTE: One object may result in multiple errors, which requires separate steps to resolve. For instance, a `missing_references` error and conflict error.\n",
                      "items": {
                        "type": "object",
                        "x-go-type-skip-optional-pointer": true
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "success": {
                      "description": "Indicates when the import was successfully completed. When set to false, some objects may not have been created. For additional information, refer to the `errors` and `successResults` properties.\n",
                      "type": "boolean"
                    },
                    "successCount": {
                      "description": "Indicates the number of successfully imported records.",
                      "type": "integer"
                    },
                    "successResults": {
                      "description": "Indicates the objects that are successfully imported, with any metadata if applicable.\n\nNOTE: Objects are created only when all resolvable errors are addressed, including conflicts and missing references. If objects are created as new copies, each entry in the `successResults` array includes a `destinationId` attribute.\n",
                      "items": {
                        "type": "object",
                        "x-go-type-skip-optional-pointer": true
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400_response"
                }
              }
            },
            "description": "Bad request."
          }
        },
        "summary": "Import saved objects",
        "tags": [
          "saved objects"
        ]
      }
    },
    "/enrollment_api_keys": {
      "get": {
        "operationId": "get-enrollment-api-keys",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/enrollment_api_key"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "list": {
                      "deprecated": true,
                      "items": {
                        "$ref": "#/components/schemas/enrollment_api_key"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "page": {
                      "type": "number"
                    },
                    "perPage": {
                      "type": "number"
                    },
                    "total": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items",
                    "page",
                    "perPage",
                    "total"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "List enrollment API keys",
        "tags": [
          "Fleet enrollment API keys"
        ]
      },
      "post": {
        "operationId": "create-enrollment-api-keys",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "action": {
                      "enum": [
                        "created"
                      ],
                      "type": "string"
                    },
                    "item": {
                      "$ref": "#/components/schemas/enrollment_api_key"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Create enrollment API key",
        "tags": [
          "Fleet enrollment API keys"
        ]
      }
    },
    "/epm/packages": {
      "get": {
        "operationId": "list-all-packages",
        "parameters": [
          {
            "description": "Whether to exclude the install status of each package. Enabling this option will opt in to caching for the response via `cache-control` headers. If you don't need up-to-date installation info for a package, and are querying for a list of available packages, providing this flag can improve performance substantially.",
            "in": "query",
            "name": "excludeInstallStatus",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Whether to return prerelease versions of packages (e.g. beta, rc, preview)",
            "in": "query",
            "name": "prerelease",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "deprecated": true,
            "in": "query",
            "name": "experimental",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/get_packages_response"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "List packages",
        "tags": [
          "Elastic Package Manager (EPM)"
        ]
      },
      "post": {
        "description": "",
        "operationId": "install-package-by-upload",
        "parameters": [
          {
            "description": "avoid erroring out on unexpected mapping update errors",
            "in": "query",
            "name": "ignoreMappingUpdateErrors",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Skip data stream rollover during index template mapping or settings update",
            "in": "query",
            "name": "skipDataStreamRollover",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/gzip": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            },
            "application/zip": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "_meta": {
                      "properties": {
                        "install_source": {
                          "$ref": "#/components/schemas/package_install_source"
                        }
                      },
                      "type": "object"
                    },
                    "items": {
                      "$ref": "#/components/schemas/package_item"
                    }
                  },
                  "required": [
                    "items"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "429": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Install by package by direct upload",
        "tags": [
          "Elastic Package Manager (EPM)"
        ]
      }
    },
    "/epm/packages/{pkgName}/{pkgVersion}": {
      "parameters": [
        {
          "in": "path",
          "name": "pkgName",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "pkgVersion",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "description": "Ignore if the package is fails signature verification",
          "in": "query",
          "name": "ignoreUnverified",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "description": "Return all fields from the package manifest, not just those supported by the Elastic Package Registry",
          "in": "query",
          "name": "full",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "description": "Whether to return prerelease versions of packages (e.g. beta, rc, preview)",
          "in": "query",
          "name": "prerelease",
          "schema": {
            "default": false,
            "type": "boolean"
          }
        }
      ],
      "get": {
        "operationId": "get-package",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "item": {
                          "$ref": "#/components/schemas/package_info"
                        }
                      }
                    },
                    {
                      "properties": {
                        "keepPoliciesUpToDate": {
                          "type": "boolean"
                        },
                        "latestVersion": {
                          "type": "string"
                        },
                        "licensePath": {
                          "type": "string"
                        },
                        "notice": {
                          "type": "string"
                        },
                        "savedObject": {
                          "deprecated": true,
                          "type": "object",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "status": {
                          "$ref": "#/components/schemas/package_status"
                        }
                      },
                      "required": [
                        "status",
                        "savedObject"
                      ]
                    }
                  ],
                  "type": "object",
                  "x-go-type-skip-optional-pointer": true
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "summary": "Get package",
        "tags": [
          "Elastic Package Manager (EPM)"
        ]
      },
      "post": {
        "description": "",
        "operationId": "install-package",
        "parameters": [
          {
            "description": "avoid erroring out on unexpected mapping update errors",
            "in": "query",
            "name": "ignoreMappingUpdateErrors",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Skip data stream rollover during index template mapping or settings update",
            "in": "query",
            "name": "skipDataStreamRollover",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "force": {
                    "type": "boolean"
                  },
                  "ignore_constraints": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "_meta": {
                      "properties": {
                        "install_source": {
                          "$ref": "#/components/schemas/package_install_source"
                        }
                      },
                      "type": "object"
                    },
                    "items": {
                      "$ref": "#/components/schemas/package_item"
                    }
                  },
                  "required": [
                    "items"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Install package",
        "tags": [
          "Elastic Package Manager (EPM)"
        ]
      },
      "put": {
        "description": "",
        "operationId": "update-package",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "keepPoliciesUpToDate": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "$ref": "#/components/schemas/package_item"
                    }
                  },
                  "required": [
                    "items"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Update package settings",
        "tags": [
          "Elastic Package Manager (EPM)"
        ]
      },
      "delete": {
        "operationId": "delete-package",
        "parameters": [
          {
            "description": "delete package even if policies used by agents",
            "in": "query",
            "name": "force",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "deprecated": true,
                "properties": {
                  "force": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "$ref": "#/components/schemas/package_item"
                    }
                  },
                  "required": [
                    "items"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Delete package",
        "tags": [
          "Elastic Package Manager (EPM)"
        ]
      }
    },
    "/fleet_server_hosts": {
      "get": {
        "operationId": "get-fleet-server-hosts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/fleet_server_host"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "page": {
                      "type": "integer"
                    },
                    "perPage": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "List Fleet Server hosts",
        "tags": [
          "Fleet Server hosts"
        ]
      },
      "post": {
        "operationId": "post-fleet-server-hosts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "host_urls": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "id": {
                    "type": "string"
                  },
                  "is_default": {
                    "type": "boolean"
                  },
                  "is_internal": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "proxy_id": {
                    "description": "The ID of the proxy to use for this fleet server host. See the proxies API for more information.",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "host_urls"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/fleet_server_host"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Create Fleet Server host",
        "tags": [
          "Fleet Server hosts"
        ]
      }
    },
    "/fleet_server_hosts/{itemId}": {
      "parameters": [
        {
          "in": "path",
          "name": "itemId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "get-one-fleet-server-hosts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/fleet_server_host"
                    }
                  },
                  "required": [
                    "item"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Get Fleet Server host by ID",
        "tags": [
          "Fleet Server hosts"
        ]
      },
      "put": {
        "operationId": "update-fleet-server-hosts",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "host_urls": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "is_default": {
                    "type": "boolean"
                  },
                  "is_internal": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "proxy_id": {
                    "description": "The ID of the proxy to use for this fleet server host. See the proxies API for more information.",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/fleet_server_host"
                    }
                  },
                  "required": [
                    "item"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Update Fleet Server host by ID",
        "tags": [
          "Fleet Server hosts"
        ]
      },
      "delete": {
        "operationId": "delete-fleet-server-hosts",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Delete Fleet Server host by ID",
        "tags": [
          "Fleet Server hosts"
        ]
      }
    },
    "/outputs": {
      "get": {
        "operationId": "get-outputs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/output_create_request"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "page": {
                      "type": "integer"
                    },
                    "perPage": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "List outputs",
        "tags": [
          "Fleet outputs"
        ]
      },
      "post": {
        "operationId": "post-outputs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/output_create_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/output_create_request"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Create output",
        "tags": [
          "Fleet outputs"
        ]
      }
    },
    "/outputs/{outputId}": {
      "parameters": [
        {
          "in": "path",
          "name": "outputId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "get-output",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/output_create_request"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Get output by ID",
        "tags": [
          "Fleet outputs"
        ]
      },
      "put": {
        "operationId": "update-output",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/output_update_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/output_update_request"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Update output by ID",
        "tags": [
          "Fleet outputs"
        ]
      },
      "delete": {
        "operationId": "delete-output",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Delete output by ID",
        "tags": [
          "Fleet outputs"
        ]
      }
    },
    "/package_policies": {
      "get": {
        "operationId": "get-package-policies",
        "parameters": [
          {
            "$ref": "#/components/parameters/page_size"
          },
          {
            "$ref": "#/components/parameters/page_index"
          },
          {
            "$ref": "#/components/parameters/kuery"
          },
          {
            "$ref": "#/components/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/package_policy"
                      },
                      "type": "array",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "page": {
                      "type": "number"
                    },
                    "perPage": {
                      "type": "number"
                    },
                    "total": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "security": [],
        "summary": "List package policies",
        "tags": [
          "Fleet package policies"
        ]
      },
      "post": {
        "operationId": "create-package-policy",
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/package_policy_request"
              }
            }
          },
          "description": "You should use inputs as an object and not use the deprecated inputs array."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/package_policy"
                    }
                  },
                  "required": [
                    "item"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "409": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Create package policy",
        "tags": [
          "Fleet package policies"
        ]
      }
    },
    "/package_policies/{packagePolicyId}": {
      "parameters": [
        {
          "in": "path",
          "name": "packagePolicyId",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "operationId": "get-package-policy",
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/package_policy"
                    }
                  },
                  "required": [
                    "item"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Get package policy by ID",
        "tags": [
          "Fleet package policies"
        ]
      },
      "put": {
        "operationId": "update-package-policy",
        "parameters": [
          {
            "$ref": "#/components/parameters/format"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/package_policy_request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/package_policy"
                    },
                    "sucess": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "item",
                    "sucess"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Update package policy by ID",
        "tags": [
          "Fleet package policies"
        ]
      },
      "delete": {
        "operationId": "delete-package-policy",
        "parameters": [
          {
            "in": "query",
            "name": "force",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Delete package policy by ID",
        "tags": [
          "Fleet package policies"
        ]
      }
    },
    "/s/{spaceId}/api/observability/slos": {
      "get": {
        "description": "You must have the `read` privileges for the **SLOs** feature in the **Observability** section of the Kibana feature privileges.\n",
        "operationId": "findSlosOp",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "description": "A valid kql query to filter the SLO with",
            "example": "slo.name:latency* and slo.tags : \"prod\"",
            "in": "query",
            "name": "kqlQuery",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The page to use for pagination, must be greater or equal than 1",
            "example": 1,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of SLOs returned by page",
            "example": 25,
            "in": "query",
            "name": "perPage",
            "schema": {
              "default": 25,
              "maximum": 5000,
              "type": "integer"
            }
          },
          {
            "description": "Sort by field",
            "example": "status",
            "in": "query",
            "name": "sortBy",
            "schema": {
              "default": "status",
              "enum": [
                "sli_value",
                "status",
                "error_budget_consumed",
                "error_budget_remaining"
              ],
              "type": "string"
            }
          },
          {
            "description": "Sort order",
            "example": "asc",
            "in": "query",
            "name": "sortDirection",
            "schema": {
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "description": "Hide stale SLOs from the list as defined by stale SLO threshold in SLO settings",
            "in": "query",
            "name": "hideStale",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/find_slo_response"
                }
              }
            },
            "description": "Successful request"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400_response"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401_response"
                }
              }
            },
            "description": "Unauthorized response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403_response"
                }
              }
            },
            "description": "Unauthorized response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404_response"
                }
              }
            },
            "description": "Not found response"
          }
        },
        "summary": "Get a paginated list of SLOs",
        "tags": [
          "slo"
        ]
      },
      "post": {
        "description": "You must have `all` privileges for the **SLOs** feature in the **Observability** section of the Kibana feature privileges.\n",
        "operationId": "createSloOp",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_slo_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/create_slo_response"
                }
              }
            },
            "description": "Successful request"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400_response"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401_response"
                }
              }
            },
            "description": "Unauthorized response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403_response"
                }
              }
            },
            "description": "Unauthorized response"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409_response"
                }
              }
            },
            "description": "Conflict - The SLO id already exists"
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ],
        "summary": "Create an SLO",
        "tags": [
          "slo"
        ]
      }
    },
    "/s/{spaceId}/api/observability/slos/{sloId}": {
      "get": {
        "description": "You must have the `read` privileges for the **SLOs** feature in the **Observability** section of the Kibana feature privileges.\n",
        "operationId": "getSloOp",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/slo_id"
          },
          {
            "description": "the specific instanceId used by the summary calculation",
            "example": "host-abcde",
            "in": "query",
            "name": "instanceId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/slo_with_summary_response"
                }
              }
            },
            "description": "Successful request"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400_response"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401_response"
                }
              }
            },
            "description": "Unauthorized response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403_response"
                }
              }
            },
            "description": "Unauthorized response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404_response"
                }
              }
            },
            "description": "Not found response"
          }
        },
        "summary": "Get an SLO",
        "tags": [
          "slo"
        ]
      },
      "put": {
        "description": "You must have the `write` privileges for the **SLOs** feature in the **Observability** section of the Kibana feature privileges.\n",
        "operationId": "updateSloOp",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/slo_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_slo_request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/slo_definition_response"
                }
              }
            },
            "description": "Successful request"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400_response"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401_response"
                }
              }
            },
            "description": "Unauthorized response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403_response"
                }
              }
            },
            "description": "Unauthorized response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404_response"
                }
              }
            },
            "description": "Not found response"
          }
        },
        "summary": "Update an SLO",
        "tags": [
          "slo"
        ]
      },
      "delete": {
        "description": "You must have the `write` privileges for the **SLOs** feature in the **Observability** section of the Kibana feature privileges.\n",
        "operationId": "deleteSloOp",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/slo_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful request"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400_response"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401_response"
                }
              }
            },
            "description": "Unauthorized response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403_response"
                }
              }
            },
            "description": "Unauthorized response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404_response"
                }
              }
            },
            "description": "Not found response"
          }
        },
        "summary": "Delete an SLO",
        "tags": [
          "slo"
        ]
      }
    },
    "/service_tokens": {
      "post": {
        "operationId": "generate-service-token",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "summary": "Create service token",
        "tags": [
          "Fleet service tokens"
        ]
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "servers": [
    {
      "url": "http://localhost:5622"
    }
  ],
  "tags": [
    {
      "name": "system"
    }
  ]
}
